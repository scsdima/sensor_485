

Microchip Technology PIC18 PRO Macro Assembler V1.12 build 49521 
                                                                                               Mon Oct 12 01:40:29 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	param0,global,class=BANK0,space=1,delta=1
    67  0000                     
    68                           	psect	mediumconst
    69  007D66                     __pmediumconst:
    70                           	opt stack 0
    71  007D66                     _syx_param_list:
    72                           	opt stack 0
    73  007D66  73                 	db	115
    74  007D67  69                 	db	105
    75  007D68  67                 	db	103
    76  007D69  6E                 	db	110
    77  007D6A  61                 	db	97
    78  007D6B  6C                 	db	108
    79  007D6C  00                 	db	0
    80  007D6D  00                 	db	0
    81  007D6E  00                 	db	0
    82  007D6F  00                 	db	0
    83  007D70  00                 	db	0
    84  007D71  00                 	db	0
    85  007D72  00                 	db	0
    86  007D73  00                 	db	0
    87  007D74  00                 	db	0
    88  007D75  00                 	db	0
    89  007D76  00                 	db	0
    90  007D77  00                 	db	0
    91  007D78  00                 	db	0
    92  007D79  00                 	db	0
    93  007D7A  00                 	db	0
    94  007D7B  03                 	db	3
    95  007D7C  69                 	db	105
    96  007D7D  6D                 	db	109
    97  007D7E  70                 	db	112
    98  007D7F  00                 	db	0
    99  007D80  00                 	db	0
   100  007D81  00                 	db	0
   101  007D82  00                 	db	0
   102  007D83  00                 	db	0
   103  007D84  00                 	db	0
   104  007D85  00                 	db	0
   105  007D86  00                 	db	0
   106  007D87  00                 	db	0
   107  007D88  00                 	db	0
   108  007D89  00                 	db	0
   109  007D8A  00                 	db	0
   110  007D8B  00                 	db	0
   111  007D8C  00                 	db	0
   112  007D8D  00                 	db	0
   113  007D8E  00                 	db	0
   114  007D8F  00                 	db	0
   115  007D90  01                 	db	1
   116  007D91  03                 	db	3
   117  007D92  70                 	db	112
   118  007D93  77                 	db	119
   119  007D94  72                 	db	114
   120  007D95  00                 	db	0
   121  007D96  00                 	db	0
   122  007D97  00                 	db	0
   123  007D98  00                 	db	0
   124  007D99  00                 	db	0
   125  007D9A  00                 	db	0
   126  007D9B  00                 	db	0
   127  007D9C  00                 	db	0
   128  007D9D  00                 	db	0
   129  007D9E  00                 	db	0
   130  007D9F  00                 	db	0
   131  007DA0  00                 	db	0
   132  007DA1  00                 	db	0
   133  007DA2  00                 	db	0
   134  007DA3  00                 	db	0
   135  007DA4  00                 	db	0
   136  007DA5  00                 	db	0
   137  007DA6  02                 	db	2
   138  007DA7  03                 	db	3
   139  007DA8  70                 	db	112
   140  007DA9  6F                 	db	111
   141  007DAA  74                 	db	116
   142  007DAB  00                 	db	0
   143  007DAC  00                 	db	0
   144  007DAD  00                 	db	0
   145  007DAE  00                 	db	0
   146  007DAF  00                 	db	0
   147  007DB0  00                 	db	0
   148  007DB1  00                 	db	0
   149  007DB2  00                 	db	0
   150  007DB3  00                 	db	0
   151  007DB4  00                 	db	0
   152  007DB5  00                 	db	0
   153  007DB6  00                 	db	0
   154  007DB7  00                 	db	0
   155  007DB8  00                 	db	0
   156  007DB9  00                 	db	0
   157  007DBA  00                 	db	0
   158  007DBB  00                 	db	0
   159  007DBC  03                 	db	3
   160  007DBD  03                 	db	3
   161  007DBE  76                 	db	118
   162  007DBF  65                 	db	101
   163  007DC0  72                 	db	114
   164  007DC1  00                 	db	0
   165  007DC2  00                 	db	0
   166  007DC3  00                 	db	0
   167  007DC4  00                 	db	0
   168  007DC5  00                 	db	0
   169  007DC6  00                 	db	0
   170  007DC7  00                 	db	0
   171  007DC8  00                 	db	0
   172  007DC9  00                 	db	0
   173  007DCA  00                 	db	0
   174  007DCB  00                 	db	0
   175  007DCC  00                 	db	0
   176  007DCD  00                 	db	0
   177  007DCE  00                 	db	0
   178  007DCF  00                 	db	0
   179  007DD0  00                 	db	0
   180  007DD1  00                 	db	0
   181  007DD2  04                 	db	4
   182  007DD3  03                 	db	3
   183  007DD4  73                 	db	115
   184  007DD5  74                 	db	116
   185  007DD6  61                 	db	97
   186  007DD7  74                 	db	116
   187  007DD8  75                 	db	117
   188  007DD9  73                 	db	115
   189  007DDA  00                 	db	0
   190  007DDB  00                 	db	0
   191  007DDC  00                 	db	0
   192  007DDD  00                 	db	0
   193  007DDE  00                 	db	0
   194  007DDF  00                 	db	0
   195  007DE0  00                 	db	0
   196  007DE1  00                 	db	0
   197  007DE2  00                 	db	0
   198  007DE3  00                 	db	0
   199  007DE4  00                 	db	0
   200  007DE5  00                 	db	0
   201  007DE6  00                 	db	0
   202  007DE7  00                 	db	0
   203  007DE8  05                 	db	5
   204  007DE9  03                 	db	3
   205  007DEA  61                 	db	97
   206  007DEB  63                 	db	99
   207  007DEC  63                 	db	99
   208  007DED  00                 	db	0
   209  007DEE  00                 	db	0
   210  007DEF  00                 	db	0
   211  007DF0  00                 	db	0
   212  007DF1  00                 	db	0
   213  007DF2  00                 	db	0
   214  007DF3  00                 	db	0
   215  007DF4  00                 	db	0
   216  007DF5  00                 	db	0
   217  007DF6  00                 	db	0
   218  007DF7  00                 	db	0
   219  007DF8  00                 	db	0
   220  007DF9  00                 	db	0
   221  007DFA  00                 	db	0
   222  007DFB  00                 	db	0
   223  007DFC  00                 	db	0
   224  007DFD  00                 	db	0
   225  007DFE  07                 	db	7
   226  007DFF  03                 	db	3
   227  007E00  61                 	db	97
   228  007E01  64                 	db	100
   229  007E02  72                 	db	114
   230  007E03  00                 	db	0
   231  007E04  00                 	db	0
   232  007E05  00                 	db	0
   233  007E06  00                 	db	0
   234  007E07  00                 	db	0
   235  007E08  00                 	db	0
   236  007E09  00                 	db	0
   237  007E0A  00                 	db	0
   238  007E0B  00                 	db	0
   239  007E0C  00                 	db	0
   240  007E0D  00                 	db	0
   241  007E0E  00                 	db	0
   242  007E0F  00                 	db	0
   243  007E10  00                 	db	0
   244  007E11  00                 	db	0
   245  007E12  00                 	db	0
   246  007E13  00                 	db	0
   247  007E14  08                 	db	8
   248  007E15  03                 	db	3
   249  007E16  65                 	db	101
   250  007E17  72                 	db	114
   251  007E18  72                 	db	114
   252  007E19  6F                 	db	111
   253  007E1A  72                 	db	114
   254  007E1B  00                 	db	0
   255  007E1C  00                 	db	0
   256  007E1D  00                 	db	0
   257  007E1E  00                 	db	0
   258  007E1F  00                 	db	0
   259  007E20  00                 	db	0
   260  007E21  00                 	db	0
   261  007E22  00                 	db	0
   262  007E23  00                 	db	0
   263  007E24  00                 	db	0
   264  007E25  00                 	db	0
   265  007E26  00                 	db	0
   266  007E27  00                 	db	0
   267  007E28  00                 	db	0
   268  007E29  00                 	db	0
   269  007E2A  06                 	db	6
   270  007E2B  03                 	db	3
   271  007E2C  64                 	db	100
   272  007E2D  65                 	db	101
   273  007E2E  66                 	db	102
   274  007E2F  61                 	db	97
   275  007E30  75                 	db	117
   276  007E31  6C                 	db	108
   277  007E32  74                 	db	116
   278  007E33  73                 	db	115
   279  007E34  00                 	db	0
   280  007E35  00                 	db	0
   281  007E36  00                 	db	0
   282  007E37  00                 	db	0
   283  007E38  00                 	db	0
   284  007E39  00                 	db	0
   285  007E3A  00                 	db	0
   286  007E3B  00                 	db	0
   287  007E3C  00                 	db	0
   288  007E3D  00                 	db	0
   289  007E3E  00                 	db	0
   290  007E3F  00                 	db	0
   291  007E40  09                 	db	9
   292  007E41  03                 	db	3
   293  007E42  6D                 	db	109
   294  007E43  6F                 	db	111
   295  007E44  64                 	db	100
   296  007E45  00                 	db	0
   297  007E46  00                 	db	0
   298  007E47  00                 	db	0
   299  007E48  00                 	db	0
   300  007E49  00                 	db	0
   301  007E4A  00                 	db	0
   302  007E4B  00                 	db	0
   303  007E4C  00                 	db	0
   304  007E4D  00                 	db	0
   305  007E4E  00                 	db	0
   306  007E4F  00                 	db	0
   307  007E50  00                 	db	0
   308  007E51  00                 	db	0
   309  007E52  00                 	db	0
   310  007E53  00                 	db	0
   311  007E54  00                 	db	0
   312  007E55  00                 	db	0
   313  007E56  0A                 	db	10
   314  007E57  01                 	db	1
   315  007E58  70                 	db	112
   316  007E59  72                 	db	114
   317  007E5A  6F                 	db	111
   318  007E5B  66                 	db	102
   319  007E5C  69                 	db	105
   320  007E5D  6C                 	db	108
   321  007E5E  65                 	db	101
   322  007E5F  00                 	db	0
   323  007E60  00                 	db	0
   324  007E61  00                 	db	0
   325  007E62  00                 	db	0
   326  007E63  00                 	db	0
   327  007E64  00                 	db	0
   328  007E65  00                 	db	0
   329  007E66  00                 	db	0
   330  007E67  00                 	db	0
   331  007E68  00                 	db	0
   332  007E69  00                 	db	0
   333  007E6A  00                 	db	0
   334  007E6B  00                 	db	0
   335  007E6C  0B                 	db	11
   336  007E6D  03                 	db	3
   337  007E6E  70                 	db	112
   338  007E6F  77                 	db	119
   339  007E70  72                 	db	114
   340  007E71  74                 	db	116
   341  007E72  72                 	db	114
   342  007E73  69                 	db	105
   343  007E74  67                 	db	103
   344  007E75  00                 	db	0
   345  007E76  00                 	db	0
   346  007E77  00                 	db	0
   347  007E78  00                 	db	0
   348  007E79  00                 	db	0
   349  007E7A  00                 	db	0
   350  007E7B  00                 	db	0
   351  007E7C  00                 	db	0
   352  007E7D  00                 	db	0
   353  007E7E  00                 	db	0
   354  007E7F  00                 	db	0
   355  007E80  00                 	db	0
   356  007E81  00                 	db	0
   357  007E82  0C                 	db	12
   358  007E83  03                 	db	3
   359  007E84  61                 	db	97
   360  007E85  63                 	db	99
   361  007E86  63                 	db	99
   362  007E87  74                 	db	116
   363  007E88  72                 	db	114
   364  007E89  69                 	db	105
   365  007E8A  67                 	db	103
   366  007E8B  00                 	db	0
   367  007E8C  00                 	db	0
   368  007E8D  00                 	db	0
   369  007E8E  00                 	db	0
   370  007E8F  00                 	db	0
   371  007E90  00                 	db	0
   372  007E91  00                 	db	0
   373  007E92  00                 	db	0
   374  007E93  00                 	db	0
   375  007E94  00                 	db	0
   376  007E95  00                 	db	0
   377  007E96  00                 	db	0
   378  007E97  00                 	db	0
   379  007E98  0D                 	db	13
   380  007E99  03                 	db	3
   381  007E9A  74                 	db	116
   382  007E9B  72                 	db	114
   383  007E9C  69                 	db	105
   384  007E9D  67                 	db	103
   385  007E9E  6C                 	db	108
   386  007E9F  65                 	db	101
   387  007EA0  76                 	db	118
   388  007EA1  00                 	db	0
   389  007EA2  00                 	db	0
   390  007EA3  00                 	db	0
   391  007EA4  00                 	db	0
   392  007EA5  00                 	db	0
   393  007EA6  00                 	db	0
   394  007EA7  00                 	db	0
   395  007EA8  00                 	db	0
   396  007EA9  00                 	db	0
   397  007EAA  00                 	db	0
   398  007EAB  00                 	db	0
   399  007EAC  00                 	db	0
   400  007EAD  00                 	db	0
   401  007EAE  0E                 	db	14
   402  007EAF  03                 	db	3
   403  007EB0  74                 	db	116
   404  007EB1  72                 	db	114
   405  007EB2  69                 	db	105
   406  007EB3  67                 	db	103
   407  007EB4  73                 	db	115
   408  007EB5  75                 	db	117
   409  007EB6  6D                 	db	109
   410  007EB7  00                 	db	0
   411  007EB8  00                 	db	0
   412  007EB9  00                 	db	0
   413  007EBA  00                 	db	0
   414  007EBB  00                 	db	0
   415  007EBC  00                 	db	0
   416  007EBD  00                 	db	0
   417  007EBE  00                 	db	0
   418  007EBF  00                 	db	0
   419  007EC0  00                 	db	0
   420  007EC1  00                 	db	0
   421  007EC2  00                 	db	0
   422  007EC3  00                 	db	0
   423  007EC4  0F                 	db	15
   424  007EC5  03                 	db	3
   425  007EC6  74                 	db	116
   426  007EC7  72                 	db	114
   427  007EC8  69                 	db	105
   428  007EC9  67                 	db	103
   429  007ECA  63                 	db	99
   430  007ECB  6E                 	db	110
   431  007ECC  74                 	db	116
   432  007ECD  00                 	db	0
   433  007ECE  00                 	db	0
   434  007ECF  00                 	db	0
   435  007ED0  00                 	db	0
   436  007ED1  00                 	db	0
   437  007ED2  00                 	db	0
   438  007ED3  00                 	db	0
   439  007ED4  00                 	db	0
   440  007ED5  00                 	db	0
   441  007ED6  00                 	db	0
   442  007ED7  00                 	db	0
   443  007ED8  00                 	db	0
   444  007ED9  00                 	db	0
   445  007EDA  10                 	db	16
   446  007EDB  03                 	db	3
   447  007EDC  77                 	db	119
   448  007EDD  61                 	db	97
   449  007EDE  76                 	db	118
   450  007EDF  74                 	db	116
   451  007EE0  6F                 	db	111
   452  007EE1  6C                 	db	108
   453  007EE2  65                 	db	101
   454  007EE3  00                 	db	0
   455  007EE4  00                 	db	0
   456  007EE5  00                 	db	0
   457  007EE6  00                 	db	0
   458  007EE7  00                 	db	0
   459  007EE8  00                 	db	0
   460  007EE9  00                 	db	0
   461  007EEA  00                 	db	0
   462  007EEB  00                 	db	0
   463  007EEC  00                 	db	0
   464  007EED  00                 	db	0
   465  007EEE  00                 	db	0
   466  007EEF  00                 	db	0
   467  007EF0  11                 	db	17
   468  007EF1  03                 	db	3
   469  007EF2  77                 	db	119
   470  007EF3  61                 	db	97
   471  007EF4  76                 	db	118
   472  007EF5  74                 	db	116
   473  007EF6  72                 	db	114
   474  007EF7  69                 	db	105
   475  007EF8  67                 	db	103
   476  007EF9  00                 	db	0
   477  007EFA  00                 	db	0
   478  007EFB  00                 	db	0
   479  007EFC  00                 	db	0
   480  007EFD  00                 	db	0
   481  007EFE  00                 	db	0
   482  007EFF  00                 	db	0
   483  007F00  00                 	db	0
   484  007F01  00                 	db	0
   485  007F02  00                 	db	0
   486  007F03  00                 	db	0
   487  007F04  00                 	db	0
   488  007F05  00                 	db	0
   489  007F06  12                 	db	18
   490  007F07  03                 	db	3
   491  007F08  77                 	db	119
   492  007F09  61                 	db	97
   493  007F0A  76                 	db	118
   494  007F0B  6C                 	db	108
   495  007F0C  63                 	db	99
   496  007F0D  6E                 	db	110
   497  007F0E  74                 	db	116
   498  007F0F  00                 	db	0
   499  007F10  00                 	db	0
   500  007F11  00                 	db	0
   501  007F12  00                 	db	0
   502  007F13  00                 	db	0
   503  007F14  00                 	db	0
   504  007F15  00                 	db	0
   505  007F16  00                 	db	0
   506  007F17  00                 	db	0
   507  007F18  00                 	db	0
   508  007F19  00                 	db	0
   509  007F1A  00                 	db	0
   510  007F1B  00                 	db	0
   511  007F1C  13                 	db	19
   512  007F1D  03                 	db	3
   513  007F1E  77                 	db	119
   514  007F1F  61                 	db	97
   515  007F20  76                 	db	118
   516  007F21  72                 	db	114
   517  007F22  63                 	db	99
   518  007F23  6E                 	db	110
   519  007F24  74                 	db	116
   520  007F25  00                 	db	0
   521  007F26  00                 	db	0
   522  007F27  00                 	db	0
   523  007F28  00                 	db	0
   524  007F29  00                 	db	0
   525  007F2A  00                 	db	0
   526  007F2B  00                 	db	0
   527  007F2C  00                 	db	0
   528  007F2D  00                 	db	0
   529  007F2E  00                 	db	0
   530  007F2F  00                 	db	0
   531  007F30  00                 	db	0
   532  007F31  00                 	db	0
   533  007F32  14                 	db	20
   534  007F33  03                 	db	3
   535  007F34  69                 	db	105
   536  007F35  64                 	db	100
   537  007F36  69                 	db	105
   538  007F37  64                 	db	100
   539  007F38  00                 	db	0
   540  007F39  00                 	db	0
   541  007F3A  00                 	db	0
   542  007F3B  00                 	db	0
   543  007F3C  00                 	db	0
   544  007F3D  00                 	db	0
   545  007F3E  00                 	db	0
   546  007F3F  00                 	db	0
   547  007F40  00                 	db	0
   548  007F41  00                 	db	0
   549  007F42  00                 	db	0
   550  007F43  00                 	db	0
   551  007F44  00                 	db	0
   552  007F45  00                 	db	0
   553  007F46  00                 	db	0
   554  007F47  00                 	db	0
   555  007F48  15                 	db	21
   556  007F49  03                 	db	3
   557  007F4A  70                 	db	112
   558  007F4B  73                 	db	115
   559  007F4C  77                 	db	119
   560  007F4D  70                 	db	112
   561  007F4E  73                 	db	115
   562  007F4F  77                 	db	119
   563  007F50  00                 	db	0
   564  007F51  00                 	db	0
   565  007F52  00                 	db	0
   566  007F53  00                 	db	0
   567  007F54  00                 	db	0
   568  007F55  00                 	db	0
   569  007F56  00                 	db	0
   570  007F57  00                 	db	0
   571  007F58  00                 	db	0
   572  007F59  00                 	db	0
   573  007F5A  00                 	db	0
   574  007F5B  00                 	db	0
   575  007F5C  00                 	db	0
   576  007F5D  00                 	db	0
   577  007F5E  16                 	db	22
   578  007F5F  03                 	db	3
   579  007F60  1D                 	db	29
   580  007F61  1D                 	db	29
   581  007F62  00                 	db	0
   582  007F63  00                 	db	0
   583  007F64  00                 	db	0
   584  007F65  00                 	db	0
   585  007F66  00                 	db	0
   586  007F67  00                 	db	0
   587  007F68  00                 	db	0
   588  007F69  00                 	db	0
   589  007F6A  00                 	db	0
   590  007F6B  00                 	db	0
   591  007F6C  00                 	db	0
   592  007F6D  00                 	db	0
   593  007F6E  00                 	db	0
   594  007F6F  00                 	db	0
   595  007F70  00                 	db	0
   596  007F71  00                 	db	0
   597  007F72  00                 	db	0
   598  007F73  00                 	db	0
   599  007F74  FF                 	db	255
   600  007F75  00                 	db	0
   601  007F76                     __end_of_syx_param_list:
   602                           	opt stack 0
   603  007F76                     _syx_cmd_list:
   604                           	opt stack 0
   605  007F76  73                 	db	115
   606  007F77  65                 	db	101
   607  007F78  74                 	db	116
   608  007F79  00                 	db	0
   609  007F7A  00                 	db	0
   610  007F7B  00                 	db	0
   611  007F7C  00                 	db	0
   612  007F7D  00                 	db	0
   613  007F7E  00                 	db	0
   614  007F7F  00                 	db	0
   615  007F80  00                 	db	0
   616  007F81  00                 	db	0
   617  007F82  00                 	db	0
   618  007F83  00                 	db	0
   619  007F84  00                 	db	0
   620  007F85  00                 	db	0
   621  007F86  00                 	db	0
   622  007F87  00                 	db	0
   623  007F88  00                 	db	0
   624  007F89  00                 	db	0
   625  007F8A  00                 	db	0
   626  007F8B  67                 	db	103
   627  007F8C  65                 	db	101
   628  007F8D  74                 	db	116
   629  007F8E  00                 	db	0
   630  007F8F  00                 	db	0
   631  007F90  00                 	db	0
   632  007F91  00                 	db	0
   633  007F92  00                 	db	0
   634  007F93  00                 	db	0
   635  007F94  00                 	db	0
   636  007F95  00                 	db	0
   637  007F96  00                 	db	0
   638  007F97  00                 	db	0
   639  007F98  00                 	db	0
   640  007F99  00                 	db	0
   641  007F9A  00                 	db	0
   642  007F9B  00                 	db	0
   643  007F9C  00                 	db	0
   644  007F9D  00                 	db	0
   645  007F9E  00                 	db	0
   646  007F9F  01                 	db	1
   647  007FA0  69                 	db	105
   648  007FA1  6E                 	db	110
   649  007FA2  69                 	db	105
   650  007FA3  74                 	db	116
   651  007FA4  00                 	db	0
   652  007FA5  00                 	db	0
   653  007FA6  00                 	db	0
   654  007FA7  00                 	db	0
   655  007FA8  00                 	db	0
   656  007FA9  00                 	db	0
   657  007FAA  00                 	db	0
   658  007FAB  00                 	db	0
   659  007FAC  00                 	db	0
   660  007FAD  00                 	db	0
   661  007FAE  00                 	db	0
   662  007FAF  00                 	db	0
   663  007FB0  00                 	db	0
   664  007FB1  00                 	db	0
   665  007FB2  00                 	db	0
   666  007FB3  00                 	db	0
   667  007FB4  02                 	db	2
   668  007FB5  73                 	db	115
   669  007FB6  65                 	db	101
   670  007FB7  6C                 	db	108
   671  007FB8  66                 	db	102
   672  007FB9  74                 	db	116
   673  007FBA  65                 	db	101
   674  007FBB  73                 	db	115
   675  007FBC  74                 	db	116
   676  007FBD  00                 	db	0
   677  007FBE  00                 	db	0
   678  007FBF  00                 	db	0
   679  007FC0  00                 	db	0
   680  007FC1  00                 	db	0
   681  007FC2  00                 	db	0
   682  007FC3  00                 	db	0
   683  007FC4  00                 	db	0
   684  007FC5  00                 	db	0
   685  007FC6  00                 	db	0
   686  007FC7  00                 	db	0
   687  007FC8  00                 	db	0
   688  007FC9  03                 	db	3
   689  007FCA  1D                 	db	29
   690  007FCB  1D                 	db	29
   691  007FCC  00                 	db	0
   692  007FCD  00                 	db	0
   693  007FCE  00                 	db	0
   694  007FCF  00                 	db	0
   695  007FD0  00                 	db	0
   696  007FD1  00                 	db	0
   697  007FD2  00                 	db	0
   698  007FD3  00                 	db	0
   699  007FD4  00                 	db	0
   700  007FD5  00                 	db	0
   701  007FD6  00                 	db	0
   702  007FD7  00                 	db	0
   703  007FD8  00                 	db	0
   704  007FD9  00                 	db	0
   705  007FDA  00                 	db	0
   706  007FDB  00                 	db	0
   707  007FDC  00                 	db	0
   708  007FDD  00                 	db	0
   709  007FDE  00                 	db	0
   710  007FDF                     __end_of_syx_cmd_list:
   711                           	opt stack 0
   712  0000                     _ADRES	set	4035
   713  0000                     _TMR0	set	4054
   714  0000                     _ADCON0	set	4034
   715  0000                     _ADCON0bits	set	4034
   716  0000                     _ADCON1	set	4033
   717  0000                     _ADCON2	set	4032
   718  0000                     _ANSEL	set	3966
   719  0000                     _ANSELH	set	3967
   720  0000                     _BAUDCON	set	4024
   721  0000                     _BAUDCTL	set	4024
   722  0000                     _INTCONbits	set	4082
   723  0000                     _LATC	set	3979
   724  0000                     _LATD	set	3980
   725  0000                     _OSCCON	set	4051
   726  0000                     _PIE1bits	set	3997
   727  0000                     _PIR1bits	set	3998
   728  0000                     _RCREG	set	4014
   729  0000                     _RCSTA	set	4011
   730  0000                     _RCSTAbits	set	4011
   731  0000                     _SPBRG	set	4015
   732  0000                     _TRISA	set	3986
   733  0000                     _TRISB	set	3987
   734  0000                     _TRISC	set	3988
   735  0000                     _TRISD	set	3989
   736  0000                     _TXREG	set	4013
   737  0000                     _TXSTA	set	4012
   738  0000                     _ADIF	set	31990
   739  0000                     _CREN	set	32092
   740  0000                     _GODONE	set	32273
   741  0000                     _RC1IF	set	31989
   742  0000                     _RCIF	set	31989
   743  0000                     _TXIF	set	31988
   744  007FDF                     __stringdata:
   745                           	opt stack 0
   746  007FDF                     STR_3:
   747                           
   748                           ; BSR set to: 0
   749  007FDF  3A                 	db	58	;':'
   750  007FE0  65                 	db	101	;'e'
   751  007FE1  72                 	db	114	;'r'
   752  007FE2  72                 	db	114	;'r'
   753  007FE3  20                 	db	32
   754  007FE4  00                 	db	0
   755  007FE5                     STR_1:
   756                           
   757                           ; BSR set to: 0
   758  007FE5  65                 	db	101	;'e'
   759  007FE6  72                 	db	114	;'r'
   760  007FE7  72                 	db	114	;'r'
   761  007FE8  0A                 	db	10
   762  007FE9  00                 	db	0
   763  007FEA                     
   764                           ; BSR set to: 0
   765  007FEA  3A                 	db	58	;':'
   766  007FEB  6F                 	db	111	;'o'
   767  007FEC  6B                 	db	107	;'k'
   768  007FED  20                 	db	32
   769  007FEE  00                 	db	0
   770  007FEF                     STR_5:
   771                           
   772                           ; BSR set to: 0
   773  007FEF  5B                 	db	91	;'['
   774  007FF0  31                 	db	49	;'1'
   775  007FF1  5D                 	db	93	;']'
   776  007FF2  00                 	db	0
   777  007FF3                     STR_6:
   778                           
   779                           ; BSR set to: 0
   780  007FF3  5B                 	db	91	;'['
   781  007FF4  32                 	db	50	;'2'
   782  007FF5  5D                 	db	93	;']'
   783  007FF6  00                 	db	0
   784  007FF7                     STR_7:
   785                           
   786                           ; BSR set to: 0
   787  007FF7  5B                 	db	91	;'['
   788  007FF8  33                 	db	51	;'3'
   789  007FF9  5D                 	db	93	;']'
   790  007FFA  00                 	db	0
   791  007FFB                     STR_8:
   792                           
   793                           ; BSR set to: 0
   794  007FFB  5B                 	db	91	;'['
   795  007FFC  34                 	db	52	;'4'
   796  007FFD  5D                 	db	93	;']'
   797  007FFE  00                 	db	0
   798  007FFF                     __end_of__stringdata:
   799                           	opt stack 0
   800                           
   801                           ; #config settings
   802  007FFF  00                 	db	0	; dummy byte at the end
   803  0000                     
   804                           	psect	nvBANK0
   805  0000D8                     __pnvBANK0:
   806                           	opt stack 0
   807  0000D8                     _this_delay_timer_ms:
   808                           	opt stack 0
   809  0000D8                     	ds	2
   810                           
   811                           	psect	cinit
   812  000EDE                     __pcinit:
   813                           	opt stack 0
   814  000EDE                     start_initialization:
   815                           	opt stack 0
   816  000EDE                     __initialization:
   817                           	opt stack 0
   818                           
   819                           ; Clear objects allocated to BANK5 (149 bytes)
   820  000EDE  EE05  F000         	lfsr	0,__pbssBANK5
   821  000EE2  0E95               	movlw	149
   822  000EE4                     clear_0:
   823  000EE4  6AEE               	clrf	postinc0,c
   824  000EE6  06E8               	decf	wreg,f,c
   825  000EE8  E1FD               	bnz	clear_0
   826                           
   827                           ; Clear objects allocated to BANK4 (127 bytes)
   828  000EEA  EE04  F000         	lfsr	0,__pbssBANK4
   829  000EEE  0E7F               	movlw	127
   830  000EF0                     clear_1:
   831  000EF0  6AEE               	clrf	postinc0,c
   832  000EF2  06E8               	decf	wreg,f,c
   833  000EF4  E1FD               	bnz	clear_1
   834                           
   835                           ; Clear objects allocated to BANK3 (207 bytes)
   836  000EF6  EE03  F000         	lfsr	0,__pbssBANK3
   837  000EFA  0ECF               	movlw	207
   838  000EFC                     clear_2:
   839  000EFC  6AEE               	clrf	postinc0,c
   840  000EFE  06E8               	decf	wreg,f,c
   841  000F00  E1FD               	bnz	clear_2
   842                           
   843                           ; Clear objects allocated to BANK2 (227 bytes)
   844  000F02  EE02  F000         	lfsr	0,__pbssBANK2
   845  000F06  0EE3               	movlw	227
   846  000F08                     clear_3:
   847  000F08  6AEE               	clrf	postinc0,c
   848  000F0A  06E8               	decf	wreg,f,c
   849  000F0C  E1FD               	bnz	clear_3
   850                           
   851                           ; Clear objects allocated to BANK1 (214 bytes)
   852  000F0E  EE01  F000         	lfsr	0,__pbssBANK1
   853  000F12  0ED6               	movlw	214
   854  000F14                     clear_4:
   855  000F14  6AEE               	clrf	postinc0,c
   856  000F16  06E8               	decf	wreg,f,c
   857  000F18  E1FD               	bnz	clear_4
   858                           
   859                           ; Clear objects allocated to BANK0 (56 bytes)
   860  000F1A  EE00  F0A0         	lfsr	0,__pbssBANK0
   861  000F1E  0E38               	movlw	56
   862  000F20                     clear_5:
   863  000F20  6AEE               	clrf	postinc0,c
   864  000F22  06E8               	decf	wreg,f,c
   865  000F24  E1FD               	bnz	clear_5
   866                           
   867                           ; Clear objects allocated to COMRAM (37 bytes)
   868  000F26  EE00  F001         	lfsr	0,__pbssCOMRAM
   869  000F2A  0E25               	movlw	37
   870  000F2C                     clear_6:
   871  000F2C  6AEE               	clrf	postinc0,c
   872  000F2E  06E8               	decf	wreg,f,c
   873  000F30  E1FD               	bnz	clear_6
   874  000F32                     end_of_initialization:
   875                           	opt stack 0
   876  000F32                     __end_of__initialization:
   877                           	opt stack 0
   878  000F32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   879  000F34  6EF8               	movwf	tblptru,c
   880  000F36  0100               	movlb	0
   881  000F38  EF16  F005         	goto	_main	;jump to C main() function
   882                           tblptru	equ	0xFF8
   883                           postinc0	equ	0xFEE
   884                           wreg	equ	0xFE8
   885                           
   886                           	psect	bssCOMRAM
   887  000001                     __pbssCOMRAM:
   888                           	opt stack 0
   889  000001                     _g_STATUS:
   890                           	opt stack 0
   891  000001                     	ds	2
   892  000003                     _g_analog0:
   893                           	opt stack 0
   894  000003                     	ds	2
   895  000005                     _g_analog1:
   896                           	opt stack 0
   897  000005                     	ds	2
   898  000007                     _g_analog2:
   899                           	opt stack 0
   900  000007                     	ds	2
   901  000009                     _bitcount:
   902                           	opt stack 0
   903  000009                     	ds	1
   904  00000A                     _i2c_buff:
   905                           	opt stack 0
   906  00000A                     	ds	1
   907  00000B                     _this_alarm:
   908                           	opt stack 0
   909  00000B                     	ds	1
   910  00000C                     _this_warning:
   911                           	opt stack 0
   912  00000C                     	ds	1
   913  00000D                     _g_CONFIG:
   914                           	opt stack 0
   915  00000D                     	ds	25
   916                           tblptru	equ	0xFF8
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           
   920                           	psect	bssBANK0
   921  0000A0                     __pbssBANK0:
   922                           	opt stack 0
   923  0000A0                     _events:
   924                           	opt stack 0
   925  0000A0                     	ds	16
   926  0000B0                     _command_id:
   927                           	opt stack 0
   928  0000B0                     	ds	2
   929  0000B2                     _parameter_id:
   930                           	opt stack 0
   931  0000B2                     	ds	2
   932  0000B4                     _current_event:
   933                           	opt stack 0
   934  0000B4                     	ds	1
   935  0000B5                     _parameter_type:
   936                           	opt stack 0
   937  0000B5                     	ds	1
   938  0000B6                     _pool:
   939                           	opt stack 0
   940  0000B6                     	ds	1
   941  0000B7                     _this_case_sensitive:
   942                           	opt stack 0
   943  0000B7                     	ds	1
   944  0000B8                     _this_contains_crlf:
   945                           	opt stack 0
   946  0000B8                     	ds	1
   947  0000B9                     _cla_detector:
   948                           	opt stack 0
   949  0000B9                     	ds	31
   950                           tblptru	equ	0xFF8
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           
   954                           	psect	bssBANK1
   955  000100                     __pbssBANK1:
   956                           	opt stack 0
   957  000100                     _g_rx_buffer:
   958                           	opt stack 0
   959  000100                     	ds	107
   960  00016B                     _g_tx_buffer:
   961                           	opt stack 0
   962  00016B                     	ds	107
   963                           tblptru	equ	0xFF8
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           
   967                           	psect	bssBANK2
   968  000200                     __pbssBANK2:
   969                           	opt stack 0
   970  000200                     _parameter_value:
   971                           	opt stack 0
   972  000200                     	ds	127
   973  00027F                     _serialport_buffer:
   974                           	opt stack 0
   975  00027F                     	ds	100
   976                           tblptru	equ	0xFF8
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           
   980                           	psect	bssBANK3
   981  000300                     __pbssBANK3:
   982                           	opt stack 0
   983  000300                     	ds	80
   984  000350                     _parameter_text:
   985                           	opt stack 0
   986  000350                     	ds	127
   987                           tblptru	equ	0xFF8
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           
   991                           	psect	bssBANK4
   992  000400                     __pbssBANK4:
   993                           	opt stack 0
   994  000400                     _this_buf:
   995                           	opt stack 0
   996  000400                     	ds	127
   997                           tblptru	equ	0xFF8
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           
  1001                           	psect	bssBANK5
  1002  000500                     __pbssBANK5:
  1003                           	opt stack 0
  1004  000500                     _pd_detector:
  1005                           	opt stack 0
  1006  000500                     	ds	149
  1007                           tblptru	equ	0xFF8
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           
  1011                           	psect	cstackBANK1
  1012  0001D6                     __pcstackBANK1:
  1013                           	opt stack 0
  1014  0001D6                     ?_this_variable_load_from_text:
  1015                           	opt stack 0
  1016  0001D6                     on_parameter_found@operation:
  1017                           	opt stack 0
  1018  0001D6                     this_parse_command@len:
  1019                           	opt stack 0
  1020  0001D6                     this_variable_load_from_text@pval:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x0
  1024  0001D6                     	ds	2
  1025  0001D8                     this_parse_command@pname:
  1026                           	opt stack 0
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029  0001D8                     	ds	1
  1030  0001D9                     this_variable_load_from_text@var_type:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x3
  1034  0001D9                     	ds	1
  1035  0001DA                     this_parse_command@is_equal:
  1036                           	opt stack 0
  1037  0001DA                     this_variable_load_from_text@len:
  1038                           	opt stack 0
  1039                           
  1040                           ; 2 bytes @ 0x4
  1041  0001DA                     	ds	1
  1042  0001DB                     this_parse_command@found:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046  0001DB                     	ds	1
  1047  0001DC                     ?_this_parse_parameter:
  1048                           	opt stack 0
  1049  0001DC                     this_parse_command@i:
  1050                           	opt stack 0
  1051  0001DC                     this_parse_parameter@pstr:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x6
  1055  0001DC                     	ds	2
  1056  0001DE                     ??_this_parse_parameter:
  1057                           
  1058                           ; 0 bytes @ 0x8
  1059  0001DE                     	ds	2
  1060  0001E0                     this_parse_parameter@is_equal:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0xA
  1064  0001E0                     	ds	1
  1065  0001E1                     this_parse_parameter@result:
  1066                           	opt stack 0
  1067                           
  1068                           ; 1 bytes @ 0xB
  1069  0001E1                     	ds	1
  1070  0001E2                     this_parse_parameter@pvar:
  1071                           	opt stack 0
  1072                           
  1073                           ; 2 bytes @ 0xC
  1074  0001E2                     	ds	2
  1075  0001E4                     this_parse_parameter@str_len:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0xE
  1079  0001E4                     	ds	2
  1080  0001E6                     this_parse_parameter@pval:
  1081                           	opt stack 0
  1082                           
  1083                           ; 3 bytes @ 0x10
  1084  0001E6                     	ds	3
  1085  0001E9                     this_parse_parameter@i:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x13
  1089  0001E9                     	ds	2
  1090  0001EB                     this_parse_parameter@var_len:
  1091                           	opt stack 0
  1092                           
  1093                           ; 2 bytes @ 0x15
  1094  0001EB                     	ds	2
  1095  0001ED                     ?_syntax_string:
  1096                           	opt stack 0
  1097  0001ED                     syntax_string@pstr:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x17
  1101  0001ED                     	ds	2
  1102  0001EF                     syntax_string@case_sensitive:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x19
  1106  0001EF                     	ds	1
  1107  0001F0                     ??_syntax_string:
  1108                           
  1109                           ; 0 bytes @ 0x1A
  1110  0001F0                     	ds	1
  1111  0001F1                     syntax_string@str_len:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x1B
  1115  0001F1                     	ds	2
  1116  0001F3                     syntax_string@result:
  1117                           	opt stack 0
  1118                           
  1119                           ; 2 bytes @ 0x1D
  1120  0001F3                     	ds	2
  1121  0001F5                     syntax_string@pos:
  1122                           	opt stack 0
  1123                           
  1124                           ; 2 bytes @ 0x1F
  1125  0001F5                     	ds	2
  1126  0001F7                     syntax_string@chains:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x21
  1130  0001F7                     	ds	2
  1131  0001F9                     syntax_string@pchain:
  1132                           	opt stack 0
  1133                           
  1134                           ; 2 bytes @ 0x23
  1135  0001F9                     	ds	2
  1136  0001FB                     serialport_task@size:
  1137                           	opt stack 0
  1138                           
  1139                           ; 2 bytes @ 0x25
  1140  0001FB                     	ds	2
  1141  0001FD                     ??_main:
  1142                           
  1143                           ; 0 bytes @ 0x27
  1144  0001FD                     	ds	2
  1145                           tblptru	equ	0xFF8
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           
  1149                           	psect	cstackBANK0
  1150  000060                     __pcstackBANK0:
  1151                           	opt stack 0
  1152  000060                     	ds	15
  1153  00006F                     ??i2_rd_buffer_put:
  1154                           
  1155                           ; 0 bytes @ 0xF
  1156  00006F                     	ds	6
  1157  000075                     i2rd_buffer_put@mes_rec:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x15
  1161  000075                     	ds	2
  1162  000077                     i2_rd_buffer_put$462:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x17
  1166  000077                     	ds	1
  1167  000078                     i2rd_buffer_put@sz:
  1168                           	opt stack 0
  1169                           
  1170                           ; 2 bytes @ 0x18
  1171  000078                     	ds	2
  1172  00007A                     i2rd_buffer_put@ind:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0x1A
  1176  00007A                     	ds	2
  1177  00007C                     ??_serialport_service:
  1178                           
  1179                           ; 0 bytes @ 0x1C
  1180  00007C                     	ds	1
  1181  00007D                     serialport_service@byte:
  1182                           	opt stack 0
  1183                           
  1184                           ; 1 bytes @ 0x1D
  1185  00007D                     	ds	1
  1186  00007E                     ??interrupts@isr_high:
  1187                           
  1188                           ; 0 bytes @ 0x1E
  1189  00007E                     	ds	8
  1190  000086                     ?_uart_set_baudrate:
  1191                           	opt stack 0
  1192  000086                     ?_delay_ms:
  1193                           	opt stack 0
  1194  000086                     ?_rd_buffer_get:
  1195                           	opt stack 0
  1196  000086                     ?_rd_buffer_init:
  1197                           	opt stack 0
  1198  000086                     ?_rd_buffer_put:
  1199                           	opt stack 0
  1200  000086                     ?_rd_buffer_cnt:
  1201                           	opt stack 0
  1202  000086                     ?_string_utils_copy:
  1203                           	opt stack 0
  1204  000086                     ?_string_utils_split:
  1205                           	opt stack 0
  1206  000086                     ?_string_utils_strchr:
  1207                           	opt stack 0
  1208  000086                     ?___wmul:
  1209                           	opt stack 0
  1210  000086                     sysclk_setup_intosc@frequency:
  1211                           	opt stack 0
  1212  000086                     uart_putc@byte:
  1213                           	opt stack 0
  1214  000086                     _string_utils_is_upper_case$730:
  1215                           	opt stack 0
  1216  000086                     _string_utils_is_symbol$736:
  1217                           	opt stack 0
  1218  000086                     symb_from_hex_to_bin@symb:
  1219                           	opt stack 0
  1220  000086                     delay_ms@delay:
  1221                           	opt stack 0
  1222  000086                     rd_buffer_init@pbuffer:
  1223                           	opt stack 0
  1224  000086                     rd_buffer_cnt@pbuffer:
  1225                           	opt stack 0
  1226  000086                     rd_buffer_get@pbuffer:
  1227                           	opt stack 0
  1228  000086                     rd_buffer_put@pbuffer:
  1229                           	opt stack 0
  1230  000086                     string_utils_copy@pdst:
  1231                           	opt stack 0
  1232  000086                     string_utils_split@pbuf:
  1233                           	opt stack 0
  1234  000086                     ___wmul@multiplier:
  1235                           	opt stack 0
  1236  000086                     string_utils_strchr@pbuf:
  1237                           	opt stack 0
  1238                           
  1239                           ; 3 bytes @ 0x26
  1240  000086                     	ds	1
  1241  000087                     ?_uart_puts:
  1242                           	opt stack 0
  1243  000087                     string_utils_is_upper_case@symb:
  1244                           	opt stack 0
  1245  000087                     string_utils_is_symbol@symb:
  1246                           	opt stack 0
  1247  000087                     uart_puts@pstr:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x27
  1251  000087                     	ds	1
  1252  000088                     ??_rd_buffer_cnt:
  1253  000088                     rd_buffer_init@size:
  1254                           	opt stack 0
  1255  000088                     rd_buffer_get@prec:
  1256                           	opt stack 0
  1257  000088                     rd_buffer_put@prec:
  1258                           	opt stack 0
  1259  000088                     string_utils_split@pstr:
  1260                           	opt stack 0
  1261  000088                     ___wmul@multiplicand:
  1262                           	opt stack 0
  1263  000088                     string_utils_copy@psrc:
  1264                           	opt stack 0
  1265                           
  1266                           ; 3 bytes @ 0x28
  1267  000088                     	ds	1
  1268  000089                     string_utils_strchr@delimeter:
  1269                           	opt stack 0
  1270  000089                     uart_puts@size:
  1271                           	opt stack 0
  1272                           
  1273                           ; 2 bytes @ 0x29
  1274  000089                     	ds	1
  1275  00008A                     ??_rd_buffer_get:
  1276  00008A                     ??_rd_buffer_put:
  1277  00008A                     ??_string_utils_strchr:
  1278  00008A                     rd_buffer_init@result:
  1279                           	opt stack 0
  1280  00008A                     string_utils_split@len:
  1281                           	opt stack 0
  1282  00008A                     ___wmul@product:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x2A
  1286  00008A                     	ds	1
  1287  00008B                     ??_serialport_startup:
  1288  00008B                     string_utils_copy@maxlen:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x2B
  1292  00008B                     	ds	1
  1293  00008C                     ?_string_utils_strncmp:
  1294                           	opt stack 0
  1295  00008C                     ?_string_utils_strlen:
  1296                           	opt stack 0
  1297  00008C                     serialport_startup@result:
  1298                           	opt stack 0
  1299  00008C                     string_utils_split@delimeter:
  1300                           	opt stack 0
  1301  00008C                     rd_buffer_cnt@sz:
  1302                           	opt stack 0
  1303  00008C                     rd_buffer_get@last:
  1304                           	opt stack 0
  1305  00008C                     string_utils_strlen@pstr:
  1306                           	opt stack 0
  1307  00008C                     string_utils_strncmp@pstr1:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x2C
  1311  00008C                     	ds	1
  1312  00008D                     startup@result:
  1313                           	opt stack 0
  1314  00008D                     string_utils_copy@result:
  1315                           	opt stack 0
  1316  00008D                     string_utils_split@i:
  1317                           	opt stack 0
  1318  00008D                     string_utils_strchr@result:
  1319                           	opt stack 0
  1320                           
  1321                           ; 2 bytes @ 0x2D
  1322  00008D                     	ds	1
  1323  00008E                     ??_string_utils_strlen:
  1324  00008E                     rd_buffer_get@result:
  1325                           	opt stack 0
  1326  00008E                     string_utils_strncmp@pstr2:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x2E
  1330  00008E                     	ds	1
  1331  00008F                     rd_buffer_get@first:
  1332                           	opt stack 0
  1333  00008F                     string_utils_split@chains:
  1334                           	opt stack 0
  1335  00008F                     string_utils_strchr@pos:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x2F
  1339  00008F                     	ds	1
  1340  000090                     rd_buffer_put@mes_rec:
  1341                           	opt stack 0
  1342  000090                     string_utils_strlen@i:
  1343                           	opt stack 0
  1344  000090                     string_utils_strncmp@len:
  1345                           	opt stack 0
  1346                           
  1347                           ; 2 bytes @ 0x30
  1348  000090                     	ds	1
  1349  000091                     ?_rd_buffer_readline:
  1350                           	opt stack 0
  1351  000091                     ?_rd_buffer_getn:
  1352                           	opt stack 0
  1353  000091                     string_utils_split@prev:
  1354                           	opt stack 0
  1355  000091                     rd_buffer_readline@pbuffer:
  1356                           	opt stack 0
  1357  000091                     rd_buffer_getn@pbuffer:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x31
  1361  000091                     	ds	1
  1362  000092                     ?_string_utils_from_hex:
  1363                           	opt stack 0
  1364  000092                     _rd_buffer_put$462:
  1365                           	opt stack 0
  1366  000092                     string_utils_split@symb:
  1367                           	opt stack 0
  1368  000092                     string_utils_strncmp@case_sensitive:
  1369                           	opt stack 0
  1370  000092                     string_utils_from_hex@pdata:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x32
  1374  000092                     	ds	1
  1375  000093                     ??_string_utils_strncmp:
  1376  000093                     rd_buffer_readline@pdata:
  1377                           	opt stack 0
  1378  000093                     rd_buffer_put@sz:
  1379                           	opt stack 0
  1380  000093                     rd_buffer_getn@prec:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x33
  1384  000093                     	ds	1
  1385  000094                     string_utils_from_hex@phex_str:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x34
  1389  000094                     	ds	1
  1390  000095                     string_utils_strncmp@result:
  1391                           	opt stack 0
  1392  000095                     rd_buffer_readline@psize:
  1393                           	opt stack 0
  1394  000095                     rd_buffer_put@ind:
  1395                           	opt stack 0
  1396  000095                     rd_buffer_getn@rec_count:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x35
  1400  000095                     	ds	1
  1401  000096                     ??_string_utils_from_hex:
  1402  000096                     string_utils_strncmp@pos:
  1403                           	opt stack 0
  1404                           
  1405                           ; 2 bytes @ 0x36
  1406  000096                     	ds	1
  1407  000097                     ?_serialport_write:
  1408                           	opt stack 0
  1409  000097                     rd_buffer_readline@ch:
  1410                           	opt stack 0
  1411  000097                     serialport_write@pstr:
  1412                           	opt stack 0
  1413                           
  1414                           ; 2 bytes @ 0x37
  1415  000097                     	ds	1
  1416  000098                     string_utils_strncmp@symb1:
  1417                           	opt stack 0
  1418  000098                     rd_buffer_getn@i:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x38
  1422  000098                     	ds	1
  1423  000099                     string_utils_strncmp@symb2:
  1424                           	opt stack 0
  1425  000099                     string_utils_from_hex@len:
  1426                           	opt stack 0
  1427                           
  1428                           ; 2 bytes @ 0x39
  1429  000099                     	ds	1
  1430  00009A                     ?_on_parameter_found:
  1431                           	opt stack 0
  1432  00009A                     ?_this_parse_command:
  1433                           	opt stack 0
  1434  00009A                     on_parameter_found@cmd_id:
  1435                           	opt stack 0
  1436  00009A                     this_parse_command@pbuf:
  1437                           	opt stack 0
  1438                           
  1439                           ; 2 bytes @ 0x3A
  1440  00009A                     	ds	1
  1441  00009B                     on_parameter_found@p_id:
  1442                           	opt stack 0
  1443  00009B                     string_utils_from_hex@j:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x3B
  1447  00009B                     	ds	1
  1448  00009C                     
  1449                           ; 3 bytes @ 0x3C
  1450  00009C                     	ds	1
  1451  00009D                     string_utils_from_hex@i:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x3D
  1455  00009D                     	ds	2
  1456  00009F                     
  1457                           ; 1 bytes @ 0x3F
  1458  00009F                     	ds	1
  1459  0000A0                     tblptru	equ	0xFF8
  1460                           postinc0	equ	0xFEE
  1461                           wreg	equ	0xFE8
  1462                           
  1463                           ; 0 bytes @ 0x40
  1464                           
  1465                           	psect	cstackCOMRAM
  1466  000026                     __pcstackCOMRAM:
  1467                           	opt stack 0
  1468  000026                     ?_syntax_get_text:
  1469                           	opt stack 0
  1470  000026                     
  1471                           ; 1 bytes @ 0x0
  1472  000026                     	ds	4
  1473  00002A                     ??_isr_high:
  1474                           
  1475                           ; 0 bytes @ 0x4
  1476  00002A                     	ds	8
  1477  000032                     ?i2_rd_buffer_put:
  1478                           	opt stack 0
  1479  000032                     _uart_error$257:
  1480                           	opt stack 0
  1481  000032                     i2rd_buffer_put@pbuffer:
  1482                           	opt stack 0
  1483                           
  1484                           ; 2 bytes @ 0xC
  1485  000032                     	ds	1
  1486  000033                     uart_getc@pbyte:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0xD
  1490  000033                     	ds	1
  1491  000034                     uart_getc@result:
  1492                           	opt stack 0
  1493  000034                     i2rd_buffer_put@prec:
  1494                           	opt stack 0
  1495                           
  1496                           ; 2 bytes @ 0xE
  1497  000034                     	ds	2
  1498                           tblptru	equ	0xFF8
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           
  1502 ;;
  1503 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1504 ;;
  1505 ;; *************** function _main *****************
  1506 ;; Defined at:
  1507 ;;		line 25 in file "src/main.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2  942[COMRAM] int 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1521 ;;      Params:         0       0       0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       2       0       0       0       0
  1524 ;;      Totals:         0       0       2       0       0       0       0
  1525 ;;Total ram usage:        2 bytes
  1526 ;; Hardware stack levels required when called:   12
  1527 ;; This function calls:
  1528 ;;		_delay_ms
  1529 ;;		_startup
  1530 ;;		_serialport_task
  1531 ;; This function is called by:
  1532 ;;		Startup code after reset
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text0
  1537  000A2C                     __ptext0:
  1538                           	opt stack 0
  1539  000A2C                     _main:
  1540                           	opt stack 19
  1541                           
  1542                           ;main.c: 26: while(startup() != RESULT_SUCCESS)
  1543                           
  1544                           ; BSR set to: 0
  1545  000A2C  D007               	goto	l5493
  1546  000A2E                     l5491:
  1547                           
  1548                           ; BSR set to: 1
  1549                           ;main.c: 27: {
  1550                           ;main.c: 28: delay_ms(1000);
  1551  000A2E  0E03               	movlw	3
  1552  000A30  0100               	movlb	0	; () banked
  1553  000A32  6F87               	movwf	(?_delay_ms+1)& (0+255),b
  1554  000A34  0EE8               	movlw	232
  1555  000A36  6F86               	movwf	?_delay_ms& (0+255),b
  1556  000A38  EC4A  F009         	call	_delay_ms	;wreg free
  1557  000A3C                     l5493:
  1558  000A3C  ECC8  F006         	call	_startup	;wreg free
  1559  000A40  0101               	movlb	1	; () banked
  1560  000A42  6FFD               	movwf	??_main& (0+255),b
  1561  000A44  05FD               	decf	??_main& (0+255),w,b
  1562  000A46  E1F3               	bnz	l5491
  1563                           
  1564                           ; BSR set to: 1
  1565                           
  1566                           ;main.c: 29: };
  1567                           ;main.c: 30: do{INTCONbits.GIEH=(1); INTCONbits.GIEL=(1);}while(0);;
  1568  000A48  8EF2               	bsf	intcon,7,c	;volatile
  1569  000A4A  8CF2               	bsf	intcon,6,c	;volatile
  1570  000A4C                     l5495:
  1571  000A4C  C0B4  F1FD         	movff	_current_event,??_main	;volatile
  1572  000A50  0E01               	movlw	1
  1573  000A52  0101               	movlb	1	; () banked
  1574  000A54  6FFE               	movwf	(??_main+1)& (0+255),b
  1575  000A56  2BFD               	incf	??_main& (0+255),f,b
  1576  000A58  D002               	goto	u5794
  1577  000A5A                     u5795:
  1578  000A5A  90D8               	bcf	status,0,c
  1579  000A5C  37FE               	rlcf	(??_main+1)& (0+255),f,b
  1580  000A5E                     u5794:
  1581  000A5E  2FFD               	decfsz	??_main& (0+255),f,b
  1582  000A60  D7FC               	goto	u5795
  1583  000A62  51FE               	movf	(??_main+1)& (0+255),w,b
  1584  000A64  0100               	movlb	0	; () banked
  1585  000A66  15B6               	andwf	_pool& (0+255),w,b	;volatile
  1586  000A68  E01B               	bz	l5501
  1587                           
  1588                           ; BSR set to: 0
  1589  000A6A  51B4               	movf	_current_event& (0+255),w,b
  1590  000A6C  0D02               	mullw	2
  1591  000A6E  50F3               	movf	prodl,w,c
  1592  000A70  0FA0               	addlw	low _events	;volatile
  1593  000A72  6ED9               	movwf	fsr2l,c
  1594  000A74  6ADA               	clrf	fsr2h,c
  1595  000A76  50DE               	movf	postinc2,w,c
  1596  000A78  10DD               	iorwf	postdec2,w,c
  1597  000A7A  E012               	bz	l5501
  1598                           
  1599                           ; BSR set to: 0
  1600  000A7C  51B4               	movf	_current_event& (0+255),w,b
  1601  000A7E  0D02               	mullw	2
  1602  000A80  50F3               	movf	prodl,w,c
  1603  000A82  0FA0               	addlw	low _events	;volatile
  1604  000A84  6ED9               	movwf	fsr2l,c
  1605  000A86  6ADA               	clrf	fsr2h,c
  1606  000A88  D801               	call	u5828
  1607  000A8A  D00A               	goto	l5501
  1608  000A8C                     u5828:
  1609  000A8C  0005               	push	
  1610  000A8E  6EFA               	movwf	pclath,c
  1611  000A90  50DE               	movf	postinc2,w,c
  1612  000A92  6EFD               	movwf	tosl,c
  1613  000A94  50DE               	movf	postinc2,w,c
  1614  000A96  6EFE               	movwf	tosh,c
  1615  000A98  50F8               	movf	tblptru,w,c
  1616  000A9A  6EFF               	movwf	tosu,c
  1617  000A9C  50FA               	movf	pclath,w,c
  1618  000A9E  0012               	return		;indir
  1619  000AA0                     l5501:
  1620  000AA0  C0B4  F1FD         	movff	_current_event,??_main	;volatile
  1621  000AA4  0E01               	movlw	1
  1622  000AA6  0101               	movlb	1	; () banked
  1623  000AA8  6FFE               	movwf	(??_main+1)& (0+255),b
  1624  000AAA  2BFD               	incf	??_main& (0+255),f,b
  1625  000AAC  D002               	goto	u5834
  1626  000AAE                     u5835:
  1627  000AAE  90D8               	bcf	status,0,c
  1628  000AB0  37FE               	rlcf	(??_main+1)& (0+255),f,b
  1629  000AB2                     u5834:
  1630  000AB2  2FFD               	decfsz	??_main& (0+255),f,b
  1631  000AB4  D7FC               	goto	u5835
  1632  000AB6  1DFE               	comf	(??_main+1)& (0+255),w,b
  1633  000AB8  0100               	movlb	0	; () banked
  1634  000ABA  17B6               	andwf	_pool& (0+255),f,b	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637  000ABC  2BB4               	incf	_current_event& (0+255),f,b	;volatile
  1638                           
  1639                           ; BSR set to: 0
  1640  000ABE  0E07               	movlw	7
  1641  000AC0  17B4               	andwf	_current_event& (0+255),f,b	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644  000AC2  0004               	clrwdt		;# 
  1645  000AC4  D7C3               	goto	l5495
  1646                           tosu	equ	0xFFF
  1647                           tosh	equ	0xFFE
  1648                           tosl	equ	0xFFD
  1649                           pclath	equ	0xFFA
  1650                           tblptru	equ	0xFF8
  1651                           prodl	equ	0xFF3
  1652                           intcon	equ	0xFF2
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postinc2	equ	0xFDE
  1656                           postdec2	equ	0xFDD
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _delay_ms *****************
  1662 ;; Defined at:
  1663 ;;		line 28 in file "src/drivers/delay.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  delay           2   38[BANK0 ] unsigned int 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;		None               void
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : F/0
  1674 ;;		On exit  : F/0
  1675 ;;		Unchanged: FFFFFFF0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       2       0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         0       2       0       0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    5
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text1
  1692  001294                     __ptext1:
  1693                           	opt stack 0
  1694  001294                     __end_of_main:
  1695                           	opt stack 0
  1696  001294                     _delay_ms:
  1697                           	opt stack 25
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;delay.c: 29: this_delay_timer_ms = delay;
  1701  001294  C086  F0D8         	movff	delay_ms@delay,_this_delay_timer_ms	;volatile
  1702  001298  C087  F0D9         	movff	delay_ms@delay+1,_this_delay_timer_ms+1	;volatile
  1703  00129C                     l2545:
  1704                           
  1705                           ; BSR set to: 0
  1706  00129C  51D9               	movf	(_this_delay_timer_ms+1)& (0+255),w,b	;volatile
  1707  00129E  11D8               	iorwf	_this_delay_timer_ms& (0+255),w,b	;volatile
  1708  0012A0  B4D8               	btfsc	status,2,c
  1709  0012A2  0012               	return	
  1710  0012A4  D7FB               	goto	l2545
  1711  0012A6                     __end_of_delay_ms:
  1712                           	opt stack 0
  1713                           tosu	equ	0xFFF
  1714                           tosh	equ	0xFFE
  1715                           tosl	equ	0xFFD
  1716                           pclath	equ	0xFFA
  1717                           tblptru	equ	0xFF8
  1718                           prodl	equ	0xFF3
  1719                           intcon	equ	0xFF2
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           postinc2	equ	0xFDE
  1723                           postdec2	equ	0xFDD
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _serialport_task *****************
  1729 ;; Defined at:
  1730 ;;		line 35 in file "src/modules/serialport.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  size            2   37[BANK1 ] int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;		None               void
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : F/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: FFFFFFF0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         0       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       2       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0
  1747 ;;      Totals:         0       0       2       0       0       0       0
  1748 ;;Total ram usage:        2 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:   11
  1751 ;; This function calls:
  1752 ;;		_rd_buffer_readline
  1753 ;;		_syntax_string
  1754 ;;		_rd_buffer_cnt
  1755 ;;		_rd_buffer_getn
  1756 ;;		_uart_puts
  1757 ;; This function is called by:
  1758 ;;		_startup
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text2
  1764  000BF4                     __ptext2:
  1765                           	opt stack 0
  1766  000BF4                     _serialport_task:
  1767                           	opt stack 19
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;serialport.c: 36: SIZE size;
  1771                           ;serialport.c: 37: if (rd_buffer_readline(&g_rx_buffer, &serialport_buffer, &size)) {
  1772                           
  1773                           ; BSR set to: 0
  1774  000BF4  0E01               	movlw	high _g_rx_buffer
  1775  000BF6  0100               	movlb	0	; () banked
  1776  000BF8  6F92               	movwf	(?_rd_buffer_readline+1)& (0+255),b
  1777  000BFA  0E00               	movlw	low _g_rx_buffer
  1778  000BFC  6F91               	movwf	?_rd_buffer_readline& (0+255),b
  1779  000BFE  0E02               	movlw	high _serialport_buffer
  1780  000C00  6F94               	movwf	(?_rd_buffer_readline+3)& (0+255),b
  1781  000C02  0E7F               	movlw	low _serialport_buffer
  1782  000C04  6F93               	movwf	(?_rd_buffer_readline+2)& (0+255),b
  1783  000C06  0E01               	movlw	high serialport_task@size
  1784  000C08  6F96               	movwf	(?_rd_buffer_readline+5)& (0+255),b
  1785  000C0A  0EFB               	movlw	low serialport_task@size
  1786  000C0C  6F95               	movwf	(?_rd_buffer_readline+4)& (0+255),b
  1787  000C0E  EC1A  F008         	call	_rd_buffer_readline	;wreg free
  1788  000C12  0900               	iorlw	0
  1789  000C14  E009               	bz	l5083
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;serialport.c: 38: syntax_string(serialport_buffer, FALSE);
  1793  000C16  0E02               	movlw	high _serialport_buffer
  1794  000C18  0101               	movlb	1	; () banked
  1795  000C1A  6FEE               	movwf	(?_syntax_string+1)& (0+255),b
  1796  000C1C  0E7F               	movlw	low _serialport_buffer
  1797  000C1E  6FED               	movwf	?_syntax_string& (0+255),b
  1798  000C20  0E00               	movlw	0
  1799  000C22  6BEF               	clrf	(?_syntax_string+2)& (0+255),b
  1800  000C24  EC75  F001         	call	_syntax_string	;wreg free
  1801  000C28                     l5083:
  1802                           
  1803                           ;serialport.c: 39: }
  1804                           ;serialport.c: 40: size = rd_buffer_cnt(&g_tx_buffer);
  1805  000C28  0E01               	movlw	high _g_tx_buffer
  1806  000C2A  0100               	movlb	0	; () banked
  1807  000C2C  6F87               	movwf	(?_rd_buffer_cnt+1)& (0+255),b
  1808  000C2E  0E6B               	movlw	low _g_tx_buffer
  1809  000C30  6F86               	movwf	?_rd_buffer_cnt& (0+255),b
  1810  000C32  ECCC  F007         	call	_rd_buffer_cnt	;wreg free
  1811  000C36  C086  F1FB         	movff	?_rd_buffer_cnt,serialport_task@size
  1812  000C3A  C087  F1FC         	movff	?_rd_buffer_cnt+1,serialport_task@size+1
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;serialport.c: 41: if (size > 0) {
  1816  000C3E  0101               	movlb	1	; () banked
  1817  000C40  51FC               	movf	(serialport_task@size+1)& (0+255),w,b
  1818  000C42  0A80               	xorlw	128
  1819  000C44  0F80               	addlw	-128
  1820  000C46  0E01               	movlw	1
  1821  000C48  B4D8               	btfsc	status,2,c
  1822  000C4A  5DFB               	subwf	serialport_task@size& (0+255),w,b
  1823  000C4C  A0D8               	btfss	status,0,c
  1824  000C4E  0012               	return	
  1825                           
  1826                           ; BSR set to: 1
  1827                           ;serialport.c: 42: rd_buffer_getn(&g_tx_buffer, &serialport_buffer, size);
  1828  000C50  0E01               	movlw	high _g_tx_buffer
  1829  000C52  0100               	movlb	0	; () banked
  1830  000C54  6F92               	movwf	(?_rd_buffer_getn+1)& (0+255),b
  1831  000C56  0E6B               	movlw	low _g_tx_buffer
  1832  000C58  6F91               	movwf	?_rd_buffer_getn& (0+255),b
  1833  000C5A  0E02               	movlw	high _serialport_buffer
  1834  000C5C  6F94               	movwf	(?_rd_buffer_getn+3)& (0+255),b
  1835  000C5E  0E7F               	movlw	low _serialport_buffer
  1836  000C60  6F93               	movwf	(?_rd_buffer_getn+2)& (0+255),b
  1837  000C62  C1FB  F095         	movff	serialport_task@size,?_rd_buffer_getn+4
  1838  000C66  C1FC  F096         	movff	serialport_task@size+1,?_rd_buffer_getn+5
  1839  000C6A  EC80  F008         	call	_rd_buffer_getn	;wreg free
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;serialport.c: 43: uart_puts(serialport_buffer, size);
  1843  000C6E  0E02               	movlw	high _serialport_buffer
  1844  000C70  0100               	movlb	0	; () banked
  1845  000C72  6F88               	movwf	(?_uart_puts+1)& (0+255),b
  1846  000C74  0E7F               	movlw	low _serialport_buffer
  1847  000C76  6F87               	movwf	?_uart_puts& (0+255),b
  1848  000C78  C1FB  F089         	movff	serialport_task@size,?_uart_puts+2
  1849  000C7C  C1FC  F08A         	movff	serialport_task@size+1,?_uart_puts+3
  1850  000C80  EF54  F007         	goto	l4963	;wreg free
  1851  000C84                     __end_of_serialport_task:
  1852                           	opt stack 0
  1853                           tosu	equ	0xFFF
  1854                           tosh	equ	0xFFE
  1855                           tosl	equ	0xFFD
  1856                           pclath	equ	0xFFA
  1857                           tblptru	equ	0xFF8
  1858                           prodl	equ	0xFF3
  1859                           intcon	equ	0xFF2
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _rd_buffer_readline *****************
  1869 ;; Defined at:
  1870 ;;		line 39 in file "src/modules/rd_buffer.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  pbuffer         2   49[BANK0 ] PTR struct .
  1873 ;;		 -> g_rx_buffer(107), 
  1874 ;;  pdata           2   51[BANK0 ] PTR unsigned char 
  1875 ;;		 -> serialport_buffer(100), 
  1876 ;;  psize           2   53[BANK0 ] PTR int 
  1877 ;;		 -> serialport_task@size(2), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  ch              1   55[BANK0 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      unsigned char 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : F/0
  1886 ;;		On exit  : F/0
  1887 ;;		Unchanged: FFFFFFF0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1889 ;;      Params:         0       6       0       0       0       0       0
  1890 ;;      Locals:         0       1       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0
  1892 ;;      Totals:         0       7       0       0       0       0       0
  1893 ;;Total ram usage:        7 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    6
  1896 ;; This function calls:
  1897 ;;		_rd_buffer_get
  1898 ;; This function is called by:
  1899 ;;		_serialport_task
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text3
  1904  001034                     __ptext3:
  1905                           	opt stack 0
  1906  001034                     _rd_buffer_readline:
  1907                           	opt stack 23
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;rd_buffer.c: 40: if(this_contains_crlf && pdata && psize)
  1911  001034  51B8               	movf	_this_contains_crlf& (0+255),w,b
  1912  001036  E021               	bz	l4995
  1913                           
  1914                           ; BSR set to: 0
  1915  001038  5194               	movf	(rd_buffer_readline@pdata+1)& (0+255),w,b
  1916  00103A  1193               	iorwf	rd_buffer_readline@pdata& (0+255),w,b
  1917  00103C  E01E               	bz	l4995
  1918                           
  1919                           ; BSR set to: 0
  1920  00103E  5196               	movf	(rd_buffer_readline@psize+1)& (0+255),w,b
  1921  001040  1195               	iorwf	rd_buffer_readline@psize& (0+255),w,b
  1922  001042  E10D               	bnz	l4989
  1923  001044  0C00               	retlw	0
  1924  001046                     l4983:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;rd_buffer.c: 44: {
  1928                           ;rd_buffer.c: 45: *pdata = ch;
  1929  001046  C093  FFD9         	movff	rd_buffer_readline@pdata,fsr2l
  1930  00104A  C094  FFDA         	movff	rd_buffer_readline@pdata+1,fsr2h
  1931  00104E  C097  FFDF         	movff	rd_buffer_readline@ch,indf2
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;rd_buffer.c: 46: pdata++;
  1935  001052  4B93               	infsnz	rd_buffer_readline@pdata& (0+255),f,b
  1936  001054  2B94               	incf	(rd_buffer_readline@pdata+1)& (0+255),f,b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;rd_buffer.c: 47: *psize++;
  1940  001056  0E02               	movlw	2
  1941  001058  2795               	addwf	rd_buffer_readline@psize& (0+255),f,b
  1942  00105A  0E00               	movlw	0
  1943  00105C  2396               	addwfc	(rd_buffer_readline@psize+1)& (0+255),f,b
  1944  00105E                     l4989:
  1945                           
  1946                           ; BSR set to: 0
  1947  00105E  C091  F086         	movff	rd_buffer_readline@pbuffer,?_rd_buffer_get
  1948  001062  C092  F087         	movff	rd_buffer_readline@pbuffer+1,?_rd_buffer_get+1
  1949  001066  0E00               	movlw	high rd_buffer_readline@ch
  1950  001068  6F89               	movwf	(?_rd_buffer_get+3)& (0+255),b
  1951  00106A  0E97               	movlw	low rd_buffer_readline@ch
  1952  00106C  6F88               	movwf	(?_rd_buffer_get+2)& (0+255),b
  1953  00106E  ECC2  F004         	call	_rd_buffer_get	;wreg free
  1954  001072  0900               	iorlw	0
  1955  001074  E1E8               	bnz	l4983
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;rd_buffer.c: 48: }
  1959                           ;rd_buffer.c: 49: this_contains_crlf = FALSE;
  1960  001076  6BB8               	clrf	_this_contains_crlf& (0+255),b
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;rd_buffer.c: 50: return TRUE;
  1964  001078  0C01               	retlw	1
  1965  00107A                     l4995:
  1966                           
  1967                           ; BSR set to: 0
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;rd_buffer.c: 51: }
  1971                           ;rd_buffer.c: 52: return FALSE;
  1972  00107A  0C00               	retlw	0
  1973  00107C                     __end_of_rd_buffer_readline:
  1974                           	opt stack 0
  1975                           tosu	equ	0xFFF
  1976                           tosh	equ	0xFFE
  1977                           tosl	equ	0xFFD
  1978                           pclath	equ	0xFFA
  1979                           tblptru	equ	0xFF8
  1980                           prodl	equ	0xFF3
  1981                           intcon	equ	0xFF2
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           indf2	equ	0xFDF
  1985                           postinc2	equ	0xFDE
  1986                           postdec2	equ	0xFDD
  1987                           fsr2h	equ	0xFDA
  1988                           fsr2l	equ	0xFD9
  1989                           status	equ	0xFD8
  1990                           
  1991 ;; *************** function _rd_buffer_cnt *****************
  1992 ;; Defined at:
  1993 ;;		line 63 in file "src/modules/rd_buffer.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  pbuffer         2   38[BANK0 ] PTR struct .
  1996 ;;		 -> g_tx_buffer(107), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  sz              2   44[BANK0 ] int 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  2   38[BANK0 ] int 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : F/0
  2005 ;;		On exit  : F/0
  2006 ;;		Unchanged: FFFFFFF0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2008 ;;      Params:         0       2       0       0       0       0       0
  2009 ;;      Locals:         0       2       0       0       0       0       0
  2010 ;;      Temps:          0       4       0       0       0       0       0
  2011 ;;      Totals:         0       8       0       0       0       0       0
  2012 ;;Total ram usage:        8 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    5
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_serialport_task
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text4
  2023  000F98                     __ptext4:
  2024                           	opt stack 0
  2025  000F98                     _rd_buffer_cnt:
  2026                           	opt stack 24
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;rd_buffer.c: 64: SIZE sz;
  2030                           ;rd_buffer.c: 65: sz = pbuffer->head.last - pbuffer->head.first;
  2031                           
  2032                           ; BSR set to: 0
  2033  000F98  EE20 F002          	lfsr	2,2
  2034  000F9C  5186               	movf	rd_buffer_cnt@pbuffer& (0+255),w,b
  2035  000F9E  26D9               	addwf	fsr2l,f,c
  2036  000FA0  5187               	movf	(rd_buffer_cnt@pbuffer+1)& (0+255),w,b
  2037  000FA2  22DA               	addwfc	fsr2h,f,c
  2038  000FA4  CFDE F088          	movff	postinc2,??_rd_buffer_cnt
  2039  000FA8  CFDD F089          	movff	postdec2,??_rd_buffer_cnt+1
  2040  000FAC  C086  FFD9         	movff	rd_buffer_cnt@pbuffer,fsr2l
  2041  000FB0  C087  FFDA         	movff	rd_buffer_cnt@pbuffer+1,fsr2h
  2042  000FB4  CFDE F08A          	movff	postinc2,??_rd_buffer_cnt+2
  2043  000FB8  CFDD F08B          	movff	postdec2,??_rd_buffer_cnt+3
  2044  000FBC  5188               	movf	??_rd_buffer_cnt& (0+255),w,b
  2045  000FBE  5D8A               	subwf	(??_rd_buffer_cnt+2)& (0+255),w,b
  2046  000FC0  6F8C               	movwf	rd_buffer_cnt@sz& (0+255),b
  2047  000FC2  5189               	movf	(??_rd_buffer_cnt+1)& (0+255),w,b
  2048  000FC4  598B               	subwfb	(??_rd_buffer_cnt+3)& (0+255),w,b
  2049  000FC6  6F8D               	movwf	(rd_buffer_cnt@sz+1)& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;rd_buffer.c: 66: if(sz < 0) {
  2053  000FC8  AF8D               	btfss	(rd_buffer_cnt@sz+1)& (0+255),7,b
  2054  000FCA  D00A               	goto	l5027
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;rd_buffer.c: 67: sz += pbuffer->head.size;
  2058  000FCC  EE20 F004          	lfsr	2,4
  2059  000FD0  5186               	movf	rd_buffer_cnt@pbuffer& (0+255),w,b
  2060  000FD2  26D9               	addwf	fsr2l,f,c
  2061  000FD4  5187               	movf	(rd_buffer_cnt@pbuffer+1)& (0+255),w,b
  2062  000FD6  22DA               	addwfc	fsr2h,f,c
  2063  000FD8  50DE               	movf	postinc2,w,c
  2064  000FDA  278C               	addwf	rd_buffer_cnt@sz& (0+255),f,b
  2065  000FDC  50DD               	movf	postdec2,w,c
  2066  000FDE  238D               	addwfc	(rd_buffer_cnt@sz+1)& (0+255),f,b
  2067  000FE0                     l5027:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;rd_buffer.c: 68: }
  2071                           ;rd_buffer.c: 69: return sz;
  2072  000FE0  C08C  F086         	movff	rd_buffer_cnt@sz,?_rd_buffer_cnt
  2073  000FE4  C08D  F087         	movff	rd_buffer_cnt@sz+1,?_rd_buffer_cnt+1
  2074                           
  2075                           ; BSR set to: 0
  2076  000FE8  0012               	return	
  2077  000FEA                     __end_of_rd_buffer_cnt:
  2078                           	opt stack 0
  2079                           tosu	equ	0xFFF
  2080                           tosh	equ	0xFFE
  2081                           tosl	equ	0xFFD
  2082                           pclath	equ	0xFFA
  2083                           tblptru	equ	0xFF8
  2084                           prodl	equ	0xFF3
  2085                           intcon	equ	0xFF2
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           postdec2	equ	0xFDD
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _rd_buffer_getn *****************
  2096 ;; Defined at:
  2097 ;;		line 185 in file "src/modules/rd_buffer.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  pbuffer         2   49[BANK0 ] PTR struct .
  2100 ;;		 -> g_tx_buffer(107), 
  2101 ;;  prec            2   51[BANK0 ] PTR unsigned char 
  2102 ;;		 -> serialport_buffer(100), 
  2103 ;;  rec_count       2   53[BANK0 ] int 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  i               2   56[BANK0 ] int 
  2106 ;;  result          1    0        unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      unsigned char 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : F/0
  2113 ;;		On exit  : F/0
  2114 ;;		Unchanged: FFFFFFF0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2116 ;;      Params:         0       6       0       0       0       0       0
  2117 ;;      Locals:         0       3       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0
  2119 ;;      Totals:         0       9       0       0       0       0       0
  2120 ;;Total ram usage:        9 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    6
  2123 ;; This function calls:
  2124 ;;		_rd_buffer_get
  2125 ;; This function is called by:
  2126 ;;		_serialport_task
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text5
  2131  001100                     __ptext5:
  2132                           	opt stack 0
  2133  001100                     _rd_buffer_getn:
  2134                           	opt stack 23
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;rd_buffer.c: 186: SIZE i=0;
  2138                           
  2139                           ; BSR set to: 0
  2140  001100  6B98               	clrf	rd_buffer_getn@i& (0+255),b
  2141  001102  6B99               	clrf	(rd_buffer_getn@i+1)& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;rd_buffer.c: 188: while(rec_count--){
  2145  001104  D011               	goto	l5077
  2146  001106                     l5071:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;rd_buffer.c: 189: if(rd_buffer_get(pbuffer, &prec[i]) == FALSE ) {
  2150  001106  C091  F086         	movff	rd_buffer_getn@pbuffer,?_rd_buffer_get
  2151  00110A  C092  F087         	movff	rd_buffer_getn@pbuffer+1,?_rd_buffer_get+1
  2152  00110E  5198               	movf	rd_buffer_getn@i& (0+255),w,b
  2153  001110  2593               	addwf	rd_buffer_getn@prec& (0+255),w,b
  2154  001112  6F88               	movwf	(?_rd_buffer_get+2)& (0+255),b
  2155  001114  5199               	movf	(rd_buffer_getn@i+1)& (0+255),w,b
  2156  001116  2194               	addwfc	(rd_buffer_getn@prec+1)& (0+255),w,b
  2157  001118  6F89               	movwf	(?_rd_buffer_get+3)& (0+255),b
  2158  00111A  ECC2  F004         	call	_rd_buffer_get	;wreg free
  2159  00111E  0900               	iorlw	0
  2160  001120  B4D8               	btfsc	status,2,c
  2161  001122  0012               	return	
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;rd_buffer.c: 192: }
  2165                           ;rd_buffer.c: 193: i++;
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;rd_buffer.c: 191: break;
  2169  001124  4B98               	infsnz	rd_buffer_getn@i& (0+255),f,b
  2170  001126  2B99               	incf	(rd_buffer_getn@i+1)& (0+255),f,b
  2171  001128                     l5077:
  2172                           
  2173                           ; BSR set to: 0
  2174  001128  0795               	decf	rd_buffer_getn@rec_count& (0+255),f,b
  2175  00112A  A0D8               	btfss	status,0,c
  2176  00112C  0796               	decf	(rd_buffer_getn@rec_count+1)& (0+255),f,b
  2177  00112E  0100               	movlb	0	; () banked
  2178  001130  2995               	incf	rd_buffer_getn@rec_count& (0+255),w,b
  2179  001132  B4D8               	btfsc	status,2,c
  2180  001134  2996               	incf	(rd_buffer_getn@rec_count+1)& (0+255),w,b
  2181  001136  B4D8               	btfsc	status,2,c
  2182                           
  2183                           ; BSR set to: 0
  2184  001138  0012               	return	
  2185  00113A  D7E5               	goto	l5071
  2186  00113C                     __end_of_rd_buffer_getn:
  2187                           	opt stack 0
  2188                           tosu	equ	0xFFF
  2189                           tosh	equ	0xFFE
  2190                           tosl	equ	0xFFD
  2191                           pclath	equ	0xFFA
  2192                           tblptru	equ	0xFF8
  2193                           prodl	equ	0xFF3
  2194                           intcon	equ	0xFF2
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           indf2	equ	0xFDF
  2198                           postinc2	equ	0xFDE
  2199                           postdec2	equ	0xFDD
  2200                           fsr2h	equ	0xFDA
  2201                           fsr2l	equ	0xFD9
  2202                           status	equ	0xFD8
  2203                           
  2204 ;; *************** function _rd_buffer_get *****************
  2205 ;; Defined at:
  2206 ;;		line 122 in file "src/modules/rd_buffer.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  pbuffer         2   38[BANK0 ] PTR struct .
  2209 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  2210 ;;  prec            2   40[BANK0 ] PTR unsigned char 
  2211 ;;		 -> serialport_buffer(100), rd_buffer_readline@ch(1), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  first           2   47[BANK0 ] int 
  2214 ;;  last            2   44[BANK0 ] int 
  2215 ;;  result          1   46[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : F/0
  2222 ;;		On exit  : F/0
  2223 ;;		Unchanged: FFFFFFF0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         0       4       0       0       0       0       0
  2226 ;;      Locals:         0       5       0       0       0       0       0
  2227 ;;      Temps:          0       2       0       0       0       0       0
  2228 ;;      Totals:         0      11       0       0       0       0       0
  2229 ;;Total ram usage:       11 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    5
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_rd_buffer_readline
  2236 ;;		_rd_buffer_getn
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text6
  2241  000984                     __ptext6:
  2242                           	opt stack 0
  2243  000984                     _rd_buffer_get:
  2244                           	opt stack 23
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;rd_buffer.c: 123: CHAR result = FALSE;
  2248                           
  2249                           ; BSR set to: 0
  2250  000984  6B8E               	clrf	rd_buffer_get@result& (0+255),b
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;rd_buffer.c: 124: INT16 first = pbuffer->head.first;
  2254  000986  EE20 F002          	lfsr	2,2
  2255  00098A  5186               	movf	rd_buffer_get@pbuffer& (0+255),w,b
  2256  00098C  26D9               	addwf	fsr2l,f,c
  2257  00098E  5187               	movf	(rd_buffer_get@pbuffer+1)& (0+255),w,b
  2258  000990  22DA               	addwfc	fsr2h,f,c
  2259  000992  CFDE F08F          	movff	postinc2,rd_buffer_get@first
  2260  000996  CFDD F090          	movff	postdec2,rd_buffer_get@first+1
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;rd_buffer.c: 125: INT16 last = pbuffer->head.last;
  2264  00099A  C086  FFD9         	movff	rd_buffer_get@pbuffer,fsr2l
  2265  00099E  C087  FFDA         	movff	rd_buffer_get@pbuffer+1,fsr2h
  2266  0009A2  CFDE F08C          	movff	postinc2,rd_buffer_get@last
  2267  0009A6  CFDD F08D          	movff	postdec2,rd_buffer_get@last+1
  2268                           
  2269                           ;rd_buffer.c: 126: if(first != last) {
  2270  0009AA  518D               	movf	(rd_buffer_get@last+1)& (0+255),w,b
  2271  0009AC  1990               	xorwf	(rd_buffer_get@first+1)& (0+255),w,b
  2272  0009AE  E102               	bnz	u5055
  2273  0009B0  518C               	movf	rd_buffer_get@last& (0+255),w,b
  2274  0009B2  198F               	xorwf	rd_buffer_get@first& (0+255),w,b
  2275  0009B4                     u5055:
  2276  0009B4  E039               	bz	l5017
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;rd_buffer.c: 127: (*prec) = pbuffer->list[first ];
  2280  0009B6  C086  F08A         	movff	rd_buffer_get@pbuffer,??_rd_buffer_get
  2281  0009BA  C087  F08B         	movff	rd_buffer_get@pbuffer+1,??_rd_buffer_get+1
  2282  0009BE  518F               	movf	rd_buffer_get@first& (0+255),w,b
  2283  0009C0  278A               	addwf	??_rd_buffer_get& (0+255),f,b
  2284  0009C2  5190               	movf	(rd_buffer_get@first+1)& (0+255),w,b
  2285  0009C4  238B               	addwfc	(??_rd_buffer_get+1)& (0+255),f,b
  2286  0009C6  0E06               	movlw	6
  2287  0009C8  258A               	addwf	??_rd_buffer_get& (0+255),w,b
  2288  0009CA  6ED9               	movwf	fsr2l,c
  2289  0009CC  0E00               	movlw	0
  2290  0009CE  218B               	addwfc	(??_rd_buffer_get+1)& (0+255),w,b
  2291  0009D0  6EDA               	movwf	fsr2h,c
  2292  0009D2  C088  FFE1         	movff	rd_buffer_get@prec,fsr1l
  2293  0009D6  C089  FFE2         	movff	rd_buffer_get@prec+1,fsr1h
  2294  0009DA  CFDF FFE7          	movff	indf2,indf1
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;rd_buffer.c: 128: first ++;
  2298  0009DE  4B8F               	infsnz	rd_buffer_get@first& (0+255),f,b
  2299  0009E0  2B90               	incf	(rd_buffer_get@first+1)& (0+255),f,b
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;rd_buffer.c: 129: pbuffer->head.first = first ;
  2303  0009E2  EE20 F002          	lfsr	2,2
  2304  0009E6  5186               	movf	rd_buffer_get@pbuffer& (0+255),w,b
  2305  0009E8  26D9               	addwf	fsr2l,f,c
  2306  0009EA  5187               	movf	(rd_buffer_get@pbuffer+1)& (0+255),w,b
  2307  0009EC  22DA               	addwfc	fsr2h,f,c
  2308  0009EE  C08F  FFDE         	movff	rd_buffer_get@first,postinc2
  2309  0009F2  C090  FFDD         	movff	rd_buffer_get@first+1,postdec2
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;rd_buffer.c: 130: if(first == pbuffer->head.size){
  2313  0009F6  EE20 F004          	lfsr	2,4
  2314  0009FA  5186               	movf	rd_buffer_get@pbuffer& (0+255),w,b
  2315  0009FC  26D9               	addwf	fsr2l,f,c
  2316  0009FE  5187               	movf	(rd_buffer_get@pbuffer+1)& (0+255),w,b
  2317  000A00  22DA               	addwfc	fsr2h,f,c
  2318  000A02  52DE               	movf	postinc2,f,c
  2319  000A04  5190               	movf	(rd_buffer_get@first+1)& (0+255),w,b
  2320  000A06  18DD               	xorwf	postdec2,w,c
  2321  000A08  C08F  FFE8         	movff	rd_buffer_get@first,wreg
  2322  000A0C  B4D8               	btfsc	status,2,c
  2323  000A0E  18DF               	xorwf	indf2,w,c
  2324  000A10  E109               	bnz	l5015
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;rd_buffer.c: 131: pbuffer->head.first = 0;
  2328  000A12  EE20 F002          	lfsr	2,2
  2329  000A16  5186               	movf	rd_buffer_get@pbuffer& (0+255),w,b
  2330  000A18  26D9               	addwf	fsr2l,f,c
  2331  000A1A  5187               	movf	(rd_buffer_get@pbuffer+1)& (0+255),w,b
  2332  000A1C  22DA               	addwfc	fsr2h,f,c
  2333  000A1E  0E00               	movlw	0
  2334  000A20  6EDE               	movwf	postinc2,c
  2335  000A22  6EDD               	movwf	postdec2,c
  2336  000A24                     l5015:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;rd_buffer.c: 132: }
  2340                           ;rd_buffer.c: 133: result = TRUE;
  2341  000A24  0E01               	movlw	1
  2342  000A26  6F8E               	movwf	rd_buffer_get@result& (0+255),b
  2343  000A28                     l5017:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;rd_buffer.c: 134: }
  2347                           ;rd_buffer.c: 135: return result;
  2348  000A28  518E               	movf	rd_buffer_get@result& (0+255),w,b
  2349                           
  2350                           ; BSR set to: 0
  2351  000A2A  0012               	return	
  2352  000A2C                     __end_of_rd_buffer_get:
  2353                           	opt stack 0
  2354                           tosu	equ	0xFFF
  2355                           tosh	equ	0xFFE
  2356                           tosl	equ	0xFFD
  2357                           pclath	equ	0xFFA
  2358                           tblptru	equ	0xFF8
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           indf1	equ	0xFE7
  2364                           fsr1h	equ	0xFE2
  2365                           fsr1l	equ	0xFE1
  2366                           indf2	equ	0xFDF
  2367                           postinc2	equ	0xFDE
  2368                           postdec2	equ	0xFDD
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _syntax_string *****************
  2374 ;; Defined at:
  2375 ;;		line 167 in file "src/modules/syntax.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  pstr            2   23[BANK1 ] PTR const unsigned char 
  2378 ;;		 -> serialport_buffer(100), 
  2379 ;;  case_sensiti    1   25[BANK1 ] unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  pchain          2   35[BANK1 ] PTR unsigned char 
  2382 ;;		 -> this_buf(127), 
  2383 ;;  pos             2   31[BANK1 ] int 
  2384 ;;  chains          2   33[BANK1 ] int 
  2385 ;;  result          2   29[BANK1 ] int 
  2386 ;;  str_len         2   27[BANK1 ] int 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  2   23[BANK1 ] int 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : F/1
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: FFFFFFF0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2396 ;;      Params:         0       0       3       0       0       0       0
  2397 ;;      Locals:         0       0      10       0       0       0       0
  2398 ;;      Temps:          0       0       1       0       0       0       0
  2399 ;;      Totals:         0       0      14       0       0       0       0
  2400 ;;Total ram usage:       14 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:   10
  2403 ;; This function calls:
  2404 ;;		_string_utils_strlen
  2405 ;;		_string_utils_split
  2406 ;;		_this_parse_command
  2407 ;;		_on_parameter_found
  2408 ;;		_this_parse_parameter
  2409 ;;		_string_utils_strchr
  2410 ;; This function is called by:
  2411 ;;		_serialport_task
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text7
  2416  0002EA                     __ptext7:
  2417                           	opt stack 0
  2418  0002EA                     _syntax_string:
  2419                           	opt stack 19
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;syntax.c: 168: INT16 chains ;
  2423                           ;syntax.c: 169: INT16 result =0;
  2424                           
  2425                           ; BSR set to: 0
  2426  0002EA  6BF3               	clrf	syntax_string@result& (0+255),b
  2427  0002EC  6BF4               	clrf	(syntax_string@result+1)& (0+255),b
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;syntax.c: 170: INT16 str_len = string_utils_strlen(pstr);
  2431  0002EE  C1ED  F08C         	movff	syntax_string@pstr,?_string_utils_strlen
  2432  0002F2  C1EE  F08D         	movff	syntax_string@pstr+1,?_string_utils_strlen+1
  2433  0002F6  0100               	movlb	0	; () banked
  2434  0002F8  EC9E  F007         	call	_string_utils_strlen	;wreg free
  2435  0002FC  C08C  F1F1         	movff	?_string_utils_strlen,syntax_string@str_len
  2436  000300  C08D  F1F2         	movff	?_string_utils_strlen+1,syntax_string@str_len+1
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;syntax.c: 171: this_case_sensitive = case_sensitive;
  2440  000304  C1EF  F0B7         	movff	syntax_string@case_sensitive,_this_case_sensitive
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;syntax.c: 172: chains = string_utils_split(this_buf, pstr, str_len, ('$'));
  2444  000308  0E04               	movlw	high _this_buf
  2445  00030A  0100               	movlb	0	; () banked
  2446  00030C  6F87               	movwf	(?_string_utils_split+1)& (0+255),b
  2447  00030E  0E00               	movlw	low _this_buf
  2448  000310  6F86               	movwf	?_string_utils_split& (0+255),b
  2449  000312  C1ED  F088         	movff	syntax_string@pstr,?_string_utils_split+2
  2450  000316  C1EE  F089         	movff	syntax_string@pstr+1,?_string_utils_split+3
  2451  00031A  C1F1  F08A         	movff	syntax_string@str_len,?_string_utils_split+4
  2452  00031E  C1F2  F08B         	movff	syntax_string@str_len+1,?_string_utils_split+5
  2453  000322  0E24               	movlw	36
  2454  000324  6F8C               	movwf	(?_string_utils_split+6)& (0+255),b
  2455  000326  EC86  F006         	call	_string_utils_split	;wreg free
  2456  00032A  C086  F1F7         	movff	?_string_utils_split,syntax_string@chains
  2457  00032E  C087  F1F8         	movff	?_string_utils_split+1,syntax_string@chains+1
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;syntax.c: 173: command_id = -1;
  2461  000332  69B0               	setf	_command_id& (0+255),b
  2462  000334  69B1               	setf	(_command_id+1)& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;syntax.c: 174: parameter_id = -1;
  2466  000336  69B2               	setf	_parameter_id& (0+255),b
  2467  000338  69B3               	setf	(_parameter_id+1)& (0+255),b
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;syntax.c: 175: parameter_value[0] = '\0';
  2471  00033A  0102               	movlb	2	; () banked
  2472  00033C  6B00               	clrf	_parameter_value& (0+255),b
  2473                           
  2474                           ; BSR set to: 2
  2475                           ;syntax.c: 176: parameter_text[0] = '\0';
  2476  00033E  0103               	movlb	3	; () banked
  2477  000340  6B50               	clrf	_parameter_text& (0+255),b
  2478                           
  2479                           ; BSR set to: 3
  2480                           ;syntax.c: 177: if (chains >= 1 ) {
  2481  000342  0101               	movlb	1	; () banked
  2482  000344  51F8               	movf	(syntax_string@chains+1)& (0+255),w,b
  2483  000346  0A80               	xorlw	128
  2484  000348  0F80               	addlw	-128
  2485  00034A  0E01               	movlw	1
  2486  00034C  B4D8               	btfsc	status,2,c
  2487  00034E  5DF7               	subwf	syntax_string@chains& (0+255),w,b
  2488  000350  E372               	bnc	l5131
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;syntax.c: 178: INT16 pos = 0;
  2492  000352  6BF5               	clrf	syntax_string@pos& (0+255),b
  2493  000354  6BF6               	clrf	(syntax_string@pos+1)& (0+255),b
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;syntax.c: 179: char *pchain;
  2497                           ;syntax.c: 180: result = chains -1;
  2498  000356  0EFF               	movlw	255
  2499  000358  25F7               	addwf	syntax_string@chains& (0+255),w,b
  2500  00035A  6FF3               	movwf	syntax_string@result& (0+255),b
  2501  00035C  0EFF               	movlw	255
  2502  00035E  21F8               	addwfc	(syntax_string@chains+1)& (0+255),w,b
  2503  000360  6FF4               	movwf	(syntax_string@result+1)& (0+255),b
  2504                           
  2505                           ;syntax.c: 181: while ( chains-- ) {
  2506  000362  D061               	goto	l5129
  2507  000364                     l5113:
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;syntax.c: 182: pchain = &this_buf[pos];
  2511  000364  0E00               	movlw	low _this_buf
  2512  000366  0101               	movlb	1	; () banked
  2513  000368  25F5               	addwf	syntax_string@pos& (0+255),w,b
  2514  00036A  6FF9               	movwf	syntax_string@pchain& (0+255),b
  2515  00036C  0E04               	movlw	high _this_buf
  2516  00036E  21F6               	addwfc	(syntax_string@pos+1)& (0+255),w,b
  2517  000370  6FFA               	movwf	(syntax_string@pchain+1)& (0+255),b
  2518                           
  2519                           ;syntax.c: 183: if (pos == 0 ) {
  2520  000372  51F6               	movf	(syntax_string@pos+1)& (0+255),w,b
  2521  000374  11F5               	iorwf	syntax_string@pos& (0+255),w,b
  2522  000376  E118               	bnz	l5121
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;syntax.c: 185: if ( !this_parse_command( pchain ) ) {result =0;break;}
  2526  000378  C1F9  F09A         	movff	syntax_string@pchain,?_this_parse_command
  2527  00037C  C1FA  F09B         	movff	syntax_string@pchain+1,?_this_parse_command+1
  2528  000380  0100               	movlb	0	; () banked
  2529  000382  EC94  F003         	call	_this_parse_command	;wreg free
  2530  000386  0900               	iorlw	0
  2531  000388  E103               	bnz	l5119
  2532                           
  2533                           ; BSR set to: 1
  2534  00038A  6BF3               	clrf	syntax_string@result& (0+255),b
  2535  00038C  6BF4               	clrf	(syntax_string@result+1)& (0+255),b
  2536  00038E  D053               	goto	l5131
  2537  000390                     l5119:
  2538                           
  2539                           ; BSR set to: 1
  2540                           ;syntax.c: 186: on_parameter_found(PARSER_START, command_id, -1, (void*)(0), PARSER_TYPE
      +                          _NO_TYPE);
  2541  000390  C0B0  F09A         	movff	_command_id,?_on_parameter_found
  2542  000394  0100               	movlb	0	; () banked
  2543  000396  699B               	setf	(?_on_parameter_found+1)& (0+255),b
  2544  000398  6B9C               	clrf	(?_on_parameter_found+2)& (0+255),b
  2545  00039A  6B9D               	clrf	(?_on_parameter_found+3)& (0+255),b
  2546  00039C  6B9E               	clrf	(?_on_parameter_found+4)& (0+255),b
  2547  00039E  6B9F               	clrf	(?_on_parameter_found+5)& (0+255),b
  2548  0003A0  0E01               	movlw	1
  2549  0003A2  EC3E  F008         	call	_on_parameter_found
  2550                           
  2551                           ;syntax.c: 187: }
  2552  0003A6  D028               	goto	l5127
  2553  0003A8                     l5121:
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;syntax.c: 188: else {
  2557                           ;syntax.c: 190: if (this_parse_parameter( pchain ) == TRUE) {
  2558  0003A8  C1F9  F1DC         	movff	syntax_string@pchain,?_this_parse_parameter
  2559  0003AC  C1FA  F1DD         	movff	syntax_string@pchain+1,?_this_parse_parameter+1
  2560  0003B0  EC6C  F000         	call	_this_parse_parameter	;wreg free
  2561  0003B4  6FF0               	movwf	??_syntax_string& (0+255),b
  2562  0003B6  05F0               	decf	??_syntax_string& (0+255),w,b
  2563  0003B8  E111               	bnz	l5125
  2564                           
  2565                           ; BSR set to: 1
  2566                           ;syntax.c: 191: on_parameter_found(PARSER_PARAMETER, command_id, parameter_id, (void*)pa
      +                          rameter_value, parameter_type);
  2567  0003BA  C0B0  F09A         	movff	_command_id,?_on_parameter_found
  2568  0003BE  C0B2  F09B         	movff	_parameter_id,?_on_parameter_found+1
  2569  0003C2  0E00               	movlw	low _parameter_value
  2570  0003C4  0100               	movlb	0	; () banked
  2571  0003C6  6F9C               	movwf	(?_on_parameter_found+2)& (0+255),b
  2572  0003C8  0E02               	movlw	high _parameter_value
  2573  0003CA  6F9D               	movwf	(?_on_parameter_found+3)& (0+255),b
  2574  0003CC  0E20               	movlw	32
  2575  0003CE  6F9E               	movwf	(?_on_parameter_found+4)& (0+255),b
  2576  0003D0  C0B5  F09F         	movff	_parameter_type,?_on_parameter_found+5
  2577  0003D4  0E00               	movlw	0
  2578  0003D6  EC3E  F008         	call	_on_parameter_found
  2579                           
  2580                           ;syntax.c: 192: }
  2581  0003DA  D00E               	goto	l5127
  2582  0003DC                     l5125:
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;syntax.c: 194: else {
  2586                           ;syntax.c: 195: on_parameter_found(PARSER_PARAMETER, command_id, -1 , (void*)parameter_t
      +                          ext, PARSER_TYPE_NO_TYPE);
  2587  0003DC  C0B0  F09A         	movff	_command_id,?_on_parameter_found
  2588  0003E0  0100               	movlb	0	; () banked
  2589  0003E2  699B               	setf	(?_on_parameter_found+1)& (0+255),b
  2590  0003E4  0E50               	movlw	low _parameter_text
  2591  0003E6  6F9C               	movwf	(?_on_parameter_found+2)& (0+255),b
  2592  0003E8  0E03               	movlw	high _parameter_text
  2593  0003EA  6F9D               	movwf	(?_on_parameter_found+3)& (0+255),b
  2594  0003EC  0E20               	movlw	32
  2595  0003EE  6F9E               	movwf	(?_on_parameter_found+4)& (0+255),b
  2596  0003F0  0E00               	movlw	0
  2597  0003F2  6B9F               	clrf	(?_on_parameter_found+5)& (0+255),b
  2598  0003F4  EC3E  F008         	call	_on_parameter_found
  2599  0003F8                     l5127:
  2600                           
  2601                           ;syntax.c: 196: }
  2602                           ;syntax.c: 197: }
  2603                           ;syntax.c: 199: pos += string_utils_strchr(pchain, ('$')) + 1;
  2604  0003F8  0101               	movlb	1	; () banked
  2605  0003FA  51F9               	movf	syntax_string@pchain& (0+255),w,b
  2606  0003FC  0100               	movlb	0	; () banked
  2607  0003FE  6F86               	movwf	?_string_utils_strchr& (0+255),b
  2608  000400  0101               	movlb	1	; () banked
  2609  000402  51FA               	movf	(syntax_string@pchain+1)& (0+255),w,b
  2610  000404  0100               	movlb	0	; () banked
  2611  000406  6F87               	movwf	(?_string_utils_strchr+1)& (0+255),b
  2612  000408  0E20               	movlw	32
  2613  00040A  6F88               	movwf	(?_string_utils_strchr+2)& (0+255),b
  2614  00040C  0E24               	movlw	36
  2615  00040E  6F89               	movwf	(?_string_utils_strchr+3)& (0+255),b
  2616  000410  EC6A  F004         	call	_string_utils_strchr	;wreg free
  2617  000414  0100               	movlb	0	; () banked
  2618  000416  2B86               	incf	?_string_utils_strchr& (0+255),f,b
  2619  000418  0E00               	movlw	0
  2620  00041A  2387               	addwfc	(?_string_utils_strchr+1)& (0+255),f,b
  2621  00041C  5086               	movf	?_string_utils_strchr,w,c
  2622  00041E  0101               	movlb	1	; () banked
  2623  000420  27F5               	addwf	syntax_string@pos& (0+255),f,b
  2624  000422  5087               	movf	?_string_utils_strchr+1,w,c
  2625  000424  23F6               	addwfc	(syntax_string@pos+1)& (0+255),f,b
  2626  000426                     l5129:
  2627                           
  2628                           ; BSR set to: 1
  2629  000426  07F7               	decf	syntax_string@chains& (0+255),f,b
  2630  000428  A0D8               	btfss	status,0,c
  2631  00042A  07F8               	decf	(syntax_string@chains+1)& (0+255),f,b
  2632  00042C  0101               	movlb	1	; () banked
  2633  00042E  29F7               	incf	syntax_string@chains& (0+255),w,b
  2634  000430  B4D8               	btfsc	status,2,c
  2635  000432  29F8               	incf	(syntax_string@chains+1)& (0+255),w,b
  2636  000434  E197               	bnz	l5113
  2637  000436                     l5131:
  2638                           
  2639                           ; BSR set to: 1
  2640                           ;syntax.c: 200: }
  2641                           ;syntax.c: 201: }
  2642                           ;syntax.c: 202: if (result>0 )
  2643  000436  51F4               	movf	(syntax_string@result+1)& (0+255),w,b
  2644  000438  0A80               	xorlw	128
  2645  00043A  0F80               	addlw	-128
  2646  00043C  0E01               	movlw	1
  2647  00043E  B4D8               	btfsc	status,2,c
  2648  000440  5DF3               	subwf	syntax_string@result& (0+255),w,b
  2649  000442  E30B               	bnc	l5135
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;syntax.c: 203: {
  2653                           ;syntax.c: 204: on_parameter_found(PARSER_STOP, command_id, -1, (void*)(0), PARSER_TYPE_
      +                          NO_TYPE);
  2654  000444  C0B0  F09A         	movff	_command_id,?_on_parameter_found
  2655  000448  0100               	movlb	0	; () banked
  2656  00044A  699B               	setf	(?_on_parameter_found+1)& (0+255),b
  2657  00044C  6B9C               	clrf	(?_on_parameter_found+2)& (0+255),b
  2658  00044E  6B9D               	clrf	(?_on_parameter_found+3)& (0+255),b
  2659  000450  6B9E               	clrf	(?_on_parameter_found+4)& (0+255),b
  2660  000452  6B9F               	clrf	(?_on_parameter_found+5)& (0+255),b
  2661  000454  0E02               	movlw	2
  2662  000456  EF3E  F008         	goto	_on_parameter_found
  2663  00045A                     l5135:
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;syntax.c: 206: else {
  2667                           ;syntax.c: 207: on_parameter_found(PARSER_ERROR,-1, -1, (void*)(0), PARSER_TYPE_NO_TYPE);
  2668  00045A  0100               	movlb	0	; () banked
  2669  00045C  699A               	setf	?_on_parameter_found& (0+255),b
  2670  00045E  699B               	setf	(?_on_parameter_found+1)& (0+255),b
  2671  000460  6B9C               	clrf	(?_on_parameter_found+2)& (0+255),b
  2672  000462  6B9D               	clrf	(?_on_parameter_found+3)& (0+255),b
  2673  000464  6B9E               	clrf	(?_on_parameter_found+4)& (0+255),b
  2674  000466  6B9F               	clrf	(?_on_parameter_found+5)& (0+255),b
  2675  000468  0E03               	movlw	3
  2676  00046A  EF3E  F008         	goto	_on_parameter_found
  2677  00046E                     __end_of_syntax_string:
  2678                           	opt stack 0
  2679                           tosu	equ	0xFFF
  2680                           tosh	equ	0xFFE
  2681                           tosl	equ	0xFFD
  2682                           pclath	equ	0xFFA
  2683                           tblptru	equ	0xFF8
  2684                           prodl	equ	0xFF3
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           indf1	equ	0xFE7
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _string_utils_split *****************
  2699 ;; Defined at:
  2700 ;;		line 94 in file "src/modules/string_utils.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  pbuf            2   38[BANK0 ] PTR unsigned char 
  2703 ;;		 -> this_buf(127), 
  2704 ;;  pstr            2   40[BANK0 ] PTR const unsigned char 
  2705 ;;		 -> serialport_buffer(100), 
  2706 ;;  len             2   42[BANK0 ] int 
  2707 ;;  delimeter       1   44[BANK0 ] unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  symb            1   50[BANK0 ] unsigned char 
  2710 ;;  chains          2   47[BANK0 ] int 
  2711 ;;  i               2   45[BANK0 ] int 
  2712 ;;  prev            1   49[BANK0 ] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2   38[BANK0 ] int 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : F/0
  2719 ;;		On exit  : F/0
  2720 ;;		Unchanged: FFFFFFF0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       7       0       0       0       0       0
  2723 ;;      Locals:         0       6       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0
  2725 ;;      Totals:         0      13       0       0       0       0       0
  2726 ;;Total ram usage:       13 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    5
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_syntax_string
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text8
  2737  000D0C                     __ptext8:
  2738                           	opt stack 0
  2739  000D0C                     _string_utils_split:
  2740                           	opt stack 23
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;string_utils.c: 95: INT16 i = 0;
  2744  000D0C  6B8D               	clrf	string_utils_split@i& (0+255),b
  2745  000D0E  6B8E               	clrf	(string_utils_split@i+1)& (0+255),b
  2746                           
  2747                           ;string_utils.c: 96: INT16 chains = 0;
  2748  000D10  6B8F               	clrf	string_utils_split@chains& (0+255),b
  2749  000D12  6B90               	clrf	(string_utils_split@chains+1)& (0+255),b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;string_utils.c: 97: char prev = ' ';
  2753  000D14  0E20               	movlw	32
  2754  000D16  6F91               	movwf	string_utils_split@prev& (0+255),b
  2755  000D18                     l5201:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;string_utils.c: 99: {
  2759                           ;string_utils.c: 100: char symb = pstr[i];
  2760  000D18  518D               	movf	string_utils_split@i& (0+255),w,b
  2761  000D1A  2588               	addwf	string_utils_split@pstr& (0+255),w,b
  2762  000D1C  6ED9               	movwf	fsr2l,c
  2763  000D1E  518E               	movf	(string_utils_split@i+1)& (0+255),w,b
  2764  000D20  2189               	addwfc	(string_utils_split@pstr+1)& (0+255),w,b
  2765  000D22  6EDA               	movwf	fsr2h,c
  2766  000D24  50DF               	movf	indf2,w,c
  2767  000D26  6F92               	movwf	string_utils_split@symb& (0+255),b
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;string_utils.c: 101: if (symb == ' ' || len == 0)
  2771  000D28  5192               	movf	string_utils_split@symb& (0+255),w,b
  2772  000D2A  0A20               	xorlw	32
  2773  000D2C  E003               	bz	l5207
  2774                           
  2775                           ; BSR set to: 0
  2776  000D2E  518B               	movf	(string_utils_split@len+1)& (0+255),w,b
  2777  000D30  118A               	iorwf	string_utils_split@len& (0+255),w,b
  2778  000D32  E10E               	bnz	l5215
  2779  000D34                     l5207:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;string_utils.c: 102: {
  2783                           ;string_utils.c: 103: if (prev != ' ')
  2784  000D34  5191               	movf	string_utils_split@prev& (0+255),w,b
  2785  000D36  0A20               	xorlw	32
  2786  000D38  E013               	bz	l5219
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;string_utils.c: 104: {
  2790                           ;string_utils.c: 105: *pbuf = delimeter;
  2791  000D3A  C086  FFD9         	movff	string_utils_split@pbuf,fsr2l
  2792  000D3E  C087  FFDA         	movff	string_utils_split@pbuf+1,fsr2h
  2793  000D42  C08C  FFDF         	movff	string_utils_split@delimeter,indf2
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;string_utils.c: 106: pbuf++;
  2797  000D46  4B86               	infsnz	string_utils_split@pbuf& (0+255),f,b
  2798  000D48  2B87               	incf	(string_utils_split@pbuf+1)& (0+255),f,b
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;string_utils.c: 107: chains++;
  2802  000D4A  4B8F               	infsnz	string_utils_split@chains& (0+255),f,b
  2803  000D4C  2B90               	incf	(string_utils_split@chains+1)& (0+255),f,b
  2804  000D4E  D008               	goto	l5219
  2805  000D50                     l5215:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;string_utils.c: 110: else
  2809                           ;string_utils.c: 111: {
  2810                           ;string_utils.c: 112: *pbuf++ = symb;
  2811  000D50  C086  FFD9         	movff	string_utils_split@pbuf,fsr2l
  2812  000D54  C087  FFDA         	movff	string_utils_split@pbuf+1,fsr2h
  2813  000D58  C092  FFDF         	movff	string_utils_split@symb,indf2
  2814                           
  2815                           ; BSR set to: 0
  2816  000D5C  4B86               	infsnz	string_utils_split@pbuf& (0+255),f,b
  2817  000D5E  2B87               	incf	(string_utils_split@pbuf+1)& (0+255),f,b
  2818  000D60                     l5219:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;string_utils.c: 113: }
  2822                           ;string_utils.c: 114: if (len == 0)
  2823  000D60  518B               	movf	(string_utils_split@len+1)& (0+255),w,b
  2824  000D62  118A               	iorwf	string_utils_split@len& (0+255),w,b
  2825  000D64  E008               	bz	l5229
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;string_utils.c: 118: else
  2829                           ;string_utils.c: 119: {
  2830                           ;string_utils.c: 120: len--;
  2831  000D66  078A               	decf	string_utils_split@len& (0+255),f,b
  2832  000D68  A0D8               	btfss	status,0,c
  2833  000D6A  078B               	decf	(string_utils_split@len+1)& (0+255),f,b
  2834                           
  2835                           ;string_utils.c: 121: i++;
  2836  000D6C  4B8D               	infsnz	string_utils_split@i& (0+255),f,b
  2837  000D6E  2B8E               	incf	(string_utils_split@i+1)& (0+255),f,b
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;string_utils.c: 122: prev = symb;
  2841  000D70  C092  F091         	movff	string_utils_split@symb,string_utils_split@prev
  2842  000D74  D7D1               	goto	l5201
  2843  000D76                     l5229:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;string_utils.c: 123: }
  2847                           ;string_utils.c: 124: }
  2848                           ;string_utils.c: 125: *pbuf++ = delimeter;
  2849  000D76  C086  FFD9         	movff	string_utils_split@pbuf,fsr2l
  2850  000D7A  C087  FFDA         	movff	string_utils_split@pbuf+1,fsr2h
  2851  000D7E  C08C  FFDF         	movff	string_utils_split@delimeter,indf2
  2852                           
  2853                           ; BSR set to: 0
  2854  000D82  4B86               	infsnz	string_utils_split@pbuf& (0+255),f,b
  2855  000D84  2B87               	incf	(string_utils_split@pbuf+1)& (0+255),f,b
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;string_utils.c: 126: return chains;
  2859  000D86  C08F  F086         	movff	string_utils_split@chains,?_string_utils_split
  2860  000D8A  C090  F087         	movff	string_utils_split@chains+1,?_string_utils_split+1
  2861                           
  2862                           ; BSR set to: 0
  2863  000D8E  0012               	return	
  2864  000D90                     __end_of_string_utils_split:
  2865                           	opt stack 0
  2866                           tosu	equ	0xFFF
  2867                           tosh	equ	0xFFE
  2868                           tosl	equ	0xFFD
  2869                           pclath	equ	0xFFA
  2870                           tblptru	equ	0xFF8
  2871                           prodl	equ	0xFF3
  2872                           intcon	equ	0xFF2
  2873                           postinc0	equ	0xFEE
  2874                           wreg	equ	0xFE8
  2875                           indf1	equ	0xFE7
  2876                           fsr1h	equ	0xFE2
  2877                           fsr1l	equ	0xFE1
  2878                           indf2	equ	0xFDF
  2879                           postinc2	equ	0xFDE
  2880                           postdec2	equ	0xFDD
  2881                           fsr2h	equ	0xFDA
  2882                           fsr2l	equ	0xFD9
  2883                           status	equ	0xFD8
  2884                           
  2885 ;; *************** function _this_parse_command *****************
  2886 ;; Defined at:
  2887 ;;		line 95 in file "src/modules/syntax.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  pbuf            2   58[BANK0 ] PTR unsigned char 
  2890 ;;		 -> this_buf(127), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  pname           2    2[BANK1 ] PTR const unsigned char 
  2893 ;;		 -> syx_cmd_list(105), 
  2894 ;;  is_equal        1    4[BANK1 ] unsigned char 
  2895 ;;  i               2    6[BANK1 ] int 
  2896 ;;  len             2    0[BANK1 ] int 
  2897 ;;  found           1    5[BANK1 ] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      unsigned char 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : F/1
  2904 ;;		On exit  : F/1
  2905 ;;		Unchanged: FFFFFFF0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2907 ;;      Params:         0       2       0       0       0       0       0
  2908 ;;      Locals:         0       0       8       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0
  2910 ;;      Totals:         0       2       8       0       0       0       0
  2911 ;;Total ram usage:       10 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    7
  2914 ;; This function calls:
  2915 ;;		_string_utils_strchr
  2916 ;;		___wmul
  2917 ;;		_string_utils_strncmp
  2918 ;; This function is called by:
  2919 ;;		_syntax_string
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text9
  2924  000728                     __ptext9:
  2925                           	opt stack 0
  2926  000728                     _this_parse_command:
  2927                           	opt stack 21
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;syntax.c: 96: CHAR found = FALSE;
  2931                           
  2932                           ; BSR set to: 0
  2933  000728  6BDB               	clrf	this_parse_command@found& (0+255),b
  2934                           
  2935                           ;syntax.c: 97: INT16 i = 0;
  2936  00072A  6BDC               	clrf	this_parse_command@i& (0+255),b
  2937  00072C  6BDD               	clrf	(this_parse_command@i+1)& (0+255),b
  2938                           
  2939                           ; BSR set to: 1
  2940                           ;syntax.c: 98: INT16 len = string_utils_strchr(pbuf, ('$'));
  2941  00072E  0100               	movlb	0	; () banked
  2942  000730  519A               	movf	this_parse_command@pbuf& (0+255),w,b
  2943  000732  6F86               	movwf	?_string_utils_strchr& (0+255),b
  2944  000734  519B               	movf	(this_parse_command@pbuf+1)& (0+255),w,b
  2945  000736  6F87               	movwf	(?_string_utils_strchr+1)& (0+255),b
  2946  000738  0E20               	movlw	32
  2947  00073A  6F88               	movwf	(?_string_utils_strchr+2)& (0+255),b
  2948  00073C  0E24               	movlw	36
  2949  00073E  6F89               	movwf	(?_string_utils_strchr+3)& (0+255),b
  2950  000740  EC6A  F004         	call	_string_utils_strchr	;wreg free
  2951  000744  C086  F1D6         	movff	?_string_utils_strchr,this_parse_command@len
  2952  000748  C087  F1D7         	movff	?_string_utils_strchr+1,this_parse_command@len+1
  2953                           
  2954                           ;syntax.c: 99: while(syx_cmd_list[i].name[0] != 0x1D) {
  2955  00074C  D047               	goto	l5365
  2956  00074E                     l5353:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;syntax.c: 100: const char *pname = syx_cmd_list[i].name;
  2960  00074E  C1DC  F086         	movff	this_parse_command@i,?___wmul
  2961  000752  C1DD  F087         	movff	this_parse_command@i+1,?___wmul+1
  2962  000756  6B89               	clrf	(?___wmul+3)& (0+255),b
  2963  000758  0E15               	movlw	21
  2964  00075A  6F88               	movwf	(?___wmul+2)& (0+255),b
  2965  00075C  ECE9  F008         	call	___wmul	;wreg free
  2966  000760  0E76               	movlw	low _syx_cmd_list
  2967  000762  2586               	addwf	?___wmul& (0+255),w,b
  2968  000764  0101               	movlb	1	; () banked
  2969  000766  6FD8               	movwf	this_parse_command@pname& (0+255),b
  2970  000768  0E7F               	movlw	high _syx_cmd_list
  2971  00076A  0100               	movlb	0	; () banked
  2972  00076C  2187               	addwfc	(?___wmul+1)& (0+255),w,b
  2973  00076E  0101               	movlb	1	; () banked
  2974  000770  6FD9               	movwf	(this_parse_command@pname+1)& (0+255),b
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;syntax.c: 101: CHAR is_equal = string_utils_strncmp(pbuf, pname, len, this_case_sensiti
      +                          ve);
  2978  000772  C09A  F08C         	movff	this_parse_command@pbuf,?_string_utils_strncmp
  2979  000776  C09B  F08D         	movff	this_parse_command@pbuf+1,?_string_utils_strncmp+1
  2980  00077A  C1D8  F08E         	movff	this_parse_command@pname,?_string_utils_strncmp+2
  2981  00077E  C1D9  F08F         	movff	this_parse_command@pname+1,?_string_utils_strncmp+3
  2982  000782  C1D6  F090         	movff	this_parse_command@len,?_string_utils_strncmp+4
  2983  000786  C1D7  F091         	movff	this_parse_command@len+1,?_string_utils_strncmp+5
  2984  00078A  C0B7  F092         	movff	_this_case_sensitive,?_string_utils_strncmp+6
  2985  00078E  0100               	movlb	0	; () banked
  2986  000790  EC05  F004         	call	_string_utils_strncmp	;wreg free
  2987  000794  0101               	movlb	1	; () banked
  2988  000796  6FDA               	movwf	this_parse_command@is_equal& (0+255),b
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;syntax.c: 102: if ( is_equal ) {
  2992  000798  51DA               	movf	this_parse_command@is_equal& (0+255),w,b
  2993  00079A  E01E               	bz	l5363
  2994                           
  2995                           ; BSR set to: 1
  2996                           ;syntax.c: 103: command_id = syx_cmd_list[i].id;
  2997  00079C  C1DC  F086         	movff	this_parse_command@i,?___wmul
  2998  0007A0  C1DD  F087         	movff	this_parse_command@i+1,?___wmul+1
  2999  0007A4  0100               	movlb	0	; () banked
  3000  0007A6  6B89               	clrf	(?___wmul+3)& (0+255),b
  3001  0007A8  0E15               	movlw	21
  3002  0007AA  6F88               	movwf	(?___wmul+2)& (0+255),b
  3003  0007AC  ECE9  F008         	call	___wmul	;wreg free
  3004  0007B0  0E14               	movlw	20
  3005  0007B2  2786               	addwf	?___wmul& (0+255),f,b
  3006  0007B4  0E00               	movlw	0
  3007  0007B6  2387               	addwfc	(?___wmul+1)& (0+255),f,b
  3008  0007B8  0E76               	movlw	low _syx_cmd_list
  3009  0007BA  2486               	addwf	?___wmul,w,c
  3010  0007BC  6EF6               	movwf	tblptrl,c
  3011  0007BE  0E7F               	movlw	high _syx_cmd_list
  3012  0007C0  2087               	addwfc	?___wmul+1,w,c
  3013  0007C2  6EF7               	movwf	tblptrh,c
  3014  0007C4  0008               	tblrd		*
  3015  0007C6  50F5               	movf	tablat,w,c
  3016  0007C8  6FB0               	movwf	_command_id& (0+255),b
  3017  0007CA  6BB1               	clrf	(_command_id+1)& (0+255),b
  3018  0007CC  BFB0               	btfsc	_command_id& (0+255),7,b
  3019  0007CE  07B1               	decf	(_command_id+1)& (0+255),f,b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;syntax.c: 104: found = TRUE;
  3023  0007D0  0E01               	movlw	1
  3024  0007D2  0101               	movlb	1	; () banked
  3025  0007D4  6FDB               	movwf	this_parse_command@found& (0+255),b
  3026                           
  3027                           ;syntax.c: 105: break;
  3028  0007D6  D016               	goto	l5367
  3029  0007D8                     l5363:
  3030                           
  3031                           ; BSR set to: 1
  3032                           ;syntax.c: 106: }
  3033                           ;syntax.c: 107: i++;
  3034  0007D8  4BDC               	infsnz	this_parse_command@i& (0+255),f,b
  3035  0007DA  2BDD               	incf	(this_parse_command@i+1)& (0+255),f,b
  3036  0007DC                     l5365:
  3037  0007DC  C1DC  F086         	movff	this_parse_command@i,?___wmul
  3038  0007E0  C1DD  F087         	movff	this_parse_command@i+1,?___wmul+1
  3039  0007E4  0100               	movlb	0	; () banked
  3040  0007E6  6B89               	clrf	(?___wmul+3)& (0+255),b
  3041  0007E8  0E15               	movlw	21
  3042  0007EA  6F88               	movwf	(?___wmul+2)& (0+255),b
  3043  0007EC  ECE9  F008         	call	___wmul	;wreg free
  3044  0007F0  0E76               	movlw	low _syx_cmd_list
  3045  0007F2  2586               	addwf	?___wmul& (0+255),w,b
  3046  0007F4  6EF6               	movwf	tblptrl,c
  3047  0007F6  0E7F               	movlw	high _syx_cmd_list
  3048  0007F8  2187               	addwfc	(?___wmul+1)& (0+255),w,b
  3049  0007FA  6EF7               	movwf	tblptrh,c
  3050  0007FC  0008               	tblrd		*
  3051  0007FE  50F5               	movf	tablat,w,c
  3052  000800  0A1D               	xorlw	29
  3053  000802  E1A5               	bnz	l5353
  3054  000804                     l5367:
  3055                           
  3056                           ;syntax.c: 108: }
  3057                           ;syntax.c: 109: return found;
  3058  000804  0101               	movlb	1	; () banked
  3059  000806  51DB               	movf	this_parse_command@found& (0+255),w,b
  3060                           
  3061                           ; BSR set to: 1
  3062  000808  0012               	return	
  3063  00080A                     __end_of_this_parse_command:
  3064                           	opt stack 0
  3065                           tosu	equ	0xFFF
  3066                           tosh	equ	0xFFE
  3067                           tosl	equ	0xFFD
  3068                           pclath	equ	0xFFA
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           prodl	equ	0xFF3
  3074                           intcon	equ	0xFF2
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           indf1	equ	0xFE7
  3078                           fsr1h	equ	0xFE2
  3079                           fsr1l	equ	0xFE1
  3080                           indf2	equ	0xFDF
  3081                           postinc2	equ	0xFDE
  3082                           postdec2	equ	0xFDD
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _this_parse_parameter *****************
  3088 ;; Defined at:
  3089 ;;		line 121 in file "src/modules/syntax.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  pstr            2    6[BANK1 ] PTR unsigned char 
  3092 ;;		 -> this_buf(127), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  is_equal        1   10[BANK1 ] unsigned char 
  3095 ;;  pval            3   16[BANK1 ] PTR const unsigned char 
  3096 ;;		 -> this_buf(127), ROM(32767), 
  3097 ;;  var_len         2   21[BANK1 ] int 
  3098 ;;  i               2   19[BANK1 ] int 
  3099 ;;  str_len         2   14[BANK1 ] int 
  3100 ;;  pvar            2   12[BANK1 ] PTR const unsigned char 
  3101 ;;		 -> this_buf(127), 
  3102 ;;  result          1   11[BANK1 ] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      unsigned char 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : F/1
  3109 ;;		On exit  : F/1
  3110 ;;		Unchanged: FFFFFFF0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         0       0       2       0       0       0       0
  3113 ;;      Locals:         0       0      13       0       0       0       0
  3114 ;;      Temps:          0       0       2       0       0       0       0
  3115 ;;      Totals:         0       0      17       0       0       0       0
  3116 ;;Total ram usage:       17 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    9
  3119 ;; This function calls:
  3120 ;;		_string_utils_strchr
  3121 ;;		_string_utils_copy
  3122 ;;		___wmul
  3123 ;;		_string_utils_strlen
  3124 ;;		_string_utils_strncmp
  3125 ;;		_this_variable_load_from_text
  3126 ;; This function is called by:
  3127 ;;		_syntax_string
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text10
  3132  0000D8                     __ptext10:
  3133                           	opt stack 0
  3134  0000D8                     _this_parse_parameter:
  3135                           	opt stack 19
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;syntax.c: 122: CHAR result = FALSE;
  3139                           
  3140                           ; BSR set to: 1
  3141  0000D8  6BE1               	clrf	this_parse_parameter@result& (0+255),b
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;syntax.c: 123: if (pstr != (0)) {
  3145  0000DA  51DD               	movf	(this_parse_parameter@pstr+1)& (0+255),w,b
  3146  0000DC  11DC               	iorwf	this_parse_parameter@pstr& (0+255),w,b
  3147  0000DE  E101 D101          	bz	l5407
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;syntax.c: 124: const char *pvar = pstr;
  3151  0000E2  C1DC  F1E2         	movff	this_parse_parameter@pstr,this_parse_parameter@pvar
  3152  0000E6  C1DD  F1E3         	movff	this_parse_parameter@pstr+1,this_parse_parameter@pvar+1
  3153                           
  3154                           ;syntax.c: 125: const char *pval = (0);
  3155  0000EA  6BE6               	clrf	this_parse_parameter@pval& (0+255),b
  3156  0000EC  6BE7               	clrf	(this_parse_parameter@pval+1)& (0+255),b
  3157  0000EE  6BE8               	clrf	(this_parse_parameter@pval+2)& (0+255),b
  3158                           
  3159                           ;syntax.c: 126: INT16 var_len;
  3160                           ;syntax.c: 127: INT16 i = 0;
  3161  0000F0  6BE9               	clrf	this_parse_parameter@i& (0+255),b
  3162  0000F2  6BEA               	clrf	(this_parse_parameter@i+1)& (0+255),b
  3163                           
  3164                           ; BSR set to: 1
  3165                           ;syntax.c: 128: INT16 str_len = string_utils_strchr(pstr, ('$'));
  3166  0000F4  51DC               	movf	this_parse_parameter@pstr& (0+255),w,b
  3167  0000F6  0100               	movlb	0	; () banked
  3168  0000F8  6F86               	movwf	?_string_utils_strchr& (0+255),b
  3169  0000FA  0101               	movlb	1	; () banked
  3170  0000FC  51DD               	movf	(this_parse_parameter@pstr+1)& (0+255),w,b
  3171  0000FE  0100               	movlb	0	; () banked
  3172  000100  6F87               	movwf	(?_string_utils_strchr+1)& (0+255),b
  3173  000102  0E20               	movlw	32
  3174  000104  6F88               	movwf	(?_string_utils_strchr+2)& (0+255),b
  3175  000106  0E24               	movlw	36
  3176  000108  6F89               	movwf	(?_string_utils_strchr+3)& (0+255),b
  3177  00010A  EC6A  F004         	call	_string_utils_strchr	;wreg free
  3178  00010E  C086  F1E4         	movff	?_string_utils_strchr,this_parse_parameter@str_len
  3179  000112  C087  F1E5         	movff	?_string_utils_strchr+1,this_parse_parameter@str_len+1
  3180                           
  3181                           ;syntax.c: 130: var_len = string_utils_strchr(pstr, '=');
  3182  000116  0101               	movlb	1	; () banked
  3183  000118  51DC               	movf	this_parse_parameter@pstr& (0+255),w,b
  3184  00011A  0100               	movlb	0	; () banked
  3185  00011C  6F86               	movwf	?_string_utils_strchr& (0+255),b
  3186  00011E  0101               	movlb	1	; () banked
  3187  000120  51DD               	movf	(this_parse_parameter@pstr+1)& (0+255),w,b
  3188  000122  0100               	movlb	0	; () banked
  3189  000124  6F87               	movwf	(?_string_utils_strchr+1)& (0+255),b
  3190  000126  0E20               	movlw	32
  3191  000128  6F88               	movwf	(?_string_utils_strchr+2)& (0+255),b
  3192  00012A  0E3D               	movlw	61
  3193  00012C  6F89               	movwf	(?_string_utils_strchr+3)& (0+255),b
  3194  00012E  EC6A  F004         	call	_string_utils_strchr	;wreg free
  3195  000132  C086  F1EB         	movff	?_string_utils_strchr,this_parse_parameter@var_len
  3196  000136  C087  F1EC         	movff	?_string_utils_strchr+1,this_parse_parameter@var_len+1
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;syntax.c: 131: if (var_len >= 0 && var_len < str_len) {
  3200  00013A  0101               	movlb	1	; () banked
  3201  00013C  BFEC               	btfsc	(this_parse_parameter@var_len+1)& (0+255),7,b
  3202  00013E  D01B               	goto	l655
  3203                           
  3204                           ; BSR set to: 1
  3205  000140  51EC               	movf	(this_parse_parameter@var_len+1)& (0+255),w,b
  3206  000142  0A80               	xorlw	128
  3207  000144  6FDE               	movwf	??_this_parse_parameter& (0+255),b
  3208  000146  51E4               	movf	this_parse_parameter@str_len& (0+255),w,b
  3209  000148  5DEB               	subwf	this_parse_parameter@var_len& (0+255),w,b
  3210  00014A  51E5               	movf	(this_parse_parameter@str_len+1)& (0+255),w,b
  3211  00014C  0A80               	xorlw	128
  3212  00014E  59DE               	subwfb	??_this_parse_parameter& (0+255),w,b
  3213  000150  E212               	bc	l655
  3214                           
  3215                           ; BSR set to: 1
  3216                           ;syntax.c: 132: pval = &pstr[ var_len + 1 ] ;
  3217  000152  C1DC  F1DE         	movff	this_parse_parameter@pstr,??_this_parse_parameter
  3218  000156  C1DD  F1DF         	movff	this_parse_parameter@pstr+1,??_this_parse_parameter+1
  3219  00015A  51EB               	movf	this_parse_parameter@var_len& (0+255),w,b
  3220  00015C  27DE               	addwf	??_this_parse_parameter& (0+255),f,b
  3221  00015E  51EC               	movf	(this_parse_parameter@var_len+1)& (0+255),w,b
  3222  000160  23DF               	addwfc	(??_this_parse_parameter+1)& (0+255),f,b
  3223  000162  2BDE               	incf	??_this_parse_parameter& (0+255),f,b
  3224  000164  0E00               	movlw	0
  3225  000166  23DF               	addwfc	(??_this_parse_parameter+1)& (0+255),f,b
  3226  000168  51DE               	movf	??_this_parse_parameter& (0+255),w,b
  3227  00016A  6FE6               	movwf	this_parse_parameter@pval& (0+255),b
  3228  00016C  51DF               	movf	(??_this_parse_parameter+1)& (0+255),w,b
  3229  00016E  6FE7               	movwf	(this_parse_parameter@pval+1)& (0+255),b
  3230  000170  0E20               	movlw	32
  3231  000172  6FE8               	movwf	(this_parse_parameter@pval+2)& (0+255),b
  3232                           
  3233                           ;syntax.c: 133: } else {
  3234  000174  D004               	goto	l5385
  3235  000176                     l655:
  3236                           
  3237                           ; BSR set to: 1
  3238                           ;syntax.c: 135: var_len = str_len;
  3239  000176  C1E4  F1EB         	movff	this_parse_parameter@str_len,this_parse_parameter@var_len
  3240  00017A  C1E5  F1EC         	movff	this_parse_parameter@str_len+1,this_parse_parameter@var_len+1
  3241  00017E                     l5385:
  3242                           
  3243                           ; BSR set to: 1
  3244                           ;syntax.c: 136: }
  3245                           ;syntax.c: 138: string_utils_copy(parameter_text, pvar, var_len);
  3246  00017E  0E03               	movlw	high _parameter_text
  3247  000180  0100               	movlb	0	; () banked
  3248  000182  6F87               	movwf	(?_string_utils_copy+1)& (0+255),b
  3249  000184  0E50               	movlw	low _parameter_text
  3250  000186  6F86               	movwf	?_string_utils_copy& (0+255),b
  3251  000188  0101               	movlb	1	; () banked
  3252  00018A  51E2               	movf	this_parse_parameter@pvar& (0+255),w,b
  3253  00018C  0100               	movlb	0	; () banked
  3254  00018E  6F88               	movwf	(?_string_utils_copy+2)& (0+255),b
  3255  000190  0101               	movlb	1	; () banked
  3256  000192  51E3               	movf	(this_parse_parameter@pvar+1)& (0+255),w,b
  3257  000194  0100               	movlb	0	; () banked
  3258  000196  6F89               	movwf	(?_string_utils_copy+3)& (0+255),b
  3259  000198  0E20               	movlw	32
  3260  00019A  6F8A               	movwf	(?_string_utils_copy+4)& (0+255),b
  3261  00019C  C1EB  F08B         	movff	this_parse_parameter@var_len,?_string_utils_copy+5
  3262  0001A0  C1EC  F08C         	movff	this_parse_parameter@var_len+1,?_string_utils_copy+6
  3263  0001A4  EC42  F006         	call	_string_utils_copy	;wreg free
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;syntax.c: 139: parameter_text[var_len] = '\0';
  3267  0001A8  0E50               	movlw	low _parameter_text
  3268  0001AA  0101               	movlb	1	; () banked
  3269  0001AC  25EB               	addwf	this_parse_parameter@var_len& (0+255),w,b
  3270  0001AE  6ED9               	movwf	fsr2l,c
  3271  0001B0  0E03               	movlw	high _parameter_text
  3272  0001B2  21EC               	addwfc	(this_parse_parameter@var_len+1)& (0+255),w,b
  3273  0001B4  6EDA               	movwf	fsr2h,c
  3274  0001B6  6ADF               	clrf	indf2,c
  3275                           
  3276                           ;syntax.c: 140: while( syx_param_list[i].name[0] != 0x1D ) {
  3277  0001B8  D080               	goto	l5405
  3278  0001BA                     l5389:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;syntax.c: 141: if (string_utils_strlen( syx_param_list[i].name ) == var_len){
  3282  0001BA  C1E9  F086         	movff	this_parse_parameter@i,?___wmul
  3283  0001BE  C1EA  F087         	movff	this_parse_parameter@i+1,?___wmul+1
  3284  0001C2  6B89               	clrf	(?___wmul+3)& (0+255),b
  3285  0001C4  0E16               	movlw	22
  3286  0001C6  6F88               	movwf	(?___wmul+2)& (0+255),b
  3287  0001C8  ECE9  F008         	call	___wmul	;wreg free
  3288  0001CC  0E66               	movlw	low _syx_param_list
  3289  0001CE  2586               	addwf	?___wmul& (0+255),w,b
  3290  0001D0  6F8C               	movwf	?_string_utils_strlen& (0+255),b
  3291  0001D2  0E7D               	movlw	high _syx_param_list
  3292  0001D4  2187               	addwfc	(?___wmul+1)& (0+255),w,b
  3293  0001D6  6F8D               	movwf	(?_string_utils_strlen+1)& (0+255),b
  3294  0001D8  EC9E  F007         	call	_string_utils_strlen	;wreg free
  3295  0001DC  0101               	movlb	1	; () banked
  3296  0001DE  51EC               	movf	(this_parse_parameter@var_len+1)& (0+255),w,b
  3297  0001E0  0100               	movlb	0	; () banked
  3298  0001E2  198D               	xorwf	(?_string_utils_strlen+1)& (0+255),w,b
  3299  0001E4  E104               	bnz	u5705
  3300  0001E6  0101               	movlb	1	; () banked
  3301  0001E8  51EB               	movf	this_parse_parameter@var_len& (0+255),w,b
  3302  0001EA  0100               	movlb	0	; () banked
  3303  0001EC  198C               	xorwf	?_string_utils_strlen& (0+255),w,b
  3304  0001EE                     u5705:
  3305  0001EE  E162               	bnz	l5403
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;syntax.c: 142: CHAR is_equal = string_utils_strncmp(syx_param_list[i].name, pvar, var_l
      +                          en, this_case_sensitive);
  3309  0001F0  C1E9  F086         	movff	this_parse_parameter@i,?___wmul
  3310  0001F4  C1EA  F087         	movff	this_parse_parameter@i+1,?___wmul+1
  3311  0001F8  6B89               	clrf	(?___wmul+3)& (0+255),b
  3312  0001FA  0E16               	movlw	22
  3313  0001FC  6F88               	movwf	(?___wmul+2)& (0+255),b
  3314  0001FE  ECE9  F008         	call	___wmul	;wreg free
  3315  000202  0E66               	movlw	low _syx_param_list
  3316  000204  2586               	addwf	?___wmul& (0+255),w,b
  3317  000206  6F8C               	movwf	?_string_utils_strncmp& (0+255),b
  3318  000208  0E7D               	movlw	high _syx_param_list
  3319  00020A  2187               	addwfc	(?___wmul+1)& (0+255),w,b
  3320  00020C  6F8D               	movwf	(?_string_utils_strncmp+1)& (0+255),b
  3321  00020E  C1E2  F08E         	movff	this_parse_parameter@pvar,?_string_utils_strncmp+2
  3322  000212  C1E3  F08F         	movff	this_parse_parameter@pvar+1,?_string_utils_strncmp+3
  3323  000216  C1EB  F090         	movff	this_parse_parameter@var_len,?_string_utils_strncmp+4
  3324  00021A  C1EC  F091         	movff	this_parse_parameter@var_len+1,?_string_utils_strncmp+5
  3325  00021E  C0B7  F092         	movff	_this_case_sensitive,?_string_utils_strncmp+6
  3326  000222  EC05  F004         	call	_string_utils_strncmp	;wreg free
  3327  000226  0101               	movlb	1	; () banked
  3328  000228  6FE0               	movwf	this_parse_parameter@is_equal& (0+255),b
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;syntax.c: 143: if ( is_equal ) {
  3332  00022A  51E0               	movf	this_parse_parameter@is_equal& (0+255),w,b
  3333  00022C  E043               	bz	l5403
  3334                           
  3335                           ; BSR set to: 1
  3336                           ;syntax.c: 144: parameter_id = syx_param_list[i].id;
  3337  00022E  C1E9  F086         	movff	this_parse_parameter@i,?___wmul
  3338  000232  C1EA  F087         	movff	this_parse_parameter@i+1,?___wmul+1
  3339  000236  0100               	movlb	0	; () banked
  3340  000238  6B89               	clrf	(?___wmul+3)& (0+255),b
  3341  00023A  0E16               	movlw	22
  3342  00023C  6F88               	movwf	(?___wmul+2)& (0+255),b
  3343  00023E  ECE9  F008         	call	___wmul	;wreg free
  3344  000242  0E14               	movlw	20
  3345  000244  2786               	addwf	?___wmul& (0+255),f,b
  3346  000246  0E00               	movlw	0
  3347  000248  2387               	addwfc	(?___wmul+1)& (0+255),f,b
  3348  00024A  0E66               	movlw	low _syx_param_list
  3349  00024C  2486               	addwf	?___wmul,w,c
  3350  00024E  6EF6               	movwf	tblptrl,c
  3351  000250  0E7D               	movlw	high _syx_param_list
  3352  000252  2087               	addwfc	?___wmul+1,w,c
  3353  000254  6EF7               	movwf	tblptrh,c
  3354  000256  0008               	tblrd		*
  3355  000258  50F5               	movf	tablat,w,c
  3356  00025A  6FB2               	movwf	_parameter_id& (0+255),b
  3357  00025C  6BB3               	clrf	(_parameter_id+1)& (0+255),b
  3358  00025E  BFB2               	btfsc	_parameter_id& (0+255),7,b
  3359  000260  07B3               	decf	(_parameter_id+1)& (0+255),f,b
  3360                           
  3361                           ;syntax.c: 145: parameter_type = syx_param_list[i].type;
  3362  000262  C1E9  F086         	movff	this_parse_parameter@i,?___wmul
  3363  000266  C1EA  F087         	movff	this_parse_parameter@i+1,?___wmul+1
  3364  00026A  6B89               	clrf	(?___wmul+3)& (0+255),b
  3365  00026C  0E16               	movlw	22
  3366  00026E  6F88               	movwf	(?___wmul+2)& (0+255),b
  3367  000270  ECE9  F008         	call	___wmul	;wreg free
  3368  000274  0E15               	movlw	21
  3369  000276  2786               	addwf	?___wmul& (0+255),f,b
  3370  000278  0E00               	movlw	0
  3371  00027A  2387               	addwfc	(?___wmul+1)& (0+255),f,b
  3372  00027C  0E66               	movlw	low _syx_param_list
  3373  00027E  2486               	addwf	?___wmul,w,c
  3374  000280  6EF6               	movwf	tblptrl,c
  3375  000282  0E7D               	movlw	high _syx_param_list
  3376  000284  2087               	addwfc	?___wmul+1,w,c
  3377  000286  6EF7               	movwf	tblptrh,c
  3378  000288  0008               	tblrd		*
  3379  00028A  CFF5 F0B5          	movff	tablat,_parameter_type
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;syntax.c: 146: if (pval)
  3383  00028E  0101               	movlb	1	; () banked
  3384  000290  51E6               	movf	this_parse_parameter@pval& (0+255),w,b
  3385  000292  11E7               	iorwf	(this_parse_parameter@pval+1)& (0+255),w,b
  3386  000294  11E8               	iorwf	(this_parse_parameter@pval+2)& (0+255),w,b
  3387  000296  E00A               	bz	l5401
  3388                           
  3389                           ; BSR set to: 1
  3390                           ;syntax.c: 147: this_variable_load_from_text(pval, parameter_type);
  3391  000298  C1E6  F1D6         	movff	this_parse_parameter@pval,?_this_variable_load_from_text
  3392  00029C  C1E7  F1D7         	movff	this_parse_parameter@pval+1,?_this_variable_load_from_text+1
  3393  0002A0  C1E8  F1D8         	movff	this_parse_parameter@pval+2,?_this_variable_load_from_text+2
  3394  0002A4  C0B5  F1D9         	movff	_parameter_type,?_this_variable_load_from_text+3
  3395  0002A8  EC63  F005         	call	_this_variable_load_from_text	;wreg free
  3396  0002AC                     l5401:
  3397                           
  3398                           ;syntax.c: 148: result = TRUE;
  3399  0002AC  0E01               	movlw	1
  3400  0002AE  0101               	movlb	1	; () banked
  3401  0002B0  6FE1               	movwf	this_parse_parameter@result& (0+255),b
  3402                           
  3403                           ;syntax.c: 149: break;
  3404  0002B2  D018               	goto	l5407
  3405  0002B4                     l5403:
  3406                           
  3407                           ;syntax.c: 150: }
  3408                           ;syntax.c: 151: }
  3409                           ;syntax.c: 152: i++;
  3410  0002B4  0101               	movlb	1	; () banked
  3411  0002B6  4BE9               	infsnz	this_parse_parameter@i& (0+255),f,b
  3412  0002B8  2BEA               	incf	(this_parse_parameter@i+1)& (0+255),f,b
  3413  0002BA                     l5405:
  3414                           
  3415                           ; BSR set to: 1
  3416  0002BA  C1E9  F086         	movff	this_parse_parameter@i,?___wmul
  3417  0002BE  C1EA  F087         	movff	this_parse_parameter@i+1,?___wmul+1
  3418  0002C2  0100               	movlb	0	; () banked
  3419  0002C4  6B89               	clrf	(?___wmul+3)& (0+255),b
  3420  0002C6  0E16               	movlw	22
  3421  0002C8  6F88               	movwf	(?___wmul+2)& (0+255),b
  3422  0002CA  ECE9  F008         	call	___wmul	;wreg free
  3423  0002CE  0E66               	movlw	low _syx_param_list
  3424  0002D0  2586               	addwf	?___wmul& (0+255),w,b
  3425  0002D2  6EF6               	movwf	tblptrl,c
  3426  0002D4  0E7D               	movlw	high _syx_param_list
  3427  0002D6  2187               	addwfc	(?___wmul+1)& (0+255),w,b
  3428  0002D8  6EF7               	movwf	tblptrh,c
  3429  0002DA  0008               	tblrd		*
  3430  0002DC  50F5               	movf	tablat,w,c
  3431  0002DE  0A1D               	xorlw	29
  3432  0002E0  E001 D76B          	bnz	l5389
  3433  0002E4                     l5407:
  3434                           
  3435                           ;syntax.c: 153: }
  3436                           ;syntax.c: 154: }
  3437                           ;syntax.c: 155: return result;
  3438  0002E4  0101               	movlb	1	; () banked
  3439  0002E6  51E1               	movf	this_parse_parameter@result& (0+255),w,b
  3440                           
  3441                           ; BSR set to: 1
  3442  0002E8  0012               	return	
  3443  0002EA                     __end_of_this_parse_parameter:
  3444                           	opt stack 0
  3445                           tosu	equ	0xFFF
  3446                           tosh	equ	0xFFE
  3447                           tosl	equ	0xFFD
  3448                           pclath	equ	0xFFA
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           postinc2	equ	0xFDE
  3462                           postdec2	equ	0xFDD
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _string_utils_strncmp *****************
  3468 ;; Defined at:
  3469 ;;		line 292 in file "src/modules/string_utils.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  pstr1           2   44[BANK0 ] PTR const unsigned char 
  3472 ;;		 -> this_buf(127), syx_param_list(528), 
  3473 ;;  pstr2           2   46[BANK0 ] PTR const unsigned char 
  3474 ;;		 -> this_buf(127), syx_cmd_list(105), 
  3475 ;;  len             2   48[BANK0 ] int 
  3476 ;;  case_sensiti    1   50[BANK0 ] unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  symb2           1   57[BANK0 ] unsigned char 
  3479 ;;  symb1           1   56[BANK0 ] unsigned char 
  3480 ;;  pos             2   54[BANK0 ] int 
  3481 ;;  result          1   53[BANK0 ] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      unsigned char 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : E/1
  3488 ;;		On exit  : F/0
  3489 ;;		Unchanged: FFFFFFF0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3491 ;;      Params:         0       7       0       0       0       0       0
  3492 ;;      Locals:         0       5       0       0       0       0       0
  3493 ;;      Temps:          0       2       0       0       0       0       0
  3494 ;;      Totals:         0      14       0       0       0       0       0
  3495 ;;Total ram usage:       14 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    6
  3498 ;; This function calls:
  3499 ;;		_string_utils_is_upper_case
  3500 ;; This function is called by:
  3501 ;;		_this_parse_command
  3502 ;;		_this_parse_parameter
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text11
  3507  00080A                     __ptext11:
  3508                           	opt stack 0
  3509  00080A                     _string_utils_strncmp:
  3510                           	opt stack 21
  3511                           
  3512                           ;string_utils.c: 293: CHAR result = FALSE;
  3513                           
  3514                           ; BSR set to: 1
  3515  00080A  0100               	movlb	0	; () banked
  3516  00080C  6B95               	clrf	string_utils_strncmp@result& (0+255),b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;string_utils.c: 294: if (pstr1 != (0) && pstr2 != (0) )
  3520  00080E  518D               	movf	(string_utils_strncmp@pstr1+1)& (0+255),w,b
  3521  000810  118C               	iorwf	string_utils_strncmp@pstr1& (0+255),w,b
  3522  000812  E05E               	bz	l5295
  3523                           
  3524                           ; BSR set to: 0
  3525  000814  518F               	movf	(string_utils_strncmp@pstr2+1)& (0+255),w,b
  3526  000816  118E               	iorwf	string_utils_strncmp@pstr2& (0+255),w,b
  3527  000818  E05B               	bz	l5295
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;string_utils.c: 295: {
  3531                           ;string_utils.c: 296: INT16 pos = 0;
  3532  00081A  6B96               	clrf	string_utils_strncmp@pos& (0+255),b
  3533  00081C  6B97               	clrf	(string_utils_strncmp@pos+1)& (0+255),b
  3534                           
  3535                           ;string_utils.c: 297: while ( len-- )
  3536  00081E  D050               	goto	l5293
  3537  000820                     l5271:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;string_utils.c: 298: {
  3541                           ;string_utils.c: 299: char symb1 = pstr1[pos];
  3542  000820  C08C  F093         	movff	string_utils_strncmp@pstr1,??_string_utils_strncmp
  3543  000824  C08D  F094         	movff	string_utils_strncmp@pstr1+1,??_string_utils_strncmp+1
  3544  000828  5196               	movf	string_utils_strncmp@pos& (0+255),w,b
  3545  00082A  2793               	addwf	??_string_utils_strncmp& (0+255),f,b
  3546  00082C  5197               	movf	(string_utils_strncmp@pos+1)& (0+255),w,b
  3547  00082E  2394               	addwfc	(??_string_utils_strncmp+1)& (0+255),f,b
  3548  000830  5193               	movf	??_string_utils_strncmp& (0+255),w,b
  3549  000832  6EF6               	movwf	tblptrl,c
  3550  000834  6EE9               	movwf	fsr0l,c
  3551  000836  0E05               	movlw	(high __ramtop+-1)
  3552  000838  6EEA               	movwf	fsr0h,c
  3553  00083A  5194               	movf	(??_string_utils_strncmp+1)& (0+255),w,b
  3554  00083C  64EA               	cpfsgt	fsr0h,c
  3555  00083E  D003               	bra	u5547
  3556  000840  6EEA               	movwf	fsr0h,c
  3557  000842  50EF               	movf	indf0,w,c
  3558  000844  D003               	bra	u5540
  3559  000846                     u5547:
  3560  000846  6EF7               	movwf	tblptrh,c
  3561  000848  0008               	tblrd		*
  3562  00084A  50F5               	movf	tablat,w,c
  3563  00084C                     u5540:
  3564  00084C  0100               	movlb	0	; () banked
  3565  00084E  6F98               	movwf	string_utils_strncmp@symb1& (0+255),b
  3566                           
  3567                           ;string_utils.c: 300: char symb2 = pstr2[pos];
  3568  000850  C08E  F093         	movff	string_utils_strncmp@pstr2,??_string_utils_strncmp
  3569  000854  C08F  F094         	movff	string_utils_strncmp@pstr2+1,??_string_utils_strncmp+1
  3570  000858  5196               	movf	string_utils_strncmp@pos& (0+255),w,b
  3571  00085A  2793               	addwf	??_string_utils_strncmp& (0+255),f,b
  3572  00085C  5197               	movf	(string_utils_strncmp@pos+1)& (0+255),w,b
  3573  00085E  2394               	addwfc	(??_string_utils_strncmp+1)& (0+255),f,b
  3574  000860  5193               	movf	??_string_utils_strncmp& (0+255),w,b
  3575  000862  6EF6               	movwf	tblptrl,c
  3576  000864  6EE9               	movwf	fsr0l,c
  3577  000866  0E05               	movlw	(high __ramtop+-1)
  3578  000868  6EEA               	movwf	fsr0h,c
  3579  00086A  5194               	movf	(??_string_utils_strncmp+1)& (0+255),w,b
  3580  00086C  64EA               	cpfsgt	fsr0h,c
  3581  00086E  D003               	bra	u5557
  3582  000870  6EEA               	movwf	fsr0h,c
  3583  000872  50EF               	movf	indf0,w,c
  3584  000874  D003               	bra	u5550
  3585  000876                     u5557:
  3586  000876  6EF7               	movwf	tblptrh,c
  3587  000878  0008               	tblrd		*
  3588  00087A  50F5               	movf	tablat,w,c
  3589  00087C                     u5550:
  3590  00087C  0100               	movlb	0	; () banked
  3591  00087E  6F99               	movwf	string_utils_strncmp@symb2& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;string_utils.c: 302: if ( !case_sensitive )
  3595  000880  6792               	tstfsz	string_utils_strncmp@case_sensitive& (0+255),b
  3596  000882  D00E               	goto	l5283
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;string_utils.c: 303: {
  3600                           ;string_utils.c: 304: if ( string_utils_is_upper_case(symb1) )
  3601  000884  5198               	movf	string_utils_strncmp@symb1& (0+255),w,b
  3602  000886  EC3D  F009         	call	_string_utils_is_upper_case
  3603  00088A  0900               	iorlw	0
  3604  00088C  E002               	bz	l5279
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;string_utils.c: 305: {
  3608                           ;string_utils.c: 306: symb1 = (symb1+('a' - 'A'));
  3609  00088E  0E20               	movlw	32
  3610  000890  2798               	addwf	string_utils_strncmp@symb1& (0+255),f,b
  3611  000892                     l5279:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;string_utils.c: 307: }
  3615                           ;string_utils.c: 308: if ( string_utils_is_upper_case(symb2) )
  3616  000892  5199               	movf	string_utils_strncmp@symb2& (0+255),w,b
  3617  000894  EC3D  F009         	call	_string_utils_is_upper_case
  3618  000898  0900               	iorlw	0
  3619  00089A  E002               	bz	l5283
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;string_utils.c: 309: {
  3623                           ;string_utils.c: 310: symb2 = (symb2+('a' - 'A'));
  3624  00089C  0E20               	movlw	32
  3625  00089E  2799               	addwf	string_utils_strncmp@symb2& (0+255),f,b
  3626  0008A0                     l5283:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;string_utils.c: 311: }
  3630                           ;string_utils.c: 312: }
  3631                           ;string_utils.c: 313: if (symb1 == symb2 || symb1 == '?' || symb2 == '?')
  3632  0008A0  5198               	movf	string_utils_strncmp@symb1& (0+255),w,b
  3633  0008A2  1999               	xorwf	string_utils_strncmp@symb2& (0+255),w,b
  3634  0008A4  E006               	bz	l5289
  3635                           
  3636                           ; BSR set to: 0
  3637  0008A6  5198               	movf	string_utils_strncmp@symb1& (0+255),w,b
  3638  0008A8  0A3F               	xorlw	63
  3639  0008AA  E003               	bz	l5289
  3640                           
  3641                           ; BSR set to: 0
  3642  0008AC  5199               	movf	string_utils_strncmp@symb2& (0+255),w,b
  3643  0008AE  0A3F               	xorlw	63
  3644  0008B0  E103               	bnz	l536
  3645  0008B2                     l5289:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;string_utils.c: 314: {
  3649                           ;string_utils.c: 315: result = TRUE;
  3650  0008B2  0E01               	movlw	1
  3651  0008B4  6F95               	movwf	string_utils_strncmp@result& (0+255),b
  3652                           
  3653                           ;string_utils.c: 316: }
  3654  0008B6  D002               	goto	l5291
  3655  0008B8                     l536:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;string_utils.c: 317: else
  3659                           ;string_utils.c: 318: {
  3660                           ;string_utils.c: 319: result = FALSE;
  3661  0008B8  6B95               	clrf	string_utils_strncmp@result& (0+255),b
  3662                           
  3663                           ;string_utils.c: 320: break;
  3664  0008BA  D00A               	goto	l5295
  3665  0008BC                     l5291:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;string_utils.c: 321: }
  3669                           ;string_utils.c: 322: pos++;
  3670  0008BC  4B96               	infsnz	string_utils_strncmp@pos& (0+255),f,b
  3671  0008BE  2B97               	incf	(string_utils_strncmp@pos+1)& (0+255),f,b
  3672  0008C0                     l5293:
  3673                           
  3674                           ; BSR set to: 0
  3675  0008C0  0790               	decf	string_utils_strncmp@len& (0+255),f,b
  3676  0008C2  A0D8               	btfss	status,0,c
  3677  0008C4  0791               	decf	(string_utils_strncmp@len+1)& (0+255),f,b
  3678  0008C6  0100               	movlb	0	; () banked
  3679  0008C8  2990               	incf	string_utils_strncmp@len& (0+255),w,b
  3680  0008CA  B4D8               	btfsc	status,2,c
  3681  0008CC  2991               	incf	(string_utils_strncmp@len+1)& (0+255),w,b
  3682  0008CE  E1A8               	bnz	l5271
  3683  0008D0                     l5295:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;string_utils.c: 323: }
  3687                           ;string_utils.c: 324: }
  3688                           ;string_utils.c: 325: return result;
  3689  0008D0  5195               	movf	string_utils_strncmp@result& (0+255),w,b
  3690                           
  3691                           ; BSR set to: 0
  3692  0008D2  0012               	return	
  3693  0008D4                     __end_of_string_utils_strncmp:
  3694                           	opt stack 0
  3695                           tosu	equ	0xFFF
  3696                           tosh	equ	0xFFE
  3697                           tosl	equ	0xFFD
  3698                           pclath	equ	0xFFA
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           indf0	equ	0xFEF
  3706                           postinc0	equ	0xFEE
  3707                           fsr0h	equ	0xFEA
  3708                           fsr0l	equ	0xFE9
  3709                           wreg	equ	0xFE8
  3710                           indf1	equ	0xFE7
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _string_utils_is_upper_case *****************
  3721 ;; Defined at:
  3722 ;;		line 167 in file "src/modules/string_utils.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  symb            1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  symb            1   39[BANK0 ] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      unsigned char 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2
  3731 ;; Tracked objects:
  3732 ;;		On entry : F/0
  3733 ;;		On exit  : F/0
  3734 ;;		Unchanged: FFFFFFF0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3736 ;;      Params:         0       0       0       0       0       0       0
  3737 ;;      Locals:         0       2       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0
  3739 ;;      Totals:         0       2       0       0       0       0       0
  3740 ;;Total ram usage:        2 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    5
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_string_utils_strncmp
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text12
  3751  00127A                     __ptext12:
  3752                           	opt stack 0
  3753  00127A                     _string_utils_is_upper_case:
  3754                           	opt stack 21
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;string_utils_is_upper_case@symb stored from wreg
  3758  00127A  CFE8 F087          	movff	wreg,string_utils_is_upper_case@symb
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;string_utils.c: 168: return (symb >= 'A') && (symb <= 'Z');
  3762  00127E  6B86               	clrf	_string_utils_is_upper_case$730& (0+255),b
  3763                           
  3764                           ; BSR set to: 0
  3765  001280  0E40               	movlw	64
  3766  001282  6587               	cpfsgt	string_utils_is_upper_case@symb& (0+255),b
  3767  001284  D005               	goto	l488
  3768                           
  3769                           ; BSR set to: 0
  3770  001286  0E5B               	movlw	91
  3771  001288  6187               	cpfslt	string_utils_is_upper_case@symb& (0+255),b
  3772  00128A  D002               	goto	l488
  3773                           
  3774                           ; BSR set to: 0
  3775  00128C  0E01               	movlw	1
  3776  00128E  6F86               	movwf	_string_utils_is_upper_case$730& (0+255),b
  3777  001290                     l488:
  3778                           
  3779                           ; BSR set to: 0
  3780  001290  5186               	movf	_string_utils_is_upper_case$730& (0+255),w,b
  3781                           
  3782                           ; BSR set to: 0
  3783  001292  0012               	return	
  3784  001294                     __end_of_string_utils_is_upper_case:
  3785                           	opt stack 0
  3786                           tosu	equ	0xFFF
  3787                           tosh	equ	0xFFE
  3788                           tosl	equ	0xFFD
  3789                           pclath	equ	0xFFA
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           indf0	equ	0xFEF
  3797                           postinc0	equ	0xFEE
  3798                           fsr0h	equ	0xFEA
  3799                           fsr0l	equ	0xFE9
  3800                           wreg	equ	0xFE8
  3801                           indf1	equ	0xFE7
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           postinc2	equ	0xFDE
  3806                           postdec2	equ	0xFDD
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _this_variable_load_from_text *****************
  3812 ;; Defined at:
  3813 ;;		line 43 in file "src/modules/syntax.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  pval            3    0[BANK1 ] PTR const unsigned char 
  3816 ;;		 -> this_buf(127), ROM(32767), 
  3817 ;;  var_type        1    3[BANK1 ] enum E4387
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  len             2    4[BANK1 ] int 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : F/1
  3826 ;;		On exit  : C/0
  3827 ;;		Unchanged: FFFFFFF0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         0       0       4       0       0       0       0
  3830 ;;      Locals:         0       0       2       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0
  3832 ;;      Totals:         0       0       6       0       0       0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    8
  3836 ;; This function calls:
  3837 ;;		_string_utils_strchr
  3838 ;;		_string_utils_copy
  3839 ;;		_string_utils_from_hex
  3840 ;; This function is called by:
  3841 ;;		_this_parse_parameter
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text13
  3846  000AC6                     __ptext13:
  3847                           	opt stack 0
  3848  000AC6                     _this_variable_load_from_text:
  3849                           	opt stack 19
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;syntax.c: 44: if (pval != (0) ) {
  3853                           
  3854                           ; BSR set to: 0
  3855  000AC6  51D6               	movf	this_variable_load_from_text@pval& (0+255),w,b
  3856  000AC8  11D7               	iorwf	(this_variable_load_from_text@pval+1)& (0+255),w,b
  3857  000ACA  11D8               	iorwf	(this_variable_load_from_text@pval+2)& (0+255),w,b
  3858  000ACC  B4D8               	btfsc	status,2,c
  3859  000ACE  0012               	return	
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;syntax.c: 45: INT16 len = string_utils_strchr(pval, ('$'));
  3863  000AD0  C1D6  F086         	movff	this_variable_load_from_text@pval,?_string_utils_strchr
  3864  000AD4  C1D7  F087         	movff	this_variable_load_from_text@pval+1,?_string_utils_strchr+1
  3865  000AD8  C1D8  F088         	movff	this_variable_load_from_text@pval+2,?_string_utils_strchr+2
  3866  000ADC  0E24               	movlw	36
  3867  000ADE  0100               	movlb	0	; () banked
  3868  000AE0  6F89               	movwf	(?_string_utils_strchr+3)& (0+255),b
  3869  000AE2  EC6A  F004         	call	_string_utils_strchr	;wreg free
  3870  000AE6  C086  F1DA         	movff	?_string_utils_strchr,this_variable_load_from_text@len
  3871  000AEA  C087  F1DB         	movff	?_string_utils_strchr+1,this_variable_load_from_text@len+1
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;syntax.c: 46: string_utils_copy(parameter_value , pval, len);
  3875  000AEE  0E02               	movlw	high _parameter_value
  3876  000AF0  0100               	movlb	0	; () banked
  3877  000AF2  6F87               	movwf	(?_string_utils_copy+1)& (0+255),b
  3878  000AF4  0E00               	movlw	low _parameter_value
  3879  000AF6  6F86               	movwf	?_string_utils_copy& (0+255),b
  3880  000AF8  C1D6  F088         	movff	this_variable_load_from_text@pval,?_string_utils_copy+2
  3881  000AFC  C1D7  F089         	movff	this_variable_load_from_text@pval+1,?_string_utils_copy+3
  3882  000B00  C1D8  F08A         	movff	this_variable_load_from_text@pval+2,?_string_utils_copy+4
  3883  000B04  C1DA  F08B         	movff	this_variable_load_from_text@len,?_string_utils_copy+5
  3884  000B08  C1DB  F08C         	movff	this_variable_load_from_text@len+1,?_string_utils_copy+6
  3885  000B0C  EC42  F006         	call	_string_utils_copy	;wreg free
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;syntax.c: 47: parameter_value[len] = '\0';
  3889  000B10  0E00               	movlw	low _parameter_value
  3890  000B12  0101               	movlb	1	; () banked
  3891  000B14  25DA               	addwf	this_variable_load_from_text@len& (0+255),w,b
  3892  000B16  6ED9               	movwf	fsr2l,c
  3893  000B18  0E02               	movlw	high _parameter_value
  3894  000B1A  21DB               	addwfc	(this_variable_load_from_text@len+1)& (0+255),w,b
  3895  000B1C  6EDA               	movwf	fsr2h,c
  3896  000B1E  6ADF               	clrf	indf2,c
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;syntax.c: 50: parameter_type = var_type;
  3900  000B20  C1D9  F0B5         	movff	this_variable_load_from_text@var_type,_parameter_type
  3901                           
  3902                           ;syntax.c: 51: switch (parameter_type) {
  3903  000B24  D00F               	goto	l5347
  3904  000B26                     l5343:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;syntax.c: 74: {
  3908                           ;syntax.c: 75: string_utils_from_hex(parameter_value, parameter_value );
  3909  000B26  0E02               	movlw	high _parameter_value
  3910  000B28  0100               	movlb	0	; () banked
  3911  000B2A  6F93               	movwf	(?_string_utils_from_hex+1)& (0+255),b
  3912  000B2C  0E00               	movlw	low _parameter_value
  3913  000B2E  6F92               	movwf	?_string_utils_from_hex& (0+255),b
  3914  000B30  0E02               	movlw	high _parameter_value
  3915  000B32  6F95               	movwf	(?_string_utils_from_hex+3)& (0+255),b
  3916  000B34  0E00               	movlw	low _parameter_value
  3917  000B36  6F94               	movwf	(?_string_utils_from_hex+2)& (0+255),b
  3918  000B38  EFB0  F005         	goto	_string_utils_from_hex	;wreg free
  3919  000B3C                     l643:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;syntax.c: 80: *((INT16*)parameter_value) = 0u;
  3923  000B3C  0102               	movlb	2	; () banked
  3924  000B3E  6B00               	clrf	_parameter_value& (0+255),b
  3925  000B40  6B01               	clrf	(_parameter_value+1)& (0+255),b
  3926                           
  3927                           ;syntax.c: 81: break;
  3928  000B42  0012               	return	
  3929  000B44                     l5347:
  3930                           
  3931                           ; BSR set to: 1
  3932  000B44  0100               	movlb	0	; () banked
  3933  000B46  51B5               	movf	_parameter_type& (0+255),w,b
  3934                           
  3935                           ; Switch size 1, requested type "speed"
  3936                           ; Number of cases is 4, Range of values is 1 to 5
  3937                           ; switch strategies available:
  3938                           ; Name         Instructions Cycles
  3939                           ; simple_byte           13     7 (average)
  3940                           ;	Chosen strategy is simple_byte
  3941  000B48  0A01               	xorlw	1	; case 1
  3942  000B4A  B4D8               	btfsc	status,2,c
  3943  000B4C  0012               	return	
  3944  000B4E  0A03               	xorlw	3	; case 2
  3945  000B50  E0EA               	bz	l5343
  3946  000B52  0A01               	xorlw	1	; case 3
  3947  000B54  B4D8               	btfsc	status,2,c
  3948  000B56  0012               	return	
  3949  000B58  0A06               	xorlw	6	; case 5
  3950  000B5A  B4D8               	btfsc	status,2,c
  3951                           
  3952                           ; BSR set to: 0
  3953  000B5C  0012               	return	
  3954  000B5E  D7EE               	goto	l643
  3955  000B60                     __end_of_this_variable_load_from_text:
  3956                           	opt stack 0
  3957                           tosu	equ	0xFFF
  3958                           tosh	equ	0xFFE
  3959                           tosl	equ	0xFFD
  3960                           pclath	equ	0xFFA
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           prodl	equ	0xFF3
  3966                           intcon	equ	0xFF2
  3967                           indf0	equ	0xFEF
  3968                           postinc0	equ	0xFEE
  3969                           fsr0h	equ	0xFEA
  3970                           fsr0l	equ	0xFE9
  3971                           wreg	equ	0xFE8
  3972                           indf1	equ	0xFE7
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           postdec2	equ	0xFDD
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _string_utils_copy *****************
  3983 ;; Defined at:
  3984 ;;		line 67 in file "src/modules/string_utils.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  pdst            2   38[BANK0 ] PTR unsigned char 
  3987 ;;		 -> parameter_text(127), parameter_value(127), 
  3988 ;;  psrc            3   40[BANK0 ] PTR const unsigned char 
  3989 ;;		 -> this_buf(127), ROM(32767), 
  3990 ;;  maxlen          2   43[BANK0 ] int 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  result          2   45[BANK0 ] int 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2   38[BANK0 ] int 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3997 ;; Tracked objects:
  3998 ;;		On entry : F/0
  3999 ;;		On exit  : F/0
  4000 ;;		Unchanged: FFFFFFF0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4002 ;;      Params:         0       7       0       0       0       0       0
  4003 ;;      Locals:         0       2       0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0
  4005 ;;      Totals:         0       9       0       0       0       0       0
  4006 ;;Total ram usage:        9 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    5
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_this_variable_load_from_text
  4013 ;;		_this_parse_parameter
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text14
  4018  000C84                     __ptext14:
  4019                           	opt stack 0
  4020  000C84                     _string_utils_copy:
  4021                           	opt stack 21
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;string_utils.c: 68: INT16 result = -1;
  4025  000C84  698D               	setf	string_utils_copy@result& (0+255),b
  4026  000C86  698E               	setf	(string_utils_copy@result+1)& (0+255),b
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;string_utils.c: 69: if (psrc != (0))
  4030  000C88  5188               	movf	string_utils_copy@psrc& (0+255),w,b
  4031  000C8A  1189               	iorwf	(string_utils_copy@psrc+1)& (0+255),w,b
  4032  000C8C  118A               	iorwf	(string_utils_copy@psrc+2)& (0+255),w,b
  4033  000C8E  B4D8               	btfsc	status,2,c
  4034  000C90  0012               	return	
  4035  000C92  D01E               	goto	l5189
  4036  000C94                     l5181:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;string_utils.c: 72: {
  4040                           ;string_utils.c: 73: result++;
  4041  000C94  4B8D               	infsnz	string_utils_copy@result& (0+255),f,b
  4042  000C96  2B8E               	incf	(string_utils_copy@result+1)& (0+255),f,b
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;string_utils.c: 74: *pdst++ = *psrc++;
  4046  000C98  C088  FFF6         	movff	string_utils_copy@psrc,tblptrl
  4047  000C9C  C089  FFF7         	movff	string_utils_copy@psrc+1,tblptrh
  4048  000CA0  C08A  FFF8         	movff	string_utils_copy@psrc+2,tblptru
  4049  000CA4  BAF8               	btfsc	tblptru,5,c
  4050  000CA6  D003               	bra	u5367
  4051  000CA8  0008               	tblrd		*
  4052  000CAA  50F5               	movf	tablat,w,c
  4053  000CAC  D005               	bra	u5360
  4054  000CAE                     u5367:
  4055  000CAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4056  000CB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4057  000CB6  50EF               	movf	indf0,w,c
  4058  000CB8                     u5360:
  4059  000CB8  C086  FFD9         	movff	string_utils_copy@pdst,fsr2l
  4060  000CBC  C087  FFDA         	movff	string_utils_copy@pdst+1,fsr2h
  4061  000CC0  6EDF               	movwf	indf2,c
  4062  000CC2  0100               	movlb	0	; () banked
  4063  000CC4  2B88               	incf	string_utils_copy@psrc& (0+255),f,b
  4064  000CC6  0E00               	movlw	0
  4065  000CC8  2389               	addwfc	(string_utils_copy@psrc+1)& (0+255),f,b
  4066  000CCA  238A               	addwfc	(string_utils_copy@psrc+2)& (0+255),f,b
  4067                           
  4068                           ; BSR set to: 0
  4069  000CCC  4B86               	infsnz	string_utils_copy@pdst& (0+255),f,b
  4070  000CCE  2B87               	incf	(string_utils_copy@pdst+1)& (0+255),f,b
  4071  000CD0                     l5189:
  4072                           
  4073                           ; BSR set to: 0
  4074  000CD0  C088  FFF6         	movff	string_utils_copy@psrc,tblptrl
  4075  000CD4  C089  FFF7         	movff	string_utils_copy@psrc+1,tblptrh
  4076  000CD8  C08A  FFF8         	movff	string_utils_copy@psrc+2,tblptru
  4077  000CDC  BAF8               	btfsc	tblptru,5,c
  4078  000CDE  D003               	bra	u5377
  4079  000CE0  0008               	tblrd		*
  4080  000CE2  50F5               	movf	tablat,w,c
  4081  000CE4  D005               	bra	u5370
  4082  000CE6                     u5377:
  4083  000CE6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4084  000CEA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4085  000CEE  50EF               	movf	indf0,w,c
  4086  000CF0                     u5370:
  4087  000CF0  0900               	iorlw	0
  4088  000CF2  E008               	bz	l5193
  4089  000CF4  0100               	movlb	0	; () banked
  4090  000CF6  078B               	decf	string_utils_copy@maxlen& (0+255),f,b
  4091  000CF8  A0D8               	btfss	status,0,c
  4092  000CFA  078C               	decf	(string_utils_copy@maxlen+1)& (0+255),f,b
  4093  000CFC  298B               	incf	string_utils_copy@maxlen& (0+255),w,b
  4094  000CFE  B4D8               	btfsc	status,2,c
  4095  000D00  298C               	incf	(string_utils_copy@maxlen+1)& (0+255),w,b
  4096  000D02  E1C8               	bnz	l5181
  4097  000D04                     l5193:
  4098                           
  4099                           ;string_utils.c: 75: }
  4100                           ;string_utils.c: 76: result++;
  4101  000D04  0100               	movlb	0	; () banked
  4102  000D06  4B8D               	infsnz	string_utils_copy@result& (0+255),f,b
  4103  000D08  2B8E               	incf	(string_utils_copy@result+1)& (0+255),f,b
  4104                           
  4105                           ; BSR set to: 0
  4106  000D0A  0012               	return	
  4107  000D0C                     __end_of_string_utils_copy:
  4108                           	opt stack 0
  4109                           tosu	equ	0xFFF
  4110                           tosh	equ	0xFFE
  4111                           tosl	equ	0xFFD
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodl	equ	0xFF3
  4118                           intcon	equ	0xFF2
  4119                           indf0	equ	0xFEF
  4120                           postinc0	equ	0xFEE
  4121                           fsr0h	equ	0xFEA
  4122                           fsr0l	equ	0xFE9
  4123                           wreg	equ	0xFE8
  4124                           indf1	equ	0xFE7
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8
  4133                           
  4134 ;; *************** function _string_utils_strchr *****************
  4135 ;; Defined at:
  4136 ;;		line 140 in file "src/modules/string_utils.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  pbuf            3   38[BANK0 ] PTR const unsigned char 
  4139 ;;		 -> this_buf(127), ROM(32767), 
  4140 ;;  delimeter       1   41[BANK0 ] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  pos             2   47[BANK0 ] int 
  4143 ;;  result          2   45[BANK0 ] int 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2   38[BANK0 ] int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4148 ;; Tracked objects:
  4149 ;;		On entry : F/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: FFFFFFF0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4153 ;;      Params:         0       4       0       0       0       0       0
  4154 ;;      Locals:         0       4       0       0       0       0       0
  4155 ;;      Temps:          0       3       0       0       0       0       0
  4156 ;;      Totals:         0      11       0       0       0       0       0
  4157 ;;Total ram usage:       11 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    5
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_this_variable_load_from_text
  4164 ;;		_this_parse_command
  4165 ;;		_this_parse_parameter
  4166 ;;		_syntax_string
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text15
  4171  0008D4                     __ptext15:
  4172                           	opt stack 0
  4173  0008D4                     _string_utils_strchr:
  4174                           	opt stack 23
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;string_utils.c: 141: INT16 result = -1;
  4178                           
  4179                           ; BSR set to: 0
  4180  0008D4  698D               	setf	string_utils_strchr@result& (0+255),b
  4181  0008D6  698E               	setf	(string_utils_strchr@result+1)& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;string_utils.c: 142: if (pbuf != (0))
  4185  0008D8  5186               	movf	string_utils_strchr@pbuf& (0+255),w,b
  4186  0008DA  1187               	iorwf	(string_utils_strchr@pbuf+1)& (0+255),w,b
  4187  0008DC  1188               	iorwf	(string_utils_strchr@pbuf+2)& (0+255),w,b
  4188  0008DE  E04D               	bz	l477
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;string_utils.c: 143: {
  4192                           ;string_utils.c: 144: INT16 pos;
  4193                           ;string_utils.c: 145: for (pos = 0; (pos < (1000)) && pbuf[pos]; pos++)
  4194  0008E0  6B8F               	clrf	string_utils_strchr@pos& (0+255),b
  4195  0008E2  6B90               	clrf	(string_utils_strchr@pos+1)& (0+255),b
  4196  0008E4  D026               	goto	l5249
  4197  0008E6                     l5243:
  4198                           
  4199                           ;string_utils.c: 146: {
  4200                           ;string_utils.c: 147: if (pbuf[pos] == delimeter)
  4201  0008E6  0100               	movlb	0	; () banked
  4202  0008E8  518F               	movf	string_utils_strchr@pos& (0+255),w,b
  4203  0008EA  2586               	addwf	string_utils_strchr@pbuf& (0+255),w,b
  4204  0008EC  6F8A               	movwf	??_string_utils_strchr& (0+255),b
  4205  0008EE  5190               	movf	(string_utils_strchr@pos+1)& (0+255),w,b
  4206  0008F0  2187               	addwfc	(string_utils_strchr@pbuf+1)& (0+255),w,b
  4207  0008F2  6F8B               	movwf	(??_string_utils_strchr+1)& (0+255),b
  4208  0008F4  0E00               	movlw	0
  4209  0008F6  BF90               	btfsc	(string_utils_strchr@pos+1)& (0+255),7,b
  4210  0008F8  0EFF               	movlw	255
  4211  0008FA  2188               	addwfc	(string_utils_strchr@pbuf+2)& (0+255),w,b
  4212  0008FC  6F8C               	movwf	(??_string_utils_strchr+2)& (0+255),b
  4213  0008FE  C08A  FFF6         	movff	??_string_utils_strchr,tblptrl
  4214  000902  C08B  FFF7         	movff	??_string_utils_strchr+1,tblptrh
  4215  000906  C08C  FFF8         	movff	??_string_utils_strchr+2,tblptru
  4216  00090A  BAF8               	btfsc	tblptru,5,c
  4217  00090C  D003               	bra	u5457
  4218  00090E  0008               	tblrd		*
  4219  000910  50F5               	movf	tablat,w,c
  4220  000912  D005               	bra	u5450
  4221  000914                     u5457:
  4222  000914  CFF6 FFE9          	movff	tblptrl,fsr0l
  4223  000918  CFF7 FFEA          	movff	tblptrh,fsr0h
  4224  00091C  50EF               	movf	indf0,w,c
  4225  00091E                     u5450:
  4226  00091E  0100               	movlb	0	; () banked
  4227  000920  1989               	xorwf	string_utils_strchr@delimeter& (0+255),w,b
  4228  000922  E105               	bnz	l5247
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;string_utils.c: 148: {
  4232                           ;string_utils.c: 149: result = pos;
  4233  000924  C08F  F08D         	movff	string_utils_strchr@pos,string_utils_strchr@result
  4234  000928  C090  F08E         	movff	string_utils_strchr@pos+1,string_utils_strchr@result+1
  4235                           
  4236                           ;string_utils.c: 150: break;
  4237  00092C  D026               	goto	l477
  4238  00092E                     l5247:
  4239                           
  4240                           ; BSR set to: 0
  4241  00092E  4B8F               	infsnz	string_utils_strchr@pos& (0+255),f,b
  4242  000930  2B90               	incf	(string_utils_strchr@pos+1)& (0+255),f,b
  4243  000932                     l5249:
  4244                           
  4245                           ; BSR set to: 0
  4246  000932  5190               	movf	(string_utils_strchr@pos+1)& (0+255),w,b
  4247  000934  0A80               	xorlw	128
  4248  000936  0F7D               	addlw	-131
  4249  000938  0EE8               	movlw	232
  4250  00093A  B4D8               	btfsc	status,2,c
  4251  00093C  5D8F               	subwf	string_utils_strchr@pos& (0+255),w,b
  4252  00093E  E21D               	bc	l477
  4253                           
  4254                           ; BSR set to: 0
  4255  000940  518F               	movf	string_utils_strchr@pos& (0+255),w,b
  4256  000942  2586               	addwf	string_utils_strchr@pbuf& (0+255),w,b
  4257  000944  6F8A               	movwf	??_string_utils_strchr& (0+255),b
  4258  000946  5190               	movf	(string_utils_strchr@pos+1)& (0+255),w,b
  4259  000948  2187               	addwfc	(string_utils_strchr@pbuf+1)& (0+255),w,b
  4260  00094A  6F8B               	movwf	(??_string_utils_strchr+1)& (0+255),b
  4261  00094C  0E00               	movlw	0
  4262  00094E  BF90               	btfsc	(string_utils_strchr@pos+1)& (0+255),7,b
  4263  000950  0EFF               	movlw	255
  4264  000952  2188               	addwfc	(string_utils_strchr@pbuf+2)& (0+255),w,b
  4265  000954  6F8C               	movwf	(??_string_utils_strchr+2)& (0+255),b
  4266  000956  C08A  FFF6         	movff	??_string_utils_strchr,tblptrl
  4267  00095A  C08B  FFF7         	movff	??_string_utils_strchr+1,tblptrh
  4268  00095E  C08C  FFF8         	movff	??_string_utils_strchr+2,tblptru
  4269  000962  BAF8               	btfsc	tblptru,5,c
  4270  000964  D003               	bra	u5487
  4271  000966  0008               	tblrd		*
  4272  000968  50F5               	movf	tablat,w,c
  4273  00096A  D005               	bra	u5480
  4274  00096C                     u5487:
  4275  00096C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4276  000970  CFF7 FFEA          	movff	tblptrh,fsr0h
  4277  000974  50EF               	movf	indf0,w,c
  4278  000976                     u5480:
  4279  000976  0900               	iorlw	0
  4280  000978  E1B6               	bnz	l5243
  4281  00097A                     l477:
  4282                           
  4283                           ;string_utils.c: 151: }
  4284                           ;string_utils.c: 152: }
  4285                           ;string_utils.c: 153: }
  4286                           ;string_utils.c: 154: return result;
  4287  00097A  C08D  F086         	movff	string_utils_strchr@result,?_string_utils_strchr
  4288  00097E  C08E  F087         	movff	string_utils_strchr@result+1,?_string_utils_strchr+1
  4289  000982  0012               	return	
  4290  000984                     __end_of_string_utils_strchr:
  4291                           	opt stack 0
  4292                           tosu	equ	0xFFF
  4293                           tosh	equ	0xFFE
  4294                           tosl	equ	0xFFD
  4295                           pclath	equ	0xFFA
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           indf0	equ	0xFEF
  4303                           postinc0	equ	0xFEE
  4304                           fsr0h	equ	0xFEA
  4305                           fsr0l	equ	0xFE9
  4306                           wreg	equ	0xFE8
  4307                           indf1	equ	0xFE7
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _string_utils_from_hex *****************
  4318 ;; Defined at:
  4319 ;;		line 400 in file "src/modules/string_utils.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  pdata           2   50[BANK0 ] PTR unsigned char 
  4322 ;;		 -> parameter_value(127), 
  4323 ;;  phex_str        2   52[BANK0 ] PTR const unsigned char 
  4324 ;;		 -> parameter_value(127), 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  i               2   61[BANK0 ] int 
  4327 ;;  j               2   59[BANK0 ] int 
  4328 ;;  len             2   57[BANK0 ] int 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2   50[BANK0 ] int 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : F/0
  4335 ;;		On exit  : F/0
  4336 ;;		Unchanged: FFFFFFF0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4338 ;;      Params:         0       4       0       0       0       0       0
  4339 ;;      Locals:         0       6       0       0       0       0       0
  4340 ;;      Temps:          0       3       0       0       0       0       0
  4341 ;;      Totals:         0      13       0       0       0       0       0
  4342 ;;Total ram usage:       13 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    7
  4345 ;; This function calls:
  4346 ;;		_string_utils_strlen
  4347 ;;		_symb_from_hex_to_bin
  4348 ;; This function is called by:
  4349 ;;		_this_variable_load_from_text
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text16
  4354  000B60                     __ptext16:
  4355                           	opt stack 0
  4356  000B60                     _string_utils_from_hex:
  4357                           	opt stack 19
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;string_utils.c: 401: INT16 i = 0;
  4361  000B60  6B9D               	clrf	string_utils_from_hex@i& (0+255),b
  4362  000B62  6B9E               	clrf	(string_utils_from_hex@i+1)& (0+255),b
  4363                           
  4364                           ;string_utils.c: 402: INT16 j = 0;
  4365  000B64  6B9B               	clrf	string_utils_from_hex@j& (0+255),b
  4366  000B66  6B9C               	clrf	(string_utils_from_hex@j+1)& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;string_utils.c: 403: INT16 len = string_utils_strlen(phex_str);
  4370  000B68  C094  F08C         	movff	string_utils_from_hex@phex_str,?_string_utils_strlen
  4371  000B6C  C095  F08D         	movff	string_utils_from_hex@phex_str+1,?_string_utils_strlen+1
  4372  000B70  EC9E  F007         	call	_string_utils_strlen	;wreg free
  4373  000B74  C08C  F099         	movff	?_string_utils_strlen,string_utils_from_hex@len
  4374  000B78  C08D  F09A         	movff	?_string_utils_strlen+1,string_utils_from_hex@len+1
  4375                           
  4376                           ;string_utils.c: 404: while (i < (len - 1))
  4377  000B7C  D02A               	goto	l5331
  4378  000B7E                     l5325:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;string_utils.c: 405: {
  4382                           ;string_utils.c: 406: pdata[j] = symb_from_hex_to_bin(phex_str[i]) * 16
  4383                           ;string_utils.c: 407: + symb_from_hex_to_bin(phex_str[i + 1]);
  4384  000B7E  519B               	movf	string_utils_from_hex@j& (0+255),w,b
  4385  000B80  2592               	addwf	string_utils_from_hex@pdata& (0+255),w,b
  4386  000B82  6ED9               	movwf	fsr2l,c
  4387  000B84  519C               	movf	(string_utils_from_hex@j+1)& (0+255),w,b
  4388  000B86  2193               	addwfc	(string_utils_from_hex@pdata+1)& (0+255),w,b
  4389  000B88  6EDA               	movwf	fsr2h,c
  4390  000B8A  C094  F096         	movff	string_utils_from_hex@phex_str,??_string_utils_from_hex
  4391  000B8E  C095  F097         	movff	string_utils_from_hex@phex_str+1,??_string_utils_from_hex+1
  4392  000B92  519D               	movf	string_utils_from_hex@i& (0+255),w,b
  4393  000B94  2796               	addwf	??_string_utils_from_hex& (0+255),f,b
  4394  000B96  519E               	movf	(string_utils_from_hex@i+1)& (0+255),w,b
  4395  000B98  2397               	addwfc	(??_string_utils_from_hex+1)& (0+255),f,b
  4396  000B9A  2996               	incf	??_string_utils_from_hex& (0+255),w,b
  4397  000B9C  6EE1               	movwf	fsr1l,c
  4398  000B9E  0E00               	movlw	0
  4399  000BA0  2197               	addwfc	(??_string_utils_from_hex+1)& (0+255),w,b
  4400  000BA2  6EE2               	movwf	fsr1h,c
  4401  000BA4  50E7               	movf	indf1,w,c
  4402  000BA6  EC05  F007         	call	_symb_from_hex_to_bin
  4403  000BAA  6F98               	movwf	(??_string_utils_from_hex+2)& (0+255),b
  4404  000BAC  519D               	movf	string_utils_from_hex@i& (0+255),w,b
  4405  000BAE  2594               	addwf	string_utils_from_hex@phex_str& (0+255),w,b
  4406  000BB0  6EE1               	movwf	fsr1l,c
  4407  000BB2  519E               	movf	(string_utils_from_hex@i+1)& (0+255),w,b
  4408  000BB4  2195               	addwfc	(string_utils_from_hex@phex_str+1)& (0+255),w,b
  4409  000BB6  6EE2               	movwf	fsr1h,c
  4410  000BB8  50E7               	movf	indf1,w,c
  4411  000BBA  EC05  F007         	call	_symb_from_hex_to_bin
  4412  000BBE  0D10               	mullw	16
  4413  000BC0  50F3               	movf	prodl,w,c
  4414  000BC2  2598               	addwf	(??_string_utils_from_hex+2)& (0+255),w,b
  4415  000BC4  6EDF               	movwf	indf2,c
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;string_utils.c: 408: i += 2; j++;
  4419  000BC6  0E02               	movlw	2
  4420  000BC8  279D               	addwf	string_utils_from_hex@i& (0+255),f,b
  4421  000BCA  0E00               	movlw	0
  4422  000BCC  239E               	addwfc	(string_utils_from_hex@i+1)& (0+255),f,b
  4423                           
  4424                           ; BSR set to: 0
  4425  000BCE  4B9B               	infsnz	string_utils_from_hex@j& (0+255),f,b
  4426  000BD0  2B9C               	incf	(string_utils_from_hex@j+1)& (0+255),f,b
  4427  000BD2                     l5331:
  4428                           
  4429                           ; BSR set to: 0
  4430  000BD2  0EFF               	movlw	255
  4431  000BD4  2599               	addwf	string_utils_from_hex@len& (0+255),w,b
  4432  000BD6  6F96               	movwf	??_string_utils_from_hex& (0+255),b
  4433  000BD8  0EFF               	movlw	255
  4434  000BDA  219A               	addwfc	(string_utils_from_hex@len+1)& (0+255),w,b
  4435  000BDC  6F97               	movwf	(??_string_utils_from_hex+1)& (0+255),b
  4436  000BDE  519E               	movf	(string_utils_from_hex@i+1)& (0+255),w,b
  4437  000BE0  0A80               	xorlw	128
  4438  000BE2  6F98               	movwf	(??_string_utils_from_hex+2)& (0+255),b
  4439  000BE4  5196               	movf	??_string_utils_from_hex& (0+255),w,b
  4440  000BE6  5D9D               	subwf	string_utils_from_hex@i& (0+255),w,b
  4441  000BE8  5197               	movf	(??_string_utils_from_hex+1)& (0+255),w,b
  4442  000BEA  0A80               	xorlw	128
  4443  000BEC  5998               	subwfb	(??_string_utils_from_hex+2)& (0+255),w,b
  4444  000BEE  B0D8               	btfsc	status,0,c
  4445  000BF0  0012               	return	
  4446  000BF2  D7C5               	goto	l5325
  4447  000BF4                     __end_of_string_utils_from_hex:
  4448                           	opt stack 0
  4449                           tosu	equ	0xFFF
  4450                           tosh	equ	0xFFE
  4451                           tosl	equ	0xFFD
  4452                           pclath	equ	0xFFA
  4453                           tblptru	equ	0xFF8
  4454                           tblptrh	equ	0xFF7
  4455                           tblptrl	equ	0xFF6
  4456                           tablat	equ	0xFF5
  4457                           prodl	equ	0xFF3
  4458                           intcon	equ	0xFF2
  4459                           indf0	equ	0xFEF
  4460                           postinc0	equ	0xFEE
  4461                           fsr0h	equ	0xFEA
  4462                           fsr0l	equ	0xFE9
  4463                           wreg	equ	0xFE8
  4464                           indf1	equ	0xFE7
  4465                           fsr1h	equ	0xFE2
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function _string_utils_strlen *****************
  4475 ;; Defined at:
  4476 ;;		line 12 in file "src/modules/string_utils.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  pstr            2   44[BANK0 ] PTR const unsigned char 
  4479 ;;		 -> parameter_value(127), syx_param_list(528), serialport_buffer(100), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  i               2   48[BANK0 ] int 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  2   44[BANK0 ] int 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : E/1
  4488 ;;		On exit  : F/0
  4489 ;;		Unchanged: FFFFFFF0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4491 ;;      Params:         0       2       0       0       0       0       0
  4492 ;;      Locals:         0       2       0       0       0       0       0
  4493 ;;      Temps:          0       2       0       0       0       0       0
  4494 ;;      Totals:         0       6       0       0       0       0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    6
  4498 ;; This function calls:
  4499 ;;		_string_utils_is_symbol
  4500 ;; This function is called by:
  4501 ;;		_string_utils_from_hex
  4502 ;;		_this_parse_parameter
  4503 ;;		_syntax_string
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text17
  4508  000F3C                     __ptext17:
  4509                           	opt stack 0
  4510  000F3C                     _string_utils_strlen:
  4511                           	opt stack 19
  4512                           
  4513                           ;string_utils.c: 13: INT16 i = 0;
  4514                           
  4515                           ; BSR set to: 0
  4516  000F3C  0100               	movlb	0	; () banked
  4517  000F3E  6B90               	clrf	string_utils_strlen@i& (0+255),b
  4518  000F40  6B91               	clrf	(string_utils_strlen@i+1)& (0+255),b
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;string_utils.c: 14: if (pstr)
  4522  000F42  518D               	movf	(string_utils_strlen@pstr+1)& (0+255),w,b
  4523  000F44  118C               	iorwf	string_utils_strlen@pstr& (0+255),w,b
  4524  000F46  E023               	bz	l440
  4525  000F48                     l5157:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;string_utils.c: 17: {
  4529                           ;string_utils.c: 18: if (! string_utils_is_symbol(pstr[i]))
  4530  000F48  C08C  F08E         	movff	string_utils_strlen@pstr,??_string_utils_strlen
  4531  000F4C  C08D  F08F         	movff	string_utils_strlen@pstr+1,??_string_utils_strlen+1
  4532  000F50  5190               	movf	string_utils_strlen@i& (0+255),w,b
  4533  000F52  278E               	addwf	??_string_utils_strlen& (0+255),f,b
  4534  000F54  5191               	movf	(string_utils_strlen@i+1)& (0+255),w,b
  4535  000F56  238F               	addwfc	(??_string_utils_strlen+1)& (0+255),f,b
  4536  000F58  518E               	movf	??_string_utils_strlen& (0+255),w,b
  4537  000F5A  6EF6               	movwf	tblptrl,c
  4538  000F5C  6EE9               	movwf	fsr0l,c
  4539  000F5E  0E05               	movlw	(high __ramtop+-1)
  4540  000F60  6EEA               	movwf	fsr0h,c
  4541  000F62  518F               	movf	(??_string_utils_strlen+1)& (0+255),w,b
  4542  000F64  64EA               	cpfsgt	fsr0h,c
  4543  000F66  D003               	bra	u5307
  4544  000F68  6EEA               	movwf	fsr0h,c
  4545  000F6A  50EF               	movf	indf0,w,c
  4546  000F6C  D003               	bra	u5300
  4547  000F6E                     u5307:
  4548  000F6E  6EF7               	movwf	tblptrh,c
  4549  000F70  0008               	tblrd		*
  4550  000F72  50F5               	movf	tablat,w,c
  4551  000F74                     u5300:
  4552  000F74  EC2F  F009         	call	_string_utils_is_symbol
  4553  000F78  0900               	iorlw	0
  4554  000F7A  E009               	bz	l440
  4555                           
  4556                           ; BSR set to: 0
  4557  000F7C  4B90               	infsnz	string_utils_strlen@i& (0+255),f,b
  4558  000F7E  2B91               	incf	(string_utils_strlen@i+1)& (0+255),f,b
  4559                           
  4560                           ; BSR set to: 0
  4561  000F80  5191               	movf	(string_utils_strlen@i+1)& (0+255),w,b
  4562  000F82  0A80               	xorlw	128
  4563  000F84  0F7D               	addlw	-131
  4564  000F86  0EE8               	movlw	232
  4565  000F88  B4D8               	btfsc	status,2,c
  4566  000F8A  5D90               	subwf	string_utils_strlen@i& (0+255),w,b
  4567  000F8C  E3DD               	bnc	l5157
  4568  000F8E                     l440:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;string_utils.c: 21: }
  4572                           ;string_utils.c: 22: }
  4573                           ;string_utils.c: 23: }
  4574                           ;string_utils.c: 24: return i;
  4575  000F8E  C090  F08C         	movff	string_utils_strlen@i,?_string_utils_strlen
  4576  000F92  C091  F08D         	movff	string_utils_strlen@i+1,?_string_utils_strlen+1
  4577                           
  4578                           ; BSR set to: 0
  4579  000F96  0012               	return	
  4580  000F98                     __end_of_string_utils_strlen:
  4581                           	opt stack 0
  4582                           tosu	equ	0xFFF
  4583                           tosh	equ	0xFFE
  4584                           tosl	equ	0xFFD
  4585                           pclath	equ	0xFFA
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodl	equ	0xFF3
  4591                           intcon	equ	0xFF2
  4592                           indf0	equ	0xFEF
  4593                           postinc0	equ	0xFEE
  4594                           fsr0h	equ	0xFEA
  4595                           fsr0l	equ	0xFE9
  4596                           wreg	equ	0xFE8
  4597                           indf1	equ	0xFE7
  4598                           fsr1h	equ	0xFE2
  4599                           fsr1l	equ	0xFE1
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _string_utils_is_symbol *****************
  4608 ;; Defined at:
  4609 ;;		line 194 in file "src/modules/string_utils.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  symb            1    wreg     unsigned char 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  symb            1   39[BANK0 ] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      unsigned char 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : F/0
  4621 ;;		Unchanged: FFFFFFF0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4623 ;;      Params:         0       0       0       0       0       0       0
  4624 ;;      Locals:         0       2       0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0
  4626 ;;      Totals:         0       2       0       0       0       0       0
  4627 ;;Total ram usage:        2 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    5
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_string_utils_strlen
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text18
  4638  00125E                     __ptext18:
  4639                           	opt stack 0
  4640  00125E                     _string_utils_is_symbol:
  4641                           	opt stack 19
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;string_utils_is_symbol@symb stored from wreg
  4645  00125E  CFE8 F087          	movff	wreg,string_utils_is_symbol@symb
  4646                           
  4647                           ;string_utils.c: 195: return (symb >= ' ') && (symb <= '~');
  4648  001262  0100               	movlb	0	; () banked
  4649  001264  6B86               	clrf	_string_utils_is_symbol$736& (0+255),b
  4650                           
  4651                           ; BSR set to: 0
  4652  001266  0E1F               	movlw	31
  4653  001268  6587               	cpfsgt	string_utils_is_symbol@symb& (0+255),b
  4654  00126A  D005               	goto	l498
  4655                           
  4656                           ; BSR set to: 0
  4657  00126C  0E7F               	movlw	127
  4658  00126E  6187               	cpfslt	string_utils_is_symbol@symb& (0+255),b
  4659  001270  D002               	goto	l498
  4660                           
  4661                           ; BSR set to: 0
  4662  001272  0E01               	movlw	1
  4663  001274  6F86               	movwf	_string_utils_is_symbol$736& (0+255),b
  4664  001276                     l498:
  4665                           
  4666                           ; BSR set to: 0
  4667  001276  5186               	movf	_string_utils_is_symbol$736& (0+255),w,b
  4668                           
  4669                           ; BSR set to: 0
  4670  001278  0012               	return	
  4671  00127A                     __end_of_string_utils_is_symbol:
  4672                           	opt stack 0
  4673                           tosu	equ	0xFFF
  4674                           tosh	equ	0xFFE
  4675                           tosl	equ	0xFFD
  4676                           pclath	equ	0xFFA
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           indf0	equ	0xFEF
  4684                           postinc0	equ	0xFEE
  4685                           fsr0h	equ	0xFEA
  4686                           fsr0l	equ	0xFE9
  4687                           wreg	equ	0xFE8
  4688                           indf1	equ	0xFE7
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function _symb_from_hex_to_bin *****************
  4699 ;; Defined at:
  4700 ;;		line 334 in file "src/modules/string_utils.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  symb            1    wreg     unsigned char 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  symb            1   38[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : F/0
  4711 ;;		On exit  : F/0
  4712 ;;		Unchanged: FFFFFFF0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4714 ;;      Params:         0       0       0       0       0       0       0
  4715 ;;      Locals:         0       1       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0
  4717 ;;      Totals:         0       1       0       0       0       0       0
  4718 ;;Total ram usage:        1 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    5
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_string_utils_from_hex
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text19
  4729  000E0A                     __ptext19:
  4730                           	opt stack 0
  4731  000E0A                     _symb_from_hex_to_bin:
  4732                           	opt stack 20
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;symb_from_hex_to_bin@symb stored from wreg
  4736  000E0A  CFE8 F086          	movff	wreg,symb_from_hex_to_bin@symb
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;string_utils.c: 335: switch (symb)
  4740  000E0E  D009               	goto	l5315
  4741  000E10                     l5301:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;string_utils.c: 338: case '1':
  4745                           ;string_utils.c: 339: case '2':
  4746                           ;string_utils.c: 340: case '3':
  4747                           ;string_utils.c: 341: case '4':
  4748                           ;string_utils.c: 342: case '5':
  4749                           ;string_utils.c: 343: case '6':
  4750                           ;string_utils.c: 344: case '7':
  4751                           ;string_utils.c: 345: case '8':
  4752                           ;string_utils.c: 346: case '9':
  4753                           ;string_utils.c: 347: return (UINT8)(symb - '0');
  4754  000E10  5186               	movf	symb_from_hex_to_bin@symb& (0+255),w,b
  4755  000E12  0FD0               	addlw	208
  4756  000E14  0012               	return	
  4757  000E16                     l5305:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;string_utils.c: 349: case 'b':
  4761                           ;string_utils.c: 350: case 'c':
  4762                           ;string_utils.c: 351: case 'd':
  4763                           ;string_utils.c: 352: case 'e':
  4764                           ;string_utils.c: 353: case 'f':
  4765                           ;string_utils.c: 354: return (UINT8)(symb - 'a') + 10;
  4766  000E16  5186               	movf	symb_from_hex_to_bin@symb& (0+255),w,b
  4767  000E18  0FA9               	addlw	169
  4768  000E1A  0012               	return	
  4769  000E1C                     l5309:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;string_utils.c: 356: case 'B':
  4773                           ;string_utils.c: 357: case 'C':
  4774                           ;string_utils.c: 358: case 'D':
  4775                           ;string_utils.c: 359: case 'E':
  4776                           ;string_utils.c: 360: case 'F':
  4777                           ;string_utils.c: 361: return (UINT8)(symb - 'A') + 10;
  4778  000E1C  5186               	movf	symb_from_hex_to_bin@symb& (0+255),w,b
  4779  000E1E  0FC9               	addlw	201
  4780  000E20  0012               	return	
  4781  000E22                     l5315:
  4782                           
  4783                           ; BSR set to: 0
  4784  000E22  5186               	movf	symb_from_hex_to_bin@symb& (0+255),w,b
  4785                           
  4786                           ; Switch size 1, requested type "speed"
  4787                           ; Number of cases is 22, Range of values is 48 to 102
  4788                           ; switch strategies available:
  4789                           ; Name         Instructions Cycles
  4790                           ; simple_byte           67    34 (average)
  4791                           ;	Chosen strategy is simple_byte
  4792  000E24  0A30               	xorlw	48	; case 48
  4793  000E26  E0F4               	bz	l5301
  4794  000E28  0A01               	xorlw	1	; case 49
  4795  000E2A  E0F2               	bz	l5301
  4796  000E2C  0A03               	xorlw	3	; case 50
  4797  000E2E  E0F0               	bz	l5301
  4798  000E30  0A01               	xorlw	1	; case 51
  4799  000E32  E0EE               	bz	l5301
  4800  000E34  0A07               	xorlw	7	; case 52
  4801  000E36  E0EC               	bz	l5301
  4802  000E38  0A01               	xorlw	1	; case 53
  4803  000E3A  E0EA               	bz	l5301
  4804  000E3C  0A03               	xorlw	3	; case 54
  4805  000E3E  E0E8               	bz	l5301
  4806  000E40  0A01               	xorlw	1	; case 55
  4807  000E42  E0E6               	bz	l5301
  4808  000E44  0A0F               	xorlw	15	; case 56
  4809  000E46  E0E4               	bz	l5301
  4810  000E48  0A01               	xorlw	1	; case 57
  4811  000E4A  E0E2               	bz	l5301
  4812  000E4C  0A78               	xorlw	120	; case 65
  4813  000E4E  E0E6               	bz	l5309
  4814  000E50  0A03               	xorlw	3	; case 66
  4815  000E52  E0E4               	bz	l5309
  4816  000E54  0A01               	xorlw	1	; case 67
  4817  000E56  E0E2               	bz	l5309
  4818  000E58  0A07               	xorlw	7	; case 68
  4819  000E5A  E0E0               	bz	l5309
  4820  000E5C  0A01               	xorlw	1	; case 69
  4821  000E5E  E0DE               	bz	l5309
  4822  000E60  0A03               	xorlw	3	; case 70
  4823  000E62  E0DC               	bz	l5309
  4824  000E64  0A27               	xorlw	39	; case 97
  4825  000E66  E0D7               	bz	l5305
  4826  000E68  0A03               	xorlw	3	; case 98
  4827  000E6A  E0D5               	bz	l5305
  4828  000E6C  0A01               	xorlw	1	; case 99
  4829  000E6E  E0D3               	bz	l5305
  4830  000E70  0A07               	xorlw	7	; case 100
  4831  000E72  E0D1               	bz	l5305
  4832  000E74  0A01               	xorlw	1	; case 101
  4833  000E76  E0CF               	bz	l5305
  4834  000E78  0A03               	xorlw	3	; case 102
  4835  000E7A  E0CD               	bz	l5305
  4836                           
  4837                           ; BSR set to: 0
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;string_utils.c: 363: return 0;
  4841  000E7C  0C00               	retlw	0
  4842  000E7E                     __end_of_symb_from_hex_to_bin:
  4843                           	opt stack 0
  4844                           tosu	equ	0xFFF
  4845                           tosh	equ	0xFFE
  4846                           tosl	equ	0xFFD
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           indf0	equ	0xFEF
  4855                           postinc0	equ	0xFEE
  4856                           fsr0h	equ	0xFEA
  4857                           fsr0l	equ	0xFE9
  4858                           wreg	equ	0xFE8
  4859                           indf1	equ	0xFE7
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _on_parameter_found *****************
  4870 ;; Defined at:
  4871 ;;		line 12 in file "src/modules/on_parameter_found.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  operation       1    wreg     enum E4396
  4874 ;;  cmd_id          1   58[BANK0 ] char 
  4875 ;;  p_id            1   59[BANK0 ] char 
  4876 ;;  p               3   60[BANK0 ] PTR const void 
  4877 ;;		 -> parameter_text(127), parameter_value(127), ROM(32767), 
  4878 ;;  type            1   63[BANK0 ] enum E4387
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  operation       1    0[BANK1 ] enum E4396
  4881 ;;  ok              1    0        unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : F/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: FFFFFFF0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4891 ;;      Params:         0       6       0       0       0       0       0
  4892 ;;      Locals:         0       0       1       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0
  4894 ;;      Totals:         0       6       1       0       0       0       0
  4895 ;;Total ram usage:        7 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    8
  4898 ;; This function calls:
  4899 ;;		_set_parameter
  4900 ;;		_get_parameter
  4901 ;;		_serialport_write
  4902 ;; This function is called by:
  4903 ;;		_syntax_string
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text20
  4908  00107C                     __ptext20:
  4909                           	opt stack 0
  4910  00107C                     _on_parameter_found:
  4911                           	opt stack 20
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;on_parameter_found@operation stored from wreg
  4915  00107C  CFE8 F1D6          	movff	wreg,on_parameter_found@operation
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;on_parameter_found.c: 13: CHAR ok;
  4919                           ;on_parameter_found.c: 14: if (operation == PARSER_PARAMETER) {
  4920  001080  0101               	movlb	1	; () banked
  4921  001082  67D6               	tstfsz	on_parameter_found@operation& (0+255),b
  4922  001084  D00E               	goto	l5423
  4923  001086  D006               	goto	l5421
  4924  001088                     l5415:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;on_parameter_found.c: 17: ok = set_parameter(p_id);
  4928  001088  519B               	movf	on_parameter_found@p_id& (0+255),w,b
  4929  00108A  EFFF  F008         	goto	_set_parameter
  4930  00108E                     l5417:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;on_parameter_found.c: 21: ok = get_parameter(p_id);
  4934  00108E  519B               	movf	on_parameter_found@p_id& (0+255),w,b
  4935  001090  EF87  F009         	goto	_get_parameter
  4936  001094                     l5421:
  4937                           
  4938                           ; BSR set to: 1
  4939  001094  0100               	movlb	0	; () banked
  4940  001096  519A               	movf	on_parameter_found@cmd_id& (0+255),w,b
  4941                           
  4942                           ; Switch size 1, requested type "speed"
  4943                           ; Number of cases is 2, Range of values is 0 to 1
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte            7     4 (average)
  4947                           ;	Chosen strategy is simple_byte
  4948  001098  E0F7               	bz	l5415
  4949  00109A  0A01               	xorlw	1	; case 1
  4950  00109C  A4D8               	btfss	status,2,c
  4951  00109E  0012               	return	
  4952  0010A0  D7F6               	goto	l5417
  4953  0010A2                     l5423:
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;on_parameter_found.c: 32: else if (operation == PARSER_STOP) {
  4957  0010A2  51D6               	movf	on_parameter_found@operation& (0+255),w,b
  4958  0010A4  0A02               	xorlw	2
  4959  0010A6  B4D8               	btfsc	status,2,c
  4960  0010A8  0012               	return	
  4961                           
  4962                           ; BSR set to: 1
  4963  0010AA  51D6               	movf	on_parameter_found@operation& (0+255),w,b
  4964  0010AC  0A03               	xorlw	3
  4965  0010AE  A4D8               	btfss	status,2,c
  4966  0010B0  0012               	return	
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;on_parameter_found.c: 49: serialport_write("err\n");
  4970  0010B2  0E7F               	movlw	high STR_1
  4971  0010B4  0100               	movlb	0	; () banked
  4972  0010B6  6F98               	movwf	(?_serialport_write+1)& (0+255),b
  4973  0010B8  0EE5               	movlw	low STR_1
  4974  0010BA  6F97               	movwf	?_serialport_write& (0+255),b
  4975  0010BC  EF03  F008         	goto	l5145	;wreg free
  4976  0010C0                     __end_of_on_parameter_found:
  4977                           	opt stack 0
  4978                           tosu	equ	0xFFF
  4979                           tosh	equ	0xFFE
  4980                           tosl	equ	0xFFD
  4981                           pclath	equ	0xFFA
  4982                           tblptru	equ	0xFF8
  4983                           tblptrh	equ	0xFF7
  4984                           tblptrl	equ	0xFF6
  4985                           tablat	equ	0xFF5
  4986                           prodl	equ	0xFF3
  4987                           intcon	equ	0xFF2
  4988                           indf0	equ	0xFEF
  4989                           postinc0	equ	0xFEE
  4990                           fsr0h	equ	0xFEA
  4991                           fsr0l	equ	0xFE9
  4992                           wreg	equ	0xFE8
  4993                           indf1	equ	0xFE7
  4994                           fsr1h	equ	0xFE2
  4995                           fsr1l	equ	0xFE1
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _set_parameter *****************
  5004 ;; Defined at:
  5005 ;;		line 54 in file "src/modules/on_parameter_found.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  p_id            1    wreg     char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  p_id            1    0[COMRAM] char 
  5010 ;;  ok              1    0        unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : F/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: FFFFFFF0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5020 ;;      Params:         0       0       0       0       0       0       0
  5021 ;;      Locals:         0       1       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0
  5023 ;;      Totals:         0       1       0       0       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    7
  5027 ;; This function calls:
  5028 ;;		_syntax_get_text
  5029 ;;		_serialport_write
  5030 ;; This function is called by:
  5031 ;;		_on_parameter_found
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text21
  5036  0011FE                     __ptext21:
  5037                           	opt stack 0
  5038  0011FE                     _set_parameter:
  5039                           	opt stack 20
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;on_parameter_found.c: 63: serialport_write( syntax_get_text() );
  5043                           
  5044                           ; BSR set to: 0
  5045  0011FE  EC8E  F009         	call	_syntax_get_text	;wreg free
  5046  001202  C026  F097         	movff	?_syntax_get_text,?_serialport_write
  5047  001206  C027  F098         	movff	?_syntax_get_text+1,?_serialport_write+1
  5048  00120A  0100               	movlb	0	; () banked
  5049  00120C  ECF5  F007         	call	_serialport_write	;wreg free
  5050                           
  5051                           ;on_parameter_found.c: 69: else
  5052                           ;on_parameter_found.c: 70: {
  5053                           ;on_parameter_found.c: 71: serialport_write( ":err " );
  5054  001210  0E7F               	movlw	high STR_3
  5055  001212  0100               	movlb	0	; () banked
  5056  001214  6F98               	movwf	(?_serialport_write+1)& (0+255),b
  5057  001216  0EDF               	movlw	low STR_3
  5058  001218  6F97               	movwf	?_serialport_write& (0+255),b
  5059  00121A  ECF5  F007         	call	_serialport_write	;wreg free
  5060                           
  5061                           ;on_parameter_found.c: 72: }
  5062                           ;on_parameter_found.c: 73: return ok;
  5063  00121E  0C00               	retlw	0
  5064  001220                     __end_of_set_parameter:
  5065                           	opt stack 0
  5066                           tosu	equ	0xFFF
  5067                           tosh	equ	0xFFE
  5068                           tosl	equ	0xFFD
  5069                           pclath	equ	0xFFA
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           indf0	equ	0xFEF
  5077                           postinc0	equ	0xFEE
  5078                           fsr0h	equ	0xFEA
  5079                           fsr0l	equ	0xFE9
  5080                           wreg	equ	0xFE8
  5081                           indf1	equ	0xFE7
  5082                           fsr1h	equ	0xFE2
  5083                           fsr1l	equ	0xFE1
  5084                           indf2	equ	0xFDF
  5085                           postinc2	equ	0xFDE
  5086                           postdec2	equ	0xFDD
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function _syntax_get_text *****************
  5092 ;; Defined at:
  5093 ;;		line 223 in file "src/modules/syntax.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  2    wreg      PTR const unsigned char 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2
  5102 ;; Tracked objects:
  5103 ;;		On entry : F/0
  5104 ;;		On exit  : F/3
  5105 ;;		Unchanged: FFFFFFF0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5107 ;;      Params:         0       0       0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    5
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_set_parameter
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text22
  5122  00131C                     __ptext22:
  5123                           	opt stack 0
  5124  00131C                     _syntax_get_text:
  5125                           	opt stack 21
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;syntax.c: 224: return parameter_text;
  5129  00131C  0103               	movlb	3	; () banked
  5130  00131E  0E03               	movlw	high _parameter_text
  5131  001320  6E27               	movwf	?_syntax_get_text+1,c
  5132  001322  0E50               	movlw	low _parameter_text
  5133  001324  6E26               	movwf	?_syntax_get_text,c
  5134                           
  5135                           ; BSR set to: 3
  5136  001326  0012               	return	
  5137  001328                     __end_of_syntax_get_text:
  5138                           	opt stack 0
  5139                           tosu	equ	0xFFF
  5140                           tosh	equ	0xFFE
  5141                           tosl	equ	0xFFD
  5142                           pclath	equ	0xFFA
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodl	equ	0xFF3
  5148                           intcon	equ	0xFF2
  5149                           indf0	equ	0xFEF
  5150                           postinc0	equ	0xFEE
  5151                           fsr0h	equ	0xFEA
  5152                           fsr0l	equ	0xFE9
  5153                           wreg	equ	0xFE8
  5154                           indf1	equ	0xFE7
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           indf2	equ	0xFDF
  5158                           postinc2	equ	0xFDE
  5159                           postdec2	equ	0xFDD
  5160                           fsr2h	equ	0xFDA
  5161                           fsr2l	equ	0xFD9
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _get_parameter *****************
  5165 ;; Defined at:
  5166 ;;		line 76 in file "src/modules/on_parameter_found.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  p_id            1    wreg     char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  p_id            1    0[COMRAM] char 
  5171 ;;  ok              1    0        unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      unsigned char 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : F/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: FFFFFFF0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         0       0       0       0       0       0       0
  5182 ;;      Locals:         0       1       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0
  5184 ;;      Totals:         0       1       0       0       0       0       0
  5185 ;;Total ram usage:        1 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    7
  5188 ;; This function calls:
  5189 ;;		_serialport_write
  5190 ;; This function is called by:
  5191 ;;		_on_parameter_found
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text23
  5196  00130E                     __ptext23:
  5197                           	opt stack 0
  5198  00130E                     _get_parameter:
  5199                           	opt stack 20
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;on_parameter_found.c: 91: else
  5203                           ;on_parameter_found.c: 92: {
  5204                           ;on_parameter_found.c: 93: serialport_write( ":err " );
  5205                           
  5206                           ; BSR set to: 0
  5207                           
  5208                           ; BSR set to: 3
  5209  00130E  0E7F               	movlw	high STR_3
  5210  001310  6F98               	movwf	(?_serialport_write+1)& (0+255),b
  5211  001312  0EDF               	movlw	low STR_3
  5212  001314  6F97               	movwf	?_serialport_write& (0+255),b
  5213  001316  ECF5  F007         	call	_serialport_write	;wreg free
  5214                           
  5215                           ;on_parameter_found.c: 94: }
  5216                           ;on_parameter_found.c: 95: return ok;
  5217  00131A  0C00               	retlw	0
  5218  00131C                     __end_of_get_parameter:
  5219                           	opt stack 0
  5220                           tosu	equ	0xFFF
  5221                           tosh	equ	0xFFE
  5222                           tosl	equ	0xFFD
  5223                           pclath	equ	0xFFA
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           prodl	equ	0xFF3
  5229                           intcon	equ	0xFF2
  5230                           indf0	equ	0xFEF
  5231                           postinc0	equ	0xFEE
  5232                           fsr0h	equ	0xFEA
  5233                           fsr0l	equ	0xFE9
  5234                           wreg	equ	0xFE8
  5235                           indf1	equ	0xFE7
  5236                           fsr1h	equ	0xFE2
  5237                           fsr1l	equ	0xFE1
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           postdec2	equ	0xFDD
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _serialport_write *****************
  5246 ;; Defined at:
  5247 ;;		line 48 in file "src/modules/serialport.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  pstr            2   55[BANK0 ] PTR const unsigned char 
  5250 ;;		 -> STR_4(6), STR_3(6), STR_2(5), STR_1(5), 
  5251 ;;		 -> parameter_text(127), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : C/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: FFFFFFF0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5263 ;;      Params:         0       2       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0
  5266 ;;      Totals:         0       2       0       0       0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    6
  5270 ;; This function calls:
  5271 ;;		_rd_buffer_put
  5272 ;; This function is called by:
  5273 ;;		_on_parameter_found
  5274 ;;		_set_parameter
  5275 ;;		_get_parameter
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text24
  5280  000FEA                     __ptext24:
  5281                           	opt stack 0
  5282  000FEA                     _serialport_write:
  5283                           	opt stack 21
  5284                           
  5285                           ;serialport.c: 49: while (pstr && *pstr)
  5286  000FEA  D00D               	goto	l5145
  5287  000FEC                     l5141:
  5288                           
  5289                           ;serialport.c: 50: {
  5290                           ;serialport.c: 51: rd_buffer_put(&g_tx_buffer, (UINT8*)pstr);
  5291  000FEC  0E01               	movlw	high _g_tx_buffer
  5292  000FEE  0100               	movlb	0	; () banked
  5293  000FF0  6F87               	movwf	(?_rd_buffer_put+1)& (0+255),b
  5294  000FF2  0E6B               	movlw	low _g_tx_buffer
  5295  000FF4  6F86               	movwf	?_rd_buffer_put& (0+255),b
  5296  000FF6  C097  F088         	movff	serialport_write@pstr,?_rd_buffer_put+2
  5297  000FFA  C098  F089         	movff	serialport_write@pstr+1,?_rd_buffer_put+3
  5298  000FFE  EC37  F002         	call	_rd_buffer_put	;wreg free
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;serialport.c: 52: pstr++;
  5302  001002  4B97               	infsnz	serialport_write@pstr& (0+255),f,b
  5303  001004  2B98               	incf	(serialport_write@pstr+1)& (0+255),f,b
  5304  001006                     l5145:
  5305  001006  0100               	movlb	0	; () banked
  5306  001008  5198               	movf	(serialport_write@pstr+1)& (0+255),w,b
  5307  00100A  1197               	iorwf	serialport_write@pstr& (0+255),w,b
  5308  00100C  B4D8               	btfsc	status,2,c
  5309  00100E  0012               	return	
  5310                           
  5311                           ; BSR set to: 0
  5312  001010  5197               	movf	serialport_write@pstr& (0+255),w,b
  5313  001012  6EF6               	movwf	tblptrl,c
  5314  001014  6EE9               	movwf	fsr0l,c
  5315  001016  0E05               	movlw	(high __ramtop+-1)
  5316  001018  6EEA               	movwf	fsr0h,c
  5317  00101A  5198               	movf	(serialport_write@pstr+1)& (0+255),w,b
  5318  00101C  64EA               	cpfsgt	fsr0h,c
  5319  00101E  D003               	bra	u5277
  5320  001020  6EEA               	movwf	fsr0h,c
  5321  001022  50EF               	movf	indf0,w,c
  5322  001024  D003               	bra	u5270
  5323  001026                     u5277:
  5324  001026  6EF7               	movwf	tblptrh,c
  5325  001028  0008               	tblrd		*
  5326  00102A  50F5               	movf	tablat,w,c
  5327  00102C                     u5270:
  5328  00102C  0900               	iorlw	0
  5329  00102E  B4D8               	btfsc	status,2,c
  5330  001030  0012               	return	
  5331  001032  D7DC               	goto	l5141
  5332  001034                     __end_of_serialport_write:
  5333                           	opt stack 0
  5334                           tosu	equ	0xFFF
  5335                           tosh	equ	0xFFE
  5336                           tosl	equ	0xFFD
  5337                           pclath	equ	0xFFA
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           indf0	equ	0xFEF
  5345                           postinc0	equ	0xFEE
  5346                           fsr0h	equ	0xFEA
  5347                           fsr0l	equ	0xFE9
  5348                           wreg	equ	0xFE8
  5349                           indf1	equ	0xFE7
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _rd_buffer_put *****************
  5360 ;; Defined at:
  5361 ;;		line 148 in file "src/modules/rd_buffer.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  pbuffer         2   38[BANK0 ] PTR struct .
  5364 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  5365 ;;  prec            2   40[BANK0 ] PTR unsigned char 
  5366 ;;		 -> STR_4(6), STR_3(6), STR_2(5), STR_1(5), 
  5367 ;;		 -> parameter_text(127), putch@byte(1), serialport_service@byte(1), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  ind             2   53[BANK0 ] int 
  5370 ;;  mes_rec         2   48[BANK0 ] PTR volatile unsigned ch
  5371 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  5372 ;;  sz              2   51[BANK0 ] int 
  5373 ;;  result          1    0        unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5378 ;; Tracked objects:
  5379 ;;		On entry : F/0
  5380 ;;		On exit  : F/0
  5381 ;;		Unchanged: FFFFFFF0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5383 ;;      Params:         0       4       0       0       0       0       0
  5384 ;;      Locals:         0       8       0       0       0       0       0
  5385 ;;      Temps:          0       5       0       0       0       0       0
  5386 ;;      Totals:         0      17       0       0       0       0       0
  5387 ;;Total ram usage:       17 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    5
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_serialport_write
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text25
  5398  00046E                     __ptext25:
  5399                           	opt stack 0
  5400  00046E                     _rd_buffer_put:
  5401                           	opt stack 21
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;rd_buffer.c: 150: SIZE sz ;
  5405                           ;rd_buffer.c: 151: sz = pbuffer->head.last - pbuffer->head.first;
  5406                           
  5407                           ; BSR set to: 0
  5408  00046E  EE20 F002          	lfsr	2,2
  5409  000472  5186               	movf	rd_buffer_put@pbuffer& (0+255),w,b
  5410  000474  26D9               	addwf	fsr2l,f,c
  5411  000476  5187               	movf	(rd_buffer_put@pbuffer+1)& (0+255),w,b
  5412  000478  22DA               	addwfc	fsr2h,f,c
  5413  00047A  CFDE F08A          	movff	postinc2,??_rd_buffer_put
  5414  00047E  CFDD F08B          	movff	postdec2,??_rd_buffer_put+1
  5415  000482  C086  FFD9         	movff	rd_buffer_put@pbuffer,fsr2l
  5416  000486  C087  FFDA         	movff	rd_buffer_put@pbuffer+1,fsr2h
  5417  00048A  CFDE F08C          	movff	postinc2,??_rd_buffer_put+2
  5418  00048E  CFDD F08D          	movff	postdec2,??_rd_buffer_put+3
  5419  000492  518A               	movf	??_rd_buffer_put& (0+255),w,b
  5420  000494  5D8C               	subwf	(??_rd_buffer_put+2)& (0+255),w,b
  5421  000496  6F93               	movwf	rd_buffer_put@sz& (0+255),b
  5422  000498  518B               	movf	(??_rd_buffer_put+1)& (0+255),w,b
  5423  00049A  598D               	subwfb	(??_rd_buffer_put+3)& (0+255),w,b
  5424  00049C  6F94               	movwf	(rd_buffer_put@sz+1)& (0+255),b
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;rd_buffer.c: 152: this_contains_crlf |= (((CHAR)*prec) == '\n') || (((CHAR)*prec) == '\
      +                          r');
  5428  00049E  0E01               	movlw	1
  5429  0004A0  6F92               	movwf	_rd_buffer_put$462& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432  0004A2  5188               	movf	rd_buffer_put@prec& (0+255),w,b
  5433  0004A4  6EF6               	movwf	tblptrl,c
  5434  0004A6  6EE9               	movwf	fsr0l,c
  5435  0004A8  0E05               	movlw	(high __ramtop+-1)
  5436  0004AA  6EEA               	movwf	fsr0h,c
  5437  0004AC  5189               	movf	(rd_buffer_put@prec+1)& (0+255),w,b
  5438  0004AE  64EA               	cpfsgt	fsr0h,c
  5439  0004B0  D003               	bra	u5087
  5440  0004B2  6EEA               	movwf	fsr0h,c
  5441  0004B4  50EF               	movf	indf0,w,c
  5442  0004B6  D003               	bra	u5080
  5443  0004B8                     u5087:
  5444  0004B8  6EF7               	movwf	tblptrh,c
  5445  0004BA  0008               	tblrd		*
  5446  0004BC  50F5               	movf	tablat,w,c
  5447  0004BE                     u5080:
  5448  0004BE  0A0A               	xorlw	10
  5449  0004C0  E013               	bz	l5043
  5450  0004C2  0100               	movlb	0	; () banked
  5451  0004C4  5188               	movf	rd_buffer_put@prec& (0+255),w,b
  5452  0004C6  6EF6               	movwf	tblptrl,c
  5453  0004C8  6EE9               	movwf	fsr0l,c
  5454  0004CA  0E05               	movlw	(high __ramtop+-1)
  5455  0004CC  6EEA               	movwf	fsr0h,c
  5456  0004CE  5189               	movf	(rd_buffer_put@prec+1)& (0+255),w,b
  5457  0004D0  64EA               	cpfsgt	fsr0h,c
  5458  0004D2  D003               	bra	u5107
  5459  0004D4  6EEA               	movwf	fsr0h,c
  5460  0004D6  50EF               	movf	indf0,w,c
  5461  0004D8  D003               	bra	u5100
  5462  0004DA                     u5107:
  5463  0004DA  6EF7               	movwf	tblptrh,c
  5464  0004DC  0008               	tblrd		*
  5465  0004DE  50F5               	movf	tablat,w,c
  5466  0004E0                     u5100:
  5467  0004E0  0A0D               	xorlw	13
  5468  0004E2  E002               	bz	l5043
  5469  0004E4  0100               	movlb	0	; () banked
  5470  0004E6  6B92               	clrf	_rd_buffer_put$462& (0+255),b
  5471  0004E8                     l5043:
  5472  0004E8  0100               	movlb	0	; () banked
  5473  0004EA  5192               	movf	_rd_buffer_put$462& (0+255),w,b
  5474  0004EC  13B8               	iorwf	_this_contains_crlf& (0+255),f,b
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;rd_buffer.c: 154: if(sz < 0 ) {
  5478  0004EE  AF94               	btfss	(rd_buffer_put@sz+1)& (0+255),7,b
  5479  0004F0  D00A               	goto	l283
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;rd_buffer.c: 155: sz += pbuffer->head.size;
  5483  0004F2  EE20 F004          	lfsr	2,4
  5484  0004F6  5186               	movf	rd_buffer_put@pbuffer& (0+255),w,b
  5485  0004F8  26D9               	addwf	fsr2l,f,c
  5486  0004FA  5187               	movf	(rd_buffer_put@pbuffer+1)& (0+255),w,b
  5487  0004FC  22DA               	addwfc	fsr2h,f,c
  5488  0004FE  50DE               	movf	postinc2,w,c
  5489  000500  2793               	addwf	rd_buffer_put@sz& (0+255),f,b
  5490  000502  50DD               	movf	postdec2,w,c
  5491  000504  2394               	addwfc	(rd_buffer_put@sz+1)& (0+255),f,b
  5492  000506                     l283:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;rd_buffer.c: 156: }
  5496                           ;rd_buffer.c: 157: if(sz < (pbuffer->head.size - 1))
  5497  000506  EE20 F004          	lfsr	2,4
  5498  00050A  5186               	movf	rd_buffer_put@pbuffer& (0+255),w,b
  5499  00050C  26D9               	addwf	fsr2l,f,c
  5500  00050E  5187               	movf	(rd_buffer_put@pbuffer+1)& (0+255),w,b
  5501  000510  22DA               	addwfc	fsr2h,f,c
  5502  000512  CFDE F08A          	movff	postinc2,??_rd_buffer_put
  5503  000516  CFDD F08B          	movff	postdec2,??_rd_buffer_put+1
  5504  00051A  0EFF               	movlw	255
  5505  00051C  258A               	addwf	??_rd_buffer_put& (0+255),w,b
  5506  00051E  6F8C               	movwf	(??_rd_buffer_put+2)& (0+255),b
  5507  000520  0EFF               	movlw	255
  5508  000522  218B               	addwfc	(??_rd_buffer_put+1)& (0+255),w,b
  5509  000524  6F8D               	movwf	(??_rd_buffer_put+3)& (0+255),b
  5510  000526  5194               	movf	(rd_buffer_put@sz+1)& (0+255),w,b
  5511  000528  0A80               	xorlw	128
  5512  00052A  6F8E               	movwf	(??_rd_buffer_put+4)& (0+255),b
  5513  00052C  518C               	movf	(??_rd_buffer_put+2)& (0+255),w,b
  5514  00052E  5D93               	subwf	rd_buffer_put@sz& (0+255),w,b
  5515  000530  518D               	movf	(??_rd_buffer_put+3)& (0+255),w,b
  5516  000532  0A80               	xorlw	128
  5517  000534  598E               	subwfb	(??_rd_buffer_put+4)& (0+255),w,b
  5518  000536  B0D8               	btfsc	status,0,c
  5519  000538  0012               	return	
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;rd_buffer.c: 158: {
  5523                           ;rd_buffer.c: 159: INT ind = pbuffer->head.last;
  5524  00053A  C086  FFD9         	movff	rd_buffer_put@pbuffer,fsr2l
  5525  00053E  C087  FFDA         	movff	rd_buffer_put@pbuffer+1,fsr2h
  5526  000542  CFDE F095          	movff	postinc2,rd_buffer_put@ind
  5527  000546  CFDD F096          	movff	postdec2,rd_buffer_put@ind+1
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;rd_buffer.c: 160: volatile UINT8 *mes_rec=(volatile UINT8*)&pbuffer->list[ind];
  5531  00054A  C086  F08A         	movff	rd_buffer_put@pbuffer,??_rd_buffer_put
  5532  00054E  C087  F08B         	movff	rd_buffer_put@pbuffer+1,??_rd_buffer_put+1
  5533  000552  5195               	movf	rd_buffer_put@ind& (0+255),w,b
  5534  000554  278A               	addwf	??_rd_buffer_put& (0+255),f,b
  5535  000556  5196               	movf	(rd_buffer_put@ind+1)& (0+255),w,b
  5536  000558  238B               	addwfc	(??_rd_buffer_put+1)& (0+255),f,b
  5537  00055A  0E06               	movlw	6
  5538  00055C  278A               	addwf	??_rd_buffer_put& (0+255),f,b
  5539  00055E  0E00               	movlw	0
  5540  000560  238B               	addwfc	(??_rd_buffer_put+1)& (0+255),f,b
  5541  000562  C08A  F090         	movff	??_rd_buffer_put,rd_buffer_put@mes_rec
  5542  000566  C08B  F091         	movff	??_rd_buffer_put+1,rd_buffer_put@mes_rec+1
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;rd_buffer.c: 161: (*mes_rec) = (*prec);
  5546  00056A  C088  FFF6         	movff	rd_buffer_put@prec,tblptrl
  5547  00056E  C089  FFF7         	movff	rd_buffer_put@prec+1,tblptrh
  5548  000572  6AF8               	clrf	tblptru,c
  5549  000574  C090  FFD9         	movff	rd_buffer_put@mes_rec,fsr2l
  5550  000578  C091  FFDA         	movff	rd_buffer_put@mes_rec+1,fsr2h
  5551  00057C  0E05               	movlw	(high __ramtop+-1)
  5552  00057E  64F7               	cpfsgt	tblptrh,c
  5553  000580  D003               	bra	u5147
  5554  000582  0008               	tblrd		*
  5555  000584  50F5               	movf	tablat,w,c
  5556  000586  D005               	bra	u5140
  5557  000588                     u5147:
  5558  000588  CFF6 FFE9          	movff	tblptrl,fsr0l
  5559  00058C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5560  000590  50EF               	movf	indf0,w,c
  5561  000592                     u5140:
  5562  000592  6EDF               	movwf	indf2,c
  5563                           
  5564                           ;rd_buffer.c: 162: ind++;
  5565  000594  0100               	movlb	0	; () banked
  5566  000596  4B95               	infsnz	rd_buffer_put@ind& (0+255),f,b
  5567  000598  2B96               	incf	(rd_buffer_put@ind+1)& (0+255),f,b
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;rd_buffer.c: 164: if(ind == pbuffer->head.size ) {
  5571  00059A  EE20 F004          	lfsr	2,4
  5572  00059E  5186               	movf	rd_buffer_put@pbuffer& (0+255),w,b
  5573  0005A0  26D9               	addwf	fsr2l,f,c
  5574  0005A2  5187               	movf	(rd_buffer_put@pbuffer+1)& (0+255),w,b
  5575  0005A4  22DA               	addwfc	fsr2h,f,c
  5576  0005A6  52DE               	movf	postinc2,f,c
  5577  0005A8  5196               	movf	(rd_buffer_put@ind+1)& (0+255),w,b
  5578  0005AA  18DD               	xorwf	postdec2,w,c
  5579  0005AC  C095  FFE8         	movff	rd_buffer_put@ind,wreg
  5580  0005B0  B4D8               	btfsc	status,2,c
  5581  0005B2  18DF               	xorwf	indf2,w,c
  5582  0005B4  E102               	bnz	l5061
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;rd_buffer.c: 165: ind = 0;
  5586  0005B6  6B95               	clrf	rd_buffer_put@ind& (0+255),b
  5587  0005B8  6B96               	clrf	(rd_buffer_put@ind+1)& (0+255),b
  5588  0005BA                     l5061:
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;rd_buffer.c: 166: }
  5592                           ;rd_buffer.c: 167: pbuffer->head.last = ind;
  5593  0005BA  C086  FFD9         	movff	rd_buffer_put@pbuffer,fsr2l
  5594  0005BE  C087  FFDA         	movff	rd_buffer_put@pbuffer+1,fsr2h
  5595  0005C2  C095  FFDE         	movff	rd_buffer_put@ind,postinc2
  5596  0005C6  C096  FFDD         	movff	rd_buffer_put@ind+1,postdec2
  5597                           
  5598                           ; BSR set to: 0
  5599                           
  5600                           ; BSR set to: 0
  5601  0005CA  0012               	return	
  5602  0005CC                     __end_of_rd_buffer_put:
  5603                           	opt stack 0
  5604                           tosu	equ	0xFFF
  5605                           tosh	equ	0xFFE
  5606                           tosl	equ	0xFFD
  5607                           pclath	equ	0xFFA
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodl	equ	0xFF3
  5613                           intcon	equ	0xFF2
  5614                           indf0	equ	0xFEF
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           indf1	equ	0xFE7
  5620                           fsr1h	equ	0xFE2
  5621                           fsr1l	equ	0xFE1
  5622                           indf2	equ	0xFDF
  5623                           postinc2	equ	0xFDE
  5624                           postdec2	equ	0xFDD
  5625                           fsr2h	equ	0xFDA
  5626                           fsr2l	equ	0xFD9
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function _startup *****************
  5630 ;; Defined at:
  5631 ;;		line 16 in file "src/startup/startup.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  result          1   45[BANK0 ] enum E3388
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      enum E3388
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : F/0
  5643 ;;		Unchanged: FFFFFFF0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5645 ;;      Params:         0       0       0       0       0       0       0
  5646 ;;      Locals:         0       1       0       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0
  5648 ;;      Totals:         0       1       0       0       0       0       0
  5649 ;;Total ram usage:        1 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    8
  5652 ;; This function calls:
  5653 ;;		_gpio_init
  5654 ;;		_sysclk_init
  5655 ;;		_adc_init
  5656 ;;		_uart_init
  5657 ;;		_uart_puts
  5658 ;;		_serialport_startup
  5659 ;; This function is called by:
  5660 ;;		_main
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text26
  5665  000D90                     __ptext26:
  5666                           	opt stack 0
  5667  000D90                     _startup:
  5668                           	opt stack 22
  5669                           
  5670                           ;startup.c: 17: ResultSuccess_t result = RESULT_FAIL;
  5671                           
  5672                           ; BSR set to: 0
  5673  000D90  0100               	movlb	0	; () banked
  5674  000D92  6B8D               	clrf	startup@result& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;startup.c: 18: gpio_init();
  5678  000D94  EC65  F009         	call	_gpio_init	;wreg free
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;startup.c: 19: sysclk_init();
  5682  000D98  EC9C  F009         	call	_sysclk_init	;wreg free
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;startup.c: 20: adc_init();
  5686  000D9C  EC5C  F009         	call	_adc_init	;wreg free
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;startup.c: 21: uart_init();
  5690  000DA0  EC10  F009         	call	_uart_init	;wreg free
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;startup.c: 22: events[(5)] = (PEVENT)serialport_task;
  5694  000DA4  0E0B               	movlw	high _serialport_task
  5695  000DA6  6FAB               	movwf	(_events+11)& (0+255),b	;volatile
  5696  000DA8  0EF4               	movlw	low _serialport_task
  5697  000DAA  6FAA               	movwf	(_events+10)& (0+255),b	;volatile
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;startup.c: 23: uart_puts("[1]",100);
  5701  000DAC  0E7F               	movlw	high STR_5
  5702  000DAE  6F88               	movwf	(?_uart_puts+1)& (0+255),b
  5703  000DB0  0EEF               	movlw	low STR_5
  5704  000DB2  6F87               	movwf	?_uart_puts& (0+255),b
  5705  000DB4  6B8A               	clrf	(?_uart_puts+3)& (0+255),b
  5706  000DB6  0E64               	movlw	100
  5707  000DB8  6F89               	movwf	(?_uart_puts+2)& (0+255),b
  5708  000DBA  EC3F  F007         	call	_uart_puts	;wreg free
  5709                           
  5710                           ;startup.c: 25: uart_puts("[2]",100);
  5711  000DBE  0E7F               	movlw	high STR_6
  5712  000DC0  0100               	movlb	0	; () banked
  5713  000DC2  6F88               	movwf	(?_uart_puts+1)& (0+255),b
  5714  000DC4  0EF3               	movlw	low STR_6
  5715  000DC6  6F87               	movwf	?_uart_puts& (0+255),b
  5716  000DC8  6B8A               	clrf	(?_uart_puts+3)& (0+255),b
  5717  000DCA  0E64               	movlw	100
  5718  000DCC  6F89               	movwf	(?_uart_puts+2)& (0+255),b
  5719  000DCE  EC3F  F007         	call	_uart_puts	;wreg free
  5720                           
  5721                           ;startup.c: 26: if(!serialport_startup()) break;
  5722  000DD2  ECB8  F008         	call	_serialport_startup	;wreg free
  5723  000DD6  0900               	iorlw	0
  5724  000DD8  E00C               	bz	l5485
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;startup.c: 27: uart_puts("[3]",100);
  5728  000DDA  0E7F               	movlw	high STR_7
  5729  000DDC  6F88               	movwf	(?_uart_puts+1)& (0+255),b
  5730  000DDE  0EF7               	movlw	low STR_7
  5731  000DE0  6F87               	movwf	?_uart_puts& (0+255),b
  5732  000DE2  6B8A               	clrf	(?_uart_puts+3)& (0+255),b
  5733  000DE4  0E64               	movlw	100
  5734  000DE6  6F89               	movwf	(?_uart_puts+2)& (0+255),b
  5735  000DE8  EC3F  F007         	call	_uart_puts	;wreg free
  5736                           
  5737                           ;startup.c: 32: result = RESULT_SUCCESS;
  5738  000DEC  0E01               	movlw	1
  5739  000DEE  0100               	movlb	0	; () banked
  5740  000DF0  6F8D               	movwf	startup@result& (0+255),b
  5741  000DF2                     l5485:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;startup.c: 33: }while(0);
  5745                           ;startup.c: 34: uart_puts("[4]",100);
  5746  000DF2  0E7F               	movlw	high STR_8
  5747  000DF4  6F88               	movwf	(?_uart_puts+1)& (0+255),b
  5748  000DF6  0EFB               	movlw	low STR_8
  5749  000DF8  6F87               	movwf	?_uart_puts& (0+255),b
  5750  000DFA  6B8A               	clrf	(?_uart_puts+3)& (0+255),b
  5751  000DFC  0E64               	movlw	100
  5752  000DFE  6F89               	movwf	(?_uart_puts+2)& (0+255),b
  5753  000E00  EC3F  F007         	call	_uart_puts	;wreg free
  5754                           
  5755                           ;startup.c: 35: return result;
  5756  000E04  0100               	movlb	0	; () banked
  5757  000E06  518D               	movf	startup@result& (0+255),w,b
  5758                           
  5759                           ; BSR set to: 0
  5760  000E08  0012               	return	
  5761  000E0A                     __end_of_startup:
  5762                           	opt stack 0
  5763                           tosu	equ	0xFFF
  5764                           tosh	equ	0xFFE
  5765                           tosl	equ	0xFFD
  5766                           pclath	equ	0xFFA
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodl	equ	0xFF3
  5772                           intcon	equ	0xFF2
  5773                           indf0	equ	0xFEF
  5774                           postinc0	equ	0xFEE
  5775                           fsr0h	equ	0xFEA
  5776                           fsr0l	equ	0xFE9
  5777                           wreg	equ	0xFE8
  5778                           indf1	equ	0xFE7
  5779                           fsr1h	equ	0xFE2
  5780                           fsr1l	equ	0xFE1
  5781                           indf2	equ	0xFDF
  5782                           postinc2	equ	0xFDE
  5783                           postdec2	equ	0xFDD
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function _sysclk_init *****************
  5789 ;; Defined at:
  5790 ;;		line 7 in file "src/drivers/sysclk.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;		None               void
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : F/0
  5801 ;;		On exit  : F/0
  5802 ;;		Unchanged: FFFFFFF0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5804 ;;      Params:         0       0       0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    6
  5811 ;; This function calls:
  5812 ;;		_sysclk_setup_intosc
  5813 ;; This function is called by:
  5814 ;;		_startup
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text27
  5819  001338                     __ptext27:
  5820                           	opt stack 0
  5821  001338                     _sysclk_init:
  5822                           	opt stack 23
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;sysclk.c: 8: sysclk_setup_intosc(INTOSC_4MHZ);
  5826                           
  5827                           ; BSR set to: 0
  5828  001338  0E05               	movlw	5
  5829  00133A  EF77  F009         	goto	_sysclk_setup_intosc
  5830  00133E                     __end_of_sysclk_init:
  5831                           	opt stack 0
  5832                           tosu	equ	0xFFF
  5833                           tosh	equ	0xFFE
  5834                           tosl	equ	0xFFD
  5835                           pclath	equ	0xFFA
  5836                           tblptru	equ	0xFF8
  5837                           tblptrh	equ	0xFF7
  5838                           tblptrl	equ	0xFF6
  5839                           tablat	equ	0xFF5
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           indf0	equ	0xFEF
  5843                           postinc0	equ	0xFEE
  5844                           fsr0h	equ	0xFEA
  5845                           fsr0l	equ	0xFE9
  5846                           wreg	equ	0xFE8
  5847                           indf1	equ	0xFE7
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           postinc2	equ	0xFDE
  5852                           postdec2	equ	0xFDD
  5853                           fsr2h	equ	0xFDA
  5854                           fsr2l	equ	0xFD9
  5855                           status	equ	0xFD8
  5856                           
  5857 ;; *************** function _sysclk_setup_intosc *****************
  5858 ;; Defined at:
  5859 ;;		line 12 in file "src/drivers/sysclk.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  frequency       1    wreg     enum E1
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  frequency       1   38[BANK0 ] enum E1
  5864 ;; Return value:  Size  Location     Type
  5865 ;;		None               void
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : F/0
  5870 ;;		On exit  : F/0
  5871 ;;		Unchanged: FFFFFFF0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5873 ;;      Params:         0       0       0       0       0       0       0
  5874 ;;      Locals:         0       1       0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0
  5876 ;;      Totals:         0       1       0       0       0       0       0
  5877 ;;Total ram usage:        1 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    5
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_sysclk_init
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text28
  5888  0012EE                     __ptext28:
  5889                           	opt stack 0
  5890  0012EE                     _sysclk_setup_intosc:
  5891                           	opt stack 23
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;sysclk_setup_intosc@frequency stored from wreg
  5895  0012EE  CFE8 F086          	movff	wreg,sysclk_setup_intosc@frequency
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;sysclk.c: 13: OSCCON &= ~(0x07<<4);
  5899  0012F2  0E8F               	movlw	143
  5900  0012F4  16D3               	andwf	4051,f,c	;volatile
  5901                           
  5902                           ;sysclk.c: 14: OSCCON |= frequency<<4;
  5903  0012F6  3986               	swapf	sysclk_setup_intosc@frequency& (0+255),w,b
  5904  0012F8  0BF0               	andlw	240
  5905  0012FA  12D3               	iorwf	4051,f,c	;volatile
  5906                           
  5907                           ; BSR set to: 0
  5908  0012FC  0012               	return	
  5909  0012FE                     __end_of_sysclk_setup_intosc:
  5910                           	opt stack 0
  5911                           tosu	equ	0xFFF
  5912                           tosh	equ	0xFFE
  5913                           tosl	equ	0xFFD
  5914                           pclath	equ	0xFFA
  5915                           tblptru	equ	0xFF8
  5916                           tblptrh	equ	0xFF7
  5917                           tblptrl	equ	0xFF6
  5918                           tablat	equ	0xFF5
  5919                           prodl	equ	0xFF3
  5920                           intcon	equ	0xFF2
  5921                           indf0	equ	0xFEF
  5922                           postinc0	equ	0xFEE
  5923                           fsr0h	equ	0xFEA
  5924                           fsr0l	equ	0xFE9
  5925                           wreg	equ	0xFE8
  5926                           indf1	equ	0xFE7
  5927                           fsr1h	equ	0xFE2
  5928                           fsr1l	equ	0xFE1
  5929                           indf2	equ	0xFDF
  5930                           postinc2	equ	0xFDE
  5931                           postdec2	equ	0xFDD
  5932                           fsr2h	equ	0xFDA
  5933                           fsr2l	equ	0xFD9
  5934                           status	equ	0xFD8
  5935                           
  5936 ;; *************** function _uart_init *****************
  5937 ;; Defined at:
  5938 ;;		line 5 in file "src/drivers/uart.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;		None               void
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : F/0
  5949 ;;		On exit  : F/0
  5950 ;;		Unchanged: FFFFFFF0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5952 ;;      Params:         0       0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    6
  5959 ;; This function calls:
  5960 ;;		_uart_set_baudrate
  5961 ;; This function is called by:
  5962 ;;		_startup
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text29
  5967  001220                     __ptext29:
  5968                           	opt stack 0
  5969  001220                     _uart_init:
  5970                           	opt stack 23
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;uart.c: 6: TXSTA = 0b00100110;
  5974                           
  5975                           ; BSR set to: 0
  5976  001220  0E26               	movlw	38
  5977  001222  6EAC               	movwf	4012,c	;volatile
  5978                           
  5979                           ;uart.c: 7: RCSTA = 0b10010000;
  5980  001224  0E90               	movlw	144
  5981  001226  6EAB               	movwf	4011,c	;volatile
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;uart.c: 8: BAUDCTL = 0b00000000;
  5985  001228  6AB8               	clrf	4024,c	;volatile
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;uart.c: 9: BAUDCON = 0b00000000;
  5989  00122A  6AB8               	clrf	4024,c	;volatile
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;uart.c: 10: uart_set_baudrate(19200);
  5993  00122C  6B86               	clrf	?_uart_set_baudrate& (0+255),b
  5994  00122E  0E4B               	movlw	75
  5995  001230  6F87               	movwf	(?_uart_set_baudrate+1)& (0+255),b
  5996  001232  0E00               	movlw	0
  5997  001234  6B88               	clrf	(?_uart_set_baudrate+2)& (0+255),b
  5998  001236  EC9F  F009         	call	_uart_set_baudrate	;wreg free
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;uart.c: 12: PIE1bits.RCIE=1;
  6002  00123A  8A9D               	bsf	3997,5,c	;volatile
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;uart.c: 13: PIR1bits.RCIF=1;
  6006  00123C  8A9E               	bsf	3998,5,c	;volatile
  6007                           
  6008                           ; BSR set to: 0
  6009  00123E  0012               	return	
  6010  001240                     __end_of_uart_init:
  6011                           	opt stack 0
  6012                           tosu	equ	0xFFF
  6013                           tosh	equ	0xFFE
  6014                           tosl	equ	0xFFD
  6015                           pclath	equ	0xFFA
  6016                           tblptru	equ	0xFF8
  6017                           tblptrh	equ	0xFF7
  6018                           tblptrl	equ	0xFF6
  6019                           tablat	equ	0xFF5
  6020                           prodl	equ	0xFF3
  6021                           intcon	equ	0xFF2
  6022                           indf0	equ	0xFEF
  6023                           postinc0	equ	0xFEE
  6024                           fsr0h	equ	0xFEA
  6025                           fsr0l	equ	0xFE9
  6026                           wreg	equ	0xFE8
  6027                           indf1	equ	0xFE7
  6028                           fsr1h	equ	0xFE2
  6029                           fsr1l	equ	0xFE1
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           postdec2	equ	0xFDD
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _uart_set_baudrate *****************
  6038 ;; Defined at:
  6039 ;;		line 17 in file "src/drivers/uart.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  baudrate        3   38[BANK0 ] unsigned um
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;		None               void
  6046 ;; Registers used:
  6047 ;;		wreg, status,2
  6048 ;; Tracked objects:
  6049 ;;		On entry : F/0
  6050 ;;		On exit  : F/0
  6051 ;;		Unchanged: FFFFFFF0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         0       3       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0
  6056 ;;      Totals:         0       3       0       0       0       0       0
  6057 ;;Total ram usage:        3 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    5
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_uart_init
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text30
  6068  00133E                     __ptext30:
  6069                           	opt stack 0
  6070  00133E                     _uart_set_baudrate:
  6071                           	opt stack 23
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;uart.c: 19: SPBRG = 12;
  6075                           
  6076                           ; BSR set to: 0
  6077  00133E  0E0C               	movlw	12
  6078  001340  6EAF               	movwf	4015,c	;volatile
  6079                           
  6080                           ; BSR set to: 0
  6081  001342  0C0C               	retlw	12
  6082  001344                     __end_of_uart_set_baudrate:
  6083                           	opt stack 0
  6084                           tosu	equ	0xFFF
  6085                           tosh	equ	0xFFE
  6086                           tosl	equ	0xFFD
  6087                           pclath	equ	0xFFA
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodl	equ	0xFF3
  6093                           intcon	equ	0xFF2
  6094                           indf0	equ	0xFEF
  6095                           postinc0	equ	0xFEE
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           indf1	equ	0xFE7
  6100                           fsr1h	equ	0xFE2
  6101                           fsr1l	equ	0xFE1
  6102                           indf2	equ	0xFDF
  6103                           postinc2	equ	0xFDE
  6104                           postdec2	equ	0xFDD
  6105                           fsr2h	equ	0xFDA
  6106                           fsr2l	equ	0xFD9
  6107                           status	equ	0xFD8
  6108                           
  6109 ;; *************** function _uart_puts *****************
  6110 ;; Defined at:
  6111 ;;		line 31 in file "src/drivers/uart.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  pstr            2   39[BANK0 ] PTR const unsigned char 
  6114 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  6115 ;;		 -> serialport_buffer(100), 
  6116 ;;  size            2   41[BANK0 ] int 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;		None               void
  6121 ;; Registers used:
  6122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : F/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: FFFFFFF0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6128 ;;      Params:         0       4       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0
  6131 ;;      Totals:         0       4       0       0       0       0       0
  6132 ;;Total ram usage:        4 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    7
  6135 ;; This function calls:
  6136 ;;		_uart_putc
  6137 ;; This function is called by:
  6138 ;;		_serialport_task
  6139 ;;		_startup
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text31
  6144  000E7E                     __ptext31:
  6145                           	opt stack 0
  6146  000E7E                     _uart_puts:
  6147                           	opt stack 22
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;uart.c: 32: while(size-- && *pstr)
  6151                           
  6152                           ; BSR set to: 0
  6153  000E7E  D014               	goto	l4963
  6154  000E80                     l4959:
  6155                           
  6156                           ;uart.c: 33: {
  6157                           ;uart.c: 34: uart_putc(*pstr);
  6158  000E80  0100               	movlb	0	; () banked
  6159  000E82  5187               	movf	uart_puts@pstr& (0+255),w,b
  6160  000E84  6EF6               	movwf	tblptrl,c
  6161  000E86  6EE9               	movwf	fsr0l,c
  6162  000E88  0E05               	movlw	(high __ramtop+-1)
  6163  000E8A  6EEA               	movwf	fsr0h,c
  6164  000E8C  5188               	movf	(uart_puts@pstr+1)& (0+255),w,b
  6165  000E8E  64EA               	cpfsgt	fsr0h,c
  6166  000E90  D003               	bra	u4967
  6167  000E92  6EEA               	movwf	fsr0h,c
  6168  000E94  50EF               	movf	indf0,w,c
  6169  000E96  D003               	bra	u4960
  6170  000E98                     u4967:
  6171  000E98  6EF7               	movwf	tblptrh,c
  6172  000E9A  0008               	tblrd		*
  6173  000E9C  50F5               	movf	tablat,w,c
  6174  000E9E                     u4960:
  6175  000E9E  EC53  F009         	call	_uart_putc
  6176                           
  6177                           ;uart.c: 35: pstr++;
  6178  000EA2  0100               	movlb	0	; () banked
  6179  000EA4  4B87               	infsnz	uart_puts@pstr& (0+255),f,b
  6180  000EA6  2B88               	incf	(uart_puts@pstr+1)& (0+255),f,b
  6181  000EA8                     l4963:
  6182                           
  6183                           ; BSR set to: 0
  6184  000EA8  0789               	decf	uart_puts@size& (0+255),f,b
  6185  000EAA  A0D8               	btfss	status,0,c
  6186  000EAC  078A               	decf	(uart_puts@size+1)& (0+255),f,b
  6187  000EAE  0100               	movlb	0	; () banked
  6188  000EB0  2989               	incf	uart_puts@size& (0+255),w,b
  6189  000EB2  B4D8               	btfsc	status,2,c
  6190  000EB4  298A               	incf	(uart_puts@size+1)& (0+255),w,b
  6191  000EB6  B4D8               	btfsc	status,2,c
  6192  000EB8  0012               	return	
  6193                           
  6194                           ; BSR set to: 0
  6195  000EBA  5187               	movf	uart_puts@pstr& (0+255),w,b
  6196  000EBC  6EF6               	movwf	tblptrl,c
  6197  000EBE  6EE9               	movwf	fsr0l,c
  6198  000EC0  0E05               	movlw	(high __ramtop+-1)
  6199  000EC2  6EEA               	movwf	fsr0h,c
  6200  000EC4  5188               	movf	(uart_puts@pstr+1)& (0+255),w,b
  6201  000EC6  64EA               	cpfsgt	fsr0h,c
  6202  000EC8  D003               	bra	u4987
  6203  000ECA  6EEA               	movwf	fsr0h,c
  6204  000ECC  50EF               	movf	indf0,w,c
  6205  000ECE  D003               	bra	u4980
  6206  000ED0                     u4987:
  6207  000ED0  6EF7               	movwf	tblptrh,c
  6208  000ED2  0008               	tblrd		*
  6209  000ED4  50F5               	movf	tablat,w,c
  6210  000ED6                     u4980:
  6211  000ED6  0900               	iorlw	0
  6212  000ED8  B4D8               	btfsc	status,2,c
  6213  000EDA  0012               	return	
  6214  000EDC  D7D1               	goto	l4959
  6215  000EDE                     __end_of_uart_puts:
  6216                           	opt stack 0
  6217                           tosu	equ	0xFFF
  6218                           tosh	equ	0xFFE
  6219                           tosl	equ	0xFFD
  6220                           pclath	equ	0xFFA
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodl	equ	0xFF3
  6226                           intcon	equ	0xFF2
  6227                           indf0	equ	0xFEF
  6228                           postinc0	equ	0xFEE
  6229                           fsr0h	equ	0xFEA
  6230                           fsr0l	equ	0xFE9
  6231                           wreg	equ	0xFE8
  6232                           indf1	equ	0xFE7
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _uart_putc *****************
  6243 ;; Defined at:
  6244 ;;		line 40 in file "src/drivers/uart.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  byte            1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  byte            1   38[BANK0 ] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: FFFFFFFF/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:         0       0       0       0       0       0       0
  6259 ;;      Locals:         0       1       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0
  6261 ;;      Totals:         0       1       0       0       0       0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    6
  6265 ;; This function calls:
  6266 ;;		_uart_byte_sent
  6267 ;; This function is called by:
  6268 ;;		_uart_puts
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text32
  6273  0012A6                     __ptext32:
  6274                           	opt stack 0
  6275  0012A6                     _uart_putc:
  6276                           	opt stack 22
  6277                           
  6278                           ;uart_putc@byte stored from wreg
  6279  0012A6  CFE8 F086          	movff	wreg,uart_putc@byte
  6280  0012AA                     l4969:
  6281  0012AA  EC94  F009         	call	_uart_byte_sent	;wreg free
  6282  0012AE  0900               	iorlw	0
  6283  0012B0  E0FC               	bz	l4969
  6284                           
  6285                           ;uart.c: 42: TXREG = byte;
  6286  0012B2  C086  FFAD         	movff	uart_putc@byte,4013	;volatile
  6287  0012B6  0012               	return	
  6288  0012B8                     __end_of_uart_putc:
  6289                           	opt stack 0
  6290                           tosu	equ	0xFFF
  6291                           tosh	equ	0xFFE
  6292                           tosl	equ	0xFFD
  6293                           pclath	equ	0xFFA
  6294                           tblptru	equ	0xFF8
  6295                           tblptrh	equ	0xFF7
  6296                           tblptrl	equ	0xFF6
  6297                           tablat	equ	0xFF5
  6298                           prodl	equ	0xFF3
  6299                           intcon	equ	0xFF2
  6300                           indf0	equ	0xFEF
  6301                           postinc0	equ	0xFEE
  6302                           fsr0h	equ	0xFEA
  6303                           fsr0l	equ	0xFE9
  6304                           wreg	equ	0xFE8
  6305                           indf1	equ	0xFE7
  6306                           fsr1h	equ	0xFE2
  6307                           fsr1l	equ	0xFE1
  6308                           indf2	equ	0xFDF
  6309                           postinc2	equ	0xFDE
  6310                           postdec2	equ	0xFDD
  6311                           fsr2h	equ	0xFDA
  6312                           fsr2l	equ	0xFD9
  6313                           status	equ	0xFD8
  6314                           
  6315 ;; *************** function _uart_byte_sent *****************
  6316 ;; Defined at:
  6317 ;;		line 46 in file "src/drivers/uart.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: FFFFFFFF/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6331 ;;      Params:         0       0       0       0       0       0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0
  6334 ;;      Totals:         0       0       0       0       0       0       0
  6335 ;;Total ram usage:        0 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    5
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_uart_putc
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text33
  6346  001328                     __ptext33:
  6347                           	opt stack 0
  6348  001328                     _uart_byte_sent:
  6349                           	opt stack 22
  6350                           
  6351                           ;uart.c: 47: return TXIF;
  6352  001328  0E00               	movlw	0
  6353  00132A  B89E               	btfsc	3998,4,c	;volatile
  6354  00132C  0E01               	movlw	1
  6355  00132E  0012               	return	
  6356  001330                     __end_of_uart_byte_sent:
  6357                           	opt stack 0
  6358                           tosu	equ	0xFFF
  6359                           tosh	equ	0xFFE
  6360                           tosl	equ	0xFFD
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodl	equ	0xFF3
  6367                           intcon	equ	0xFF2
  6368                           indf0	equ	0xFEF
  6369                           postinc0	equ	0xFEE
  6370                           fsr0h	equ	0xFEA
  6371                           fsr0l	equ	0xFE9
  6372                           wreg	equ	0xFE8
  6373                           indf1	equ	0xFE7
  6374                           fsr1h	equ	0xFE2
  6375                           fsr1l	equ	0xFE1
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function _adc_init *****************
  6384 ;; Defined at:
  6385 ;;		line 5 in file "src/drivers/adc.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;		None               void
  6392 ;; Registers used:
  6393 ;;		wreg, status,2
  6394 ;; Tracked objects:
  6395 ;;		On entry : F/0
  6396 ;;		On exit  : F/0
  6397 ;;		Unchanged: FFFFFFF0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6399 ;;      Params:         0       0       0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    5
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_startup
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text34
  6414  0012B8                     __ptext34:
  6415                           	opt stack 0
  6416  0012B8                     _adc_init:
  6417                           	opt stack 24
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;adc.c: 6: ADCON0 = 0b00000001;
  6421  0012B8  0E01               	movlw	1
  6422  0012BA  6EC2               	movwf	4034,c	;volatile
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;adc.c: 7: ADCON1 = 0b00000000;
  6426  0012BC  6AC1               	clrf	4033,c	;volatile
  6427                           
  6428                           ;adc.c: 8: ADCON2 = 0b10010000;
  6429  0012BE  0E90               	movlw	144
  6430  0012C0  6EC0               	movwf	4032,c	;volatile
  6431                           
  6432                           ;adc.c: 9: ANSEL = 0b01100011;
  6433  0012C2  0E63               	movlw	99
  6434  0012C4  6E7E               	movwf	3966,c	;volatile
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;adc.c: 10: ANSELH = 0;
  6438  0012C6  6A7F               	clrf	3967,c	;volatile
  6439                           
  6440                           ; BSR set to: 0
  6441  0012C8  0012               	return	
  6442  0012CA                     __end_of_adc_init:
  6443                           	opt stack 0
  6444                           tosu	equ	0xFFF
  6445                           tosh	equ	0xFFE
  6446                           tosl	equ	0xFFD
  6447                           pclath	equ	0xFFA
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           prodl	equ	0xFF3
  6453                           intcon	equ	0xFF2
  6454                           indf0	equ	0xFEF
  6455                           postinc0	equ	0xFEE
  6456                           fsr0h	equ	0xFEA
  6457                           fsr0l	equ	0xFE9
  6458                           wreg	equ	0xFE8
  6459                           indf1	equ	0xFE7
  6460                           fsr1h	equ	0xFE2
  6461                           fsr1l	equ	0xFE1
  6462                           indf2	equ	0xFDF
  6463                           postinc2	equ	0xFDE
  6464                           postdec2	equ	0xFDD
  6465                           fsr2h	equ	0xFDA
  6466                           fsr2l	equ	0xFD9
  6467                           status	equ	0xFD8
  6468                           
  6469 ;; *************** function _gpio_init *****************
  6470 ;; Defined at:
  6471 ;;		line 4 in file "src/drivers/gpio.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;		None               void
  6478 ;; Registers used:
  6479 ;;		wreg, status,2
  6480 ;; Tracked objects:
  6481 ;;		On entry : F/0
  6482 ;;		On exit  : F/0
  6483 ;;		Unchanged: FFFFFFF0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6485 ;;      Params:         0       0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    5
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_startup
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text35
  6500  0012CA                     __ptext35:
  6501                           	opt stack 0
  6502  0012CA                     _gpio_init:
  6503                           	opt stack 24
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;gpio.c: 7: TRISA=0xff;
  6507                           
  6508                           ; BSR set to: 0
  6509  0012CA  6892               	setf	3986,c	;volatile
  6510                           
  6511                           ;gpio.c: 8: TRISB=0xff;
  6512  0012CC  6893               	setf	3987,c	;volatile
  6513                           
  6514                           ;gpio.c: 9: ANSELH=0;
  6515  0012CE  6A7F               	clrf	3967,c	;volatile
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;gpio.c: 10: TRISC=0xc1;
  6519  0012D0  0EC1               	movlw	193
  6520  0012D2  6E94               	movwf	3988,c	;volatile
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;gpio.c: 11: TRISD=0x00;
  6524  0012D4  6A95               	clrf	3989,c	;volatile
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;gpio.c: 12: LATC=0;
  6528  0012D6  6A8B               	clrf	3979,c	;volatile
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;gpio.c: 13: LATD=0;
  6532  0012D8  6A8C               	clrf	3980,c	;volatile
  6533                           
  6534                           ; BSR set to: 0
  6535  0012DA  0012               	return	
  6536  0012DC                     __end_of_gpio_init:
  6537                           	opt stack 0
  6538                           tosu	equ	0xFFF
  6539                           tosh	equ	0xFFE
  6540                           tosl	equ	0xFFD
  6541                           pclath	equ	0xFFA
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           indf0	equ	0xFEF
  6549                           postinc0	equ	0xFEE
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           fsr1h	equ	0xFE2
  6555                           fsr1l	equ	0xFE1
  6556                           indf2	equ	0xFDF
  6557                           postinc2	equ	0xFDE
  6558                           postdec2	equ	0xFDD
  6559                           fsr2h	equ	0xFDA
  6560                           fsr2l	equ	0xFD9
  6561                           status	equ	0xFD8
  6562                           
  6563 ;; *************** function _serialport_startup *****************
  6564 ;; Defined at:
  6565 ;;		line 16 in file "src/modules/serialport.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  result          1   44[BANK0 ] enum E3388
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      enum E3388
  6572 ;; Registers used:
  6573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : F/0
  6577 ;;		Unchanged: FFFFFFF0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6579 ;;      Params:         0       0       0       0       0       0       0
  6580 ;;      Locals:         0       1       0       0       0       0       0
  6581 ;;      Temps:          0       1       0       0       0       0       0
  6582 ;;      Totals:         0       2       0       0       0       0       0
  6583 ;;Total ram usage:        2 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    6
  6586 ;; This function calls:
  6587 ;;		_rd_buffer_init
  6588 ;; This function is called by:
  6589 ;;		_startup
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text36
  6594  001170                     __ptext36:
  6595                           	opt stack 0
  6596  001170                     _serialport_startup:
  6597                           	opt stack 23
  6598                           
  6599                           ;serialport.c: 18: result = (ResultSuccess_t) rd_buffer_init(&g_rx_buffer, ((100)))
  6600                           ;serialport.c: 19: | (ResultSuccess_t) rd_buffer_init(&g_tx_buffer, ((100)));
  6601                           
  6602                           ; BSR set to: 0
  6603  001170  0E01               	movlw	high _g_tx_buffer
  6604  001172  0100               	movlb	0	; () banked
  6605  001174  6F87               	movwf	(?_rd_buffer_init+1)& (0+255),b
  6606  001176  0E6B               	movlw	low _g_tx_buffer
  6607  001178  6F86               	movwf	?_rd_buffer_init& (0+255),b
  6608  00117A  6B89               	clrf	(?_rd_buffer_init+3)& (0+255),b
  6609  00117C  0E64               	movlw	100
  6610  00117E  6F88               	movwf	(?_rd_buffer_init+2)& (0+255),b
  6611  001180  EC60  F008         	call	_rd_buffer_init	;wreg free
  6612  001184  6F8B               	movwf	??_serialport_startup& (0+255),b
  6613  001186  0E01               	movlw	high _g_rx_buffer
  6614  001188  0100               	movlb	0	; () banked
  6615  00118A  6F87               	movwf	(?_rd_buffer_init+1)& (0+255),b
  6616  00118C  0E00               	movlw	low _g_rx_buffer
  6617  00118E  6F86               	movwf	?_rd_buffer_init& (0+255),b
  6618  001190  6B89               	clrf	(?_rd_buffer_init+3)& (0+255),b
  6619  001192  0E64               	movlw	100
  6620  001194  6F88               	movwf	(?_rd_buffer_init+2)& (0+255),b
  6621  001196  EC60  F008         	call	_rd_buffer_init	;wreg free
  6622  00119A  118B               	iorwf	??_serialport_startup& (0+255),w,b
  6623  00119C  6F8C               	movwf	serialport_startup@result& (0+255),b
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;serialport.c: 20: return result;
  6627  00119E  518C               	movf	serialport_startup@result& (0+255),w,b
  6628                           
  6629                           ; BSR set to: 0
  6630  0011A0  0012               	return	
  6631  0011A2                     __end_of_serialport_startup:
  6632                           	opt stack 0
  6633                           tosu	equ	0xFFF
  6634                           tosh	equ	0xFFE
  6635                           tosl	equ	0xFFD
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodl	equ	0xFF3
  6642                           intcon	equ	0xFF2
  6643                           indf0	equ	0xFEF
  6644                           postinc0	equ	0xFEE
  6645                           fsr0h	equ	0xFEA
  6646                           fsr0l	equ	0xFE9
  6647                           wreg	equ	0xFE8
  6648                           indf1	equ	0xFE7
  6649                           fsr1h	equ	0xFE2
  6650                           fsr1l	equ	0xFE1
  6651                           indf2	equ	0xFDF
  6652                           postinc2	equ	0xFDE
  6653                           postdec2	equ	0xFDD
  6654                           fsr2h	equ	0xFDA
  6655                           fsr2l	equ	0xFD9
  6656                           status	equ	0xFD8
  6657                           
  6658 ;; *************** function _rd_buffer_init *****************
  6659 ;; Defined at:
  6660 ;;		line 16 in file "src/modules/rd_buffer.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  pbuffer         2   38[BANK0 ] PTR struct .
  6663 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  6664 ;;  size            2   40[BANK0 ] int 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  result          1   42[BANK0 ] unsigned char 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      unsigned char 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : F/0
  6673 ;;		On exit  : F/0
  6674 ;;		Unchanged: FFFFFFF0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6676 ;;      Params:         0       4       0       0       0       0       0
  6677 ;;      Locals:         0       1       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0
  6679 ;;      Totals:         0       5       0       0       0       0       0
  6680 ;;Total ram usage:        5 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    5
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_serialport_startup
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text37
  6691  0010C0                     __ptext37:
  6692                           	opt stack 0
  6693  0010C0                     _rd_buffer_init:
  6694                           	opt stack 23
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;rd_buffer.c: 17: CHAR result = FALSE;
  6698                           
  6699                           ; BSR set to: 0
  6700  0010C0  6B8A               	clrf	rd_buffer_init@result& (0+255),b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;rd_buffer.c: 18: if(pbuffer != (0) ){
  6704  0010C2  5187               	movf	(rd_buffer_init@pbuffer+1)& (0+255),w,b
  6705  0010C4  1186               	iorwf	rd_buffer_init@pbuffer& (0+255),w,b
  6706  0010C6  E01A               	bz	l2631
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;rd_buffer.c: 19: pbuffer->head.first = 0;
  6710  0010C8  EE20 F002          	lfsr	2,2
  6711  0010CC  5186               	movf	rd_buffer_init@pbuffer& (0+255),w,b
  6712  0010CE  26D9               	addwf	fsr2l,f,c
  6713  0010D0  5187               	movf	(rd_buffer_init@pbuffer+1)& (0+255),w,b
  6714  0010D2  22DA               	addwfc	fsr2h,f,c
  6715  0010D4  6ADE               	clrf	postinc2,c
  6716  0010D6  6ADD               	clrf	postdec2,c
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;rd_buffer.c: 20: pbuffer->head.last = 0;
  6720  0010D8  C086  FFD9         	movff	rd_buffer_init@pbuffer,fsr2l
  6721  0010DC  C087  FFDA         	movff	rd_buffer_init@pbuffer+1,fsr2h
  6722  0010E0  6ADE               	clrf	postinc2,c
  6723  0010E2  6ADD               	clrf	postdec2,c
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;rd_buffer.c: 22: pbuffer->head.size = size;
  6727  0010E4  EE20 F004          	lfsr	2,4
  6728  0010E8  5186               	movf	rd_buffer_init@pbuffer& (0+255),w,b
  6729  0010EA  26D9               	addwf	fsr2l,f,c
  6730  0010EC  5187               	movf	(rd_buffer_init@pbuffer+1)& (0+255),w,b
  6731  0010EE  22DA               	addwfc	fsr2h,f,c
  6732  0010F0  C088  FFDE         	movff	rd_buffer_init@size,postinc2
  6733  0010F4  C089  FFDD         	movff	rd_buffer_init@size+1,postdec2
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;rd_buffer.c: 23: result = TRUE;
  6737  0010F8  0E01               	movlw	1
  6738  0010FA  6F8A               	movwf	rd_buffer_init@result& (0+255),b
  6739  0010FC                     l2631:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;rd_buffer.c: 24: }
  6743                           ;rd_buffer.c: 25: return result;
  6744  0010FC  518A               	movf	rd_buffer_init@result& (0+255),w,b
  6745                           
  6746                           ; BSR set to: 0
  6747  0010FE  0012               	return	
  6748  001100                     __end_of_rd_buffer_init:
  6749                           	opt stack 0
  6750                           tosu	equ	0xFFF
  6751                           tosh	equ	0xFFE
  6752                           tosl	equ	0xFFD
  6753                           pclath	equ	0xFFA
  6754                           tblptru	equ	0xFF8
  6755                           tblptrh	equ	0xFF7
  6756                           tblptrl	equ	0xFF6
  6757                           tablat	equ	0xFF5
  6758                           prodl	equ	0xFF3
  6759                           intcon	equ	0xFF2
  6760                           indf0	equ	0xFEF
  6761                           postinc0	equ	0xFEE
  6762                           fsr0h	equ	0xFEA
  6763                           fsr0l	equ	0xFE9
  6764                           wreg	equ	0xFE8
  6765                           indf1	equ	0xFE7
  6766                           fsr1h	equ	0xFE2
  6767                           fsr1l	equ	0xFE1
  6768                           indf2	equ	0xFDF
  6769                           postinc2	equ	0xFDE
  6770                           postdec2	equ	0xFDD
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function ___wmul *****************
  6776 ;; Defined at:
  6777 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.12\sources\wmul.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  multiplier      2   38[BANK0 ] unsigned int 
  6780 ;;  multiplicand    2   40[BANK0 ] unsigned int 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  product         2   42[BANK0 ] unsigned int 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  2   38[BANK0 ] unsigned int 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : F/0
  6789 ;;		On exit  : F/0
  6790 ;;		Unchanged: FFFFFFF0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6792 ;;      Params:         0       4       0       0       0       0       0
  6793 ;;      Locals:         0       2       0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0
  6795 ;;      Totals:         0       6       0       0       0       0       0
  6796 ;;Total ram usage:        6 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    5
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_this_parse_command
  6803 ;;		_this_parse_parameter
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text38
  6808  0011D2                     __ptext38:
  6809                           	opt stack 0
  6810  0011D2                     ___wmul:
  6811                           	opt stack 22
  6812                           
  6813                           ; BSR set to: 0
  6814                           
  6815                           ; BSR set to: 0
  6816  0011D2  6B8A               	clrf	___wmul@product& (0+255),b
  6817  0011D4  6B8B               	clrf	(___wmul@product+1)& (0+255),b
  6818  0011D6                     l1451:
  6819                           
  6820                           ; BSR set to: 0
  6821  0011D6  A186               	btfss	___wmul@multiplier& (0+255),0,b
  6822  0011D8  D004               	goto	l5511
  6823                           
  6824                           ; BSR set to: 0
  6825  0011DA  5188               	movf	___wmul@multiplicand& (0+255),w,b
  6826  0011DC  278A               	addwf	___wmul@product& (0+255),f,b
  6827  0011DE  5189               	movf	(___wmul@multiplicand+1)& (0+255),w,b
  6828  0011E0  238B               	addwfc	(___wmul@product+1)& (0+255),f,b
  6829  0011E2                     l5511:
  6830                           
  6831                           ; BSR set to: 0
  6832  0011E2  90D8               	bcf	status,0,c
  6833  0011E4  3788               	rlcf	___wmul@multiplicand& (0+255),f,b
  6834  0011E6  3789               	rlcf	(___wmul@multiplicand+1)& (0+255),f,b
  6835                           
  6836                           ; BSR set to: 0
  6837  0011E8  90D8               	bcf	status,0,c
  6838  0011EA  3387               	rrcf	(___wmul@multiplier+1)& (0+255),f,b
  6839  0011EC  3386               	rrcf	___wmul@multiplier& (0+255),f,b
  6840  0011EE  5187               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6841  0011F0  1186               	iorwf	___wmul@multiplier& (0+255),w,b
  6842  0011F2  E1F1               	bnz	l1451
  6843                           
  6844                           ; BSR set to: 0
  6845  0011F4  C08A  F086         	movff	___wmul@product,?___wmul
  6846  0011F8  C08B  F087         	movff	___wmul@product+1,?___wmul+1
  6847                           
  6848                           ; BSR set to: 0
  6849  0011FC  0012               	return	
  6850  0011FE                     __end_of___wmul:
  6851                           	opt stack 0
  6852                           tosu	equ	0xFFF
  6853                           tosh	equ	0xFFE
  6854                           tosl	equ	0xFFD
  6855                           pclath	equ	0xFFA
  6856                           tblptru	equ	0xFF8
  6857                           tblptrh	equ	0xFF7
  6858                           tblptrl	equ	0xFF6
  6859                           tablat	equ	0xFF5
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           indf0	equ	0xFEF
  6863                           postinc0	equ	0xFEE
  6864                           fsr0h	equ	0xFEA
  6865                           fsr0l	equ	0xFE9
  6866                           wreg	equ	0xFE8
  6867                           indf1	equ	0xFE7
  6868                           fsr1h	equ	0xFE2
  6869                           fsr1l	equ	0xFE1
  6870                           indf2	equ	0xFDF
  6871                           postinc2	equ	0xFDE
  6872                           postdec2	equ	0xFDD
  6873                           fsr2h	equ	0xFDA
  6874                           fsr2l	equ	0xFD9
  6875                           status	equ	0xFD8
  6876                           
  6877 ;; *************** function _isr_high *****************
  6878 ;; Defined at:
  6879 ;;		line 14 in file "src/interrupts.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;		None
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;		None               void
  6886 ;; Registers used:
  6887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: FFFFFFF0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6893 ;;      Params:         0       0       0       0       0       0       0
  6894 ;;      Locals:         0       0       0       0       0       0       0
  6895 ;;      Temps:          8       0       0       0       0       0       0
  6896 ;;      Totals:         8       0       0       0       0       0       0
  6897 ;;Total ram usage:        8 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    4
  6900 ;; This function calls:
  6901 ;;		_delay_interrupt_service
  6902 ;;		_serialport_service
  6903 ;; This function is called by:
  6904 ;;		Interrupt level 2
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908 ;; *************** function interrupts@isr_high *****************
  6909 ;; Defined at:
  6910 ;;		line 14 in file "src/interrupts.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: FFFFFFF0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6924 ;;      Params:         0       0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0
  6926 ;;      Temps:          0       8       0       0       0       0       0
  6927 ;;      Totals:         0       8       0       0       0       0       0
  6928 ;;Total ram usage:        8 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    4
  6931 ;; This function calls:
  6932 ;;		_delay_interrupt_service
  6933 ;;		_serialport_service
  6934 ;; This function is called by:
  6935 ;;		Interrupt level 2
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	intcode
  6940  000008                     __pintcode:
  6941                           	opt stack 0
  6942  000008                     _isr_high:
  6943                           	opt stack 19
  6944                           
  6945                           ; BSR set to: 0
  6946  000008  CFE9 F02A          	movff	fsr0l,??_isr_high
  6947  00000C  CFEA F02B          	movff	fsr0h,??_isr_high+1
  6948  000010  CFD9 F02C          	movff	fsr2l,??_isr_high+2
  6949  000014  CFDA F02D          	movff	fsr2h,??_isr_high+3
  6950  000018  CFF6 F02E          	movff	tblptrl,??_isr_high+4
  6951  00001C  CFF7 F02F          	movff	tblptrh,??_isr_high+5
  6952  000020  CFF8 F030          	movff	tblptru,??_isr_high+6
  6953  000024  CFF5 F031          	movff	tablat,??_isr_high+7
  6954  000028                     
  6955                           ;interrupts.c: 16: if ((INTCONbits.TMR0IF) )
  6956  000028  A4F2               	btfss	intcon,2,c	;volatile
  6957  00002A  D001               	goto	i2u472_41
  6958  00002C  D001               	goto	i2u472_40
  6959  00002E                     i2u472_41:
  6960  00002E  D007               	goto	i2l4831
  6961  000030                     i2u472_40:
  6962  000030                     
  6963                           ;interrupts.c: 17: {
  6964                           ;interrupts.c: 18: delay_interrupt_service();
  6965  000030  EC6E  F009         	call	_delay_interrupt_service	;wreg free
  6966  000034                     
  6967                           ; BSR set to: 0
  6968  000034  94F2               	bcf	intcon,2,c	;volatile
  6969  000036                     
  6970                           ; BSR set to: 0
  6971  000036  0EFE               	movlw	254
  6972  000038  6ED7               	movwf	4055,c	;volatile
  6973  00003A  0E0C               	movlw	12
  6974  00003C  6ED6               	movwf	4054,c	;volatile
  6975  00003E                     i2l4831:
  6976                           
  6977                           ;interrupts.c: 21: }
  6978                           ;interrupts.c: 23: if(PIR1bits.RCIF)
  6979  00003E  AA9E               	btfss	3998,5,c	;volatile
  6980  000040  D001               	goto	i2u473_41
  6981  000042  D001               	goto	i2u473_40
  6982  000044                     i2u473_41:
  6983  000044  D003               	goto	i2l913
  6984  000046                     i2u473_40:
  6985  000046                     
  6986                           ;interrupts.c: 24: {
  6987                           ;interrupts.c: 26: serialport_service();
  6988  000046  EC9E  F008         	call	_serialport_service	;wreg free
  6989  00004A                     
  6990                           ;interrupts.c: 27: PIR1bits.RCIF = 0;
  6991  00004A  9A9E               	bcf	3998,5,c	;volatile
  6992  00004C                     i2l913:
  6993  00004C  C031  FFF5         	movff	??_isr_high+7,tablat
  6994  000050  C030  FFF8         	movff	??_isr_high+6,tblptru
  6995  000054  C02F  FFF7         	movff	??_isr_high+5,tblptrh
  6996  000058  C02E  FFF6         	movff	??_isr_high+4,tblptrl
  6997  00005C  C02D  FFDA         	movff	??_isr_high+3,fsr2h
  6998  000060  C02C  FFD9         	movff	??_isr_high+2,fsr2l
  6999  000064  C02B  FFEA         	movff	??_isr_high+1,fsr0h
  7000  000068  C02A  FFE9         	movff	??_isr_high,fsr0l
  7001  00006C  0011               	retfie		f
  7002  00006E                     __end_of_isr_high:
  7003                           	opt stack 0
  7004  00006E                     interrupts@isr_high:
  7005                           	opt stack 19
  7006                           
  7007                           ; BSR set to: 0
  7008  00006E  CFE9 F07E          	movff	fsr0l,??interrupts@isr_high
  7009  000072  CFEA F07F          	movff	fsr0h,??interrupts@isr_high+1
  7010  000076  CFD9 F080          	movff	fsr2l,??interrupts@isr_high+2
  7011  00007A  CFDA F081          	movff	fsr2h,??interrupts@isr_high+3
  7012  00007E  CFF6 F082          	movff	tblptrl,??interrupts@isr_high+4
  7013  000082  CFF7 F083          	movff	tblptrh,??interrupts@isr_high+5
  7014  000086  CFF8 F084          	movff	tblptru,??interrupts@isr_high+6
  7015  00008A  CFF5 F085          	movff	tablat,??interrupts@isr_high+7
  7016  00008E                     
  7017                           ;interrupts.c: 16: if ((INTCONbits.TMR0IF) )
  7018  00008E  A4F2               	btfss	intcon,2,c	;volatile
  7019  000090  D001               	goto	i2u494_41
  7020  000092  D001               	goto	i2u494_40
  7021  000094                     i2u494_41:
  7022  000094  D007               	goto	i2l4935
  7023  000096                     i2u494_40:
  7024  000096                     
  7025                           ;interrupts.c: 17: {
  7026                           ;interrupts.c: 18: delay_interrupt_service();
  7027  000096  EC6E  F009         	call	_delay_interrupt_service	;wreg free
  7028  00009A                     
  7029                           ; BSR set to: 0
  7030  00009A  94F2               	bcf	intcon,2,c	;volatile
  7031  00009C                     
  7032                           ; BSR set to: 0
  7033  00009C  0EFE               	movlw	254
  7034  00009E  6ED7               	movwf	4055,c	;volatile
  7035  0000A0  0E0C               	movlw	12
  7036  0000A2  6ED6               	movwf	4054,c	;volatile
  7037  0000A4                     i2l4935:
  7038                           
  7039                           ;interrupts.c: 21: }
  7040                           ;interrupts.c: 23: if(PIR1bits.RCIF)
  7041  0000A4  AA9E               	btfss	3998,5,c	;volatile
  7042  0000A6  D001               	goto	i2u495_41
  7043  0000A8  D001               	goto	i2u495_40
  7044  0000AA                     i2u495_41:
  7045  0000AA  D003               	goto	i2l934
  7046  0000AC                     i2u495_40:
  7047  0000AC                     
  7048                           ;interrupts.c: 24: {
  7049                           ;interrupts.c: 26: serialport_service();
  7050  0000AC  EC9E  F008         	call	_serialport_service	;wreg free
  7051  0000B0                     
  7052                           ;interrupts.c: 27: PIR1bits.RCIF = 0;
  7053  0000B0  9A9E               	bcf	3998,5,c	;volatile
  7054  0000B2                     i2l934:
  7055  0000B2  C085  FFF5         	movff	??interrupts@isr_high+7,tablat
  7056  0000B6  C084  FFF8         	movff	??interrupts@isr_high+6,tblptru
  7057  0000BA  C083  FFF7         	movff	??interrupts@isr_high+5,tblptrh
  7058  0000BE  C082  FFF6         	movff	??interrupts@isr_high+4,tblptrl
  7059  0000C2  C081  FFDA         	movff	??interrupts@isr_high+3,fsr2h
  7060  0000C6  C080  FFD9         	movff	??interrupts@isr_high+2,fsr2l
  7061  0000CA  C07F  FFEA         	movff	??interrupts@isr_high+1,fsr0h
  7062  0000CE  C07E  FFE9         	movff	??interrupts@isr_high,fsr0l
  7063  0000D2  0011               	retfie		f
  7064  0000D4                     __end_ofinterrupts@isr_high:
  7065                           	opt stack 0
  7066  0000D4                     tosu	equ	0xFFF
  7067                           tosh	equ	0xFFE
  7068                           tosl	equ	0xFFD
  7069                           pclath	equ	0xFFA
  7070                           tblptru	equ	0xFF8
  7071                           tblptrh	equ	0xFF7
  7072                           tblptrl	equ	0xFF6
  7073                           tablat	equ	0xFF5
  7074                           prodl	equ	0xFF3
  7075                           intcon	equ	0xFF2
  7076                           indf0	equ	0xFEF
  7077                           postinc0	equ	0xFEE
  7078                           fsr0h	equ	0xFEA
  7079                           fsr0l	equ	0xFE9
  7080                           wreg	equ	0xFE8
  7081                           indf1	equ	0xFE7
  7082                           fsr1h	equ	0xFE2
  7083                           fsr1l	equ	0xFE1
  7084                           indf2	equ	0xFDF
  7085                           postinc2	equ	0xFDE
  7086                           postdec2	equ	0xFDD
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091 ;; *************** function _delay_interrupt_service *****************
  7092 ;; Defined at:
  7093 ;;		line 70 in file "src/drivers/delay.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;		None
  7098 ;; Return value:  Size  Location     Type
  7099 ;;		None               void
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : F/0
  7105 ;;		Unchanged: FFFFFFF0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7107 ;;      Params:         0       0       0       0       0       0       0
  7108 ;;      Locals:         0       0       0       0       0       0       0
  7109 ;;      Temps:          0       0       0       0       0       0       0
  7110 ;;      Totals:         0       0       0       0       0       0       0
  7111 ;;Total ram usage:        0 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_isr_high
  7117 ;;		interrupts@isr_high
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text40
  7122  0012DC                     __ptext40:
  7123                           	opt stack 0
  7124  0012DC                     _delay_interrupt_service:
  7125                           	opt stack 22
  7126                           
  7127                           ;delay.c: 71: if(this_delay_timer_ms > 0u) {
  7128  0012DC  0100               	movlb	0	; () banked
  7129  0012DE  51D9               	movf	(_this_delay_timer_ms+1)& (0+255),w,b	;volatile
  7130  0012E0  11D8               	iorwf	_this_delay_timer_ms& (0+255),w,b	;volatile
  7131  0012E2  B4D8               	btfsc	status,2,c
  7132  0012E4  0012               	return	
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;delay.c: 72: this_delay_timer_ms--;
  7136  0012E6  07D8               	decf	_this_delay_timer_ms& (0+255),f,b	;volatile
  7137  0012E8  A0D8               	btfss	status,0,c
  7138  0012EA  07D9               	decf	(_this_delay_timer_ms+1)& (0+255),f,b	;volatile
  7139                           
  7140                           ; BSR set to: 0
  7141  0012EC  0012               	return	
  7142  0012EE                     __end_of_delay_interrupt_service:
  7143                           	opt stack 0
  7144                           tosu	equ	0xFFF
  7145                           tosh	equ	0xFFE
  7146                           tosl	equ	0xFFD
  7147                           pclath	equ	0xFFA
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodl	equ	0xFF3
  7153                           intcon	equ	0xFF2
  7154                           indf0	equ	0xFEF
  7155                           postinc0	equ	0xFEE
  7156                           fsr0h	equ	0xFEA
  7157                           fsr0l	equ	0xFE9
  7158                           wreg	equ	0xFE8
  7159                           indf1	equ	0xFE7
  7160                           fsr1h	equ	0xFE2
  7161                           fsr1l	equ	0xFE1
  7162                           indf2	equ	0xFDF
  7163                           postinc2	equ	0xFDE
  7164                           postdec2	equ	0xFDD
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _serialport_service *****************
  7170 ;; Defined at:
  7171 ;;		line 24 in file "src/modules/serialport.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  byte            1   29[BANK0 ] unsigned char 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;		None               void
  7178 ;; Registers used:
  7179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: FFFFFFF0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7185 ;;      Params:         0       0       0       0       0       0       0
  7186 ;;      Locals:         0       1       0       0       0       0       0
  7187 ;;      Temps:          0       1       0       0       0       0       0
  7188 ;;      Totals:         0       2       0       0       0       0       0
  7189 ;;Total ram usage:        2 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    3
  7192 ;; This function calls:
  7193 ;;		_uart_byte_available
  7194 ;;		_uart_getc
  7195 ;;		i2_rd_buffer_put
  7196 ;; This function is called by:
  7197 ;;		_isr_high
  7198 ;;		interrupts@isr_high
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text41
  7203  00113C                     __ptext41:
  7204                           	opt stack 0
  7205  00113C                     _serialport_service:
  7206                           	opt stack 19
  7207                           
  7208                           ;serialport.c: 25: UINT8 byte;
  7209                           ;serialport.c: 26: if (uart_byte_available()) {
  7210                           
  7211                           ; BSR set to: 0
  7212  00113C  EC98  F009         	call	_uart_byte_available	;wreg free
  7213  001140  0900               	iorlw	0
  7214  001142  B4D8               	btfsc	status,2,c
  7215  001144  0012               	return	
  7216                           
  7217                           ;serialport.c: 27: if (uart_getc(&byte) == RESULT_SUCCESS) {
  7218  001146  0100               	movlb	0	; () banked
  7219  001148  0E7D               	movlw	serialport_service@byte& (0+255)
  7220  00114A  ECD1  F008         	call	_uart_getc
  7221  00114E  6F7C               	movwf	??_serialport_service& (0+255),b
  7222  001150  057C               	decf	??_serialport_service& (0+255),w,b
  7223  001152  A4D8               	btfss	status,2,c
  7224  001154  0012               	return	
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;serialport.c: 28: rd_buffer_put(&g_rx_buffer, &byte);
  7228  001156  0E01               	movlw	high _g_rx_buffer
  7229  001158  6E33               	movwf	?i2_rd_buffer_put+1,c
  7230  00115A  0E00               	movlw	low _g_rx_buffer
  7231  00115C  6E32               	movwf	?i2_rd_buffer_put,c
  7232  00115E  0100               	movlb	0	; () banked
  7233  001160  0E00               	movlw	high serialport_service@byte
  7234  001162  6E35               	movwf	?i2_rd_buffer_put+3,c
  7235  001164  0E7D               	movlw	low serialport_service@byte
  7236  001166  6E34               	movwf	?i2_rd_buffer_put+2,c
  7237  001168  ECE6  F002         	call	i2_rd_buffer_put	;wreg free
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;serialport.c: 29: pool |= 1<<(5);
  7241  00116C  8BB6               	bsf	_pool& (0+255),5,b	;volatile
  7242  00116E  0012               	return	
  7243  001170                     __end_of_serialport_service:
  7244                           	opt stack 0
  7245                           tosu	equ	0xFFF
  7246                           tosh	equ	0xFFE
  7247                           tosl	equ	0xFFD
  7248                           pclath	equ	0xFFA
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodl	equ	0xFF3
  7254                           intcon	equ	0xFF2
  7255                           indf0	equ	0xFEF
  7256                           postinc0	equ	0xFEE
  7257                           fsr0h	equ	0xFEA
  7258                           fsr0l	equ	0xFE9
  7259                           wreg	equ	0xFE8
  7260                           indf1	equ	0xFE7
  7261                           fsr1h	equ	0xFE2
  7262                           fsr1l	equ	0xFE1
  7263                           indf2	equ	0xFDF
  7264                           postinc2	equ	0xFDE
  7265                           postdec2	equ	0xFDD
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _uart_getc *****************
  7271 ;; Defined at:
  7272 ;;		line 56 in file "src/drivers/uart.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  pbyte           1    wreg     PTR unsigned char 
  7275 ;;		 -> serialport_service@byte(1), 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  pbyte           1   13[COMRAM] PTR unsigned char 
  7278 ;;		 -> serialport_service@byte(1), 
  7279 ;;  result          1   14[COMRAM] enum E3388
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      enum E3388
  7282 ;; Registers used:
  7283 ;;		wreg, fsr2l, fsr2h, status,2, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : F/0
  7286 ;;		On exit  : F/0
  7287 ;;		Unchanged: FFFFFFF0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7289 ;;      Params:         0       0       0       0       0       0       0
  7290 ;;      Locals:         2       0       0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0
  7292 ;;      Totals:         2       0       0       0       0       0       0
  7293 ;;Total ram usage:        2 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    2
  7296 ;; This function calls:
  7297 ;;		_uart_error
  7298 ;;		_uart_reset
  7299 ;;		_uart_byte_available
  7300 ;; This function is called by:
  7301 ;;		_serialport_service
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text42
  7306  0011A2                     __ptext42:
  7307                           	opt stack 0
  7308  0011A2                     _uart_getc:
  7309                           	opt stack 19
  7310                           
  7311                           ;uart_getc@pbyte stored from wreg
  7312  0011A2  CFE8 F033          	movff	wreg,uart_getc@pbyte
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;uart.c: 57: ResultSuccess_t result = RESULT_FAIL;
  7316  0011A6  6A34               	clrf	uart_getc@result,c
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;uart.c: 58: if ( uart_error())
  7320  0011A8  EC7F  F009         	call	_uart_error	;wreg free
  7321  0011AC  0900               	iorlw	0
  7322  0011AE  E003               	bz	i2l4907
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;uart.c: 59: {
  7326                           ;uart.c: 60: uart_reset();
  7327  0011B0  EC20  F009         	call	_uart_reset	;wreg free
  7328                           
  7329                           ;uart.c: 61: }
  7330  0011B4  D00C               	goto	i2l4915
  7331  0011B6                     i2l4907:
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;uart.c: 62: else
  7335                           ;uart.c: 63: if( uart_byte_available() )
  7336  0011B6  EC98  F009         	call	_uart_byte_available	;wreg free
  7337  0011BA  0900               	iorlw	0
  7338  0011BC  E008               	bz	i2l4915
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;uart.c: 64: {
  7342                           ;uart.c: 65: *pbyte = RCREG;
  7343  0011BE  5033               	movf	uart_getc@pbyte,w,c
  7344  0011C0  6ED9               	movwf	fsr2l,c
  7345  0011C2  6ADA               	clrf	fsr2h,c
  7346  0011C4  CFAE FFDF          	movff	4014,indf2	;volatile
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;uart.c: 66: RCIF = 0;
  7350  0011C8  9A9E               	bcf	3998,5,c	;volatile
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;uart.c: 67: result = RESULT_SUCCESS;
  7354  0011CA  0E01               	movlw	1
  7355  0011CC  6E34               	movwf	uart_getc@result,c
  7356  0011CE                     i2l4915:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;uart.c: 68: }
  7360                           ;uart.c: 69: return result;
  7361  0011CE  5034               	movf	uart_getc@result,w,c
  7362                           
  7363                           ; BSR set to: 0
  7364  0011D0  0012               	return	
  7365  0011D2                     __end_of_uart_getc:
  7366                           	opt stack 0
  7367                           tosu	equ	0xFFF
  7368                           tosh	equ	0xFFE
  7369                           tosl	equ	0xFFD
  7370                           pclath	equ	0xFFA
  7371                           tblptru	equ	0xFF8
  7372                           tblptrh	equ	0xFF7
  7373                           tblptrl	equ	0xFF6
  7374                           tablat	equ	0xFF5
  7375                           prodl	equ	0xFF3
  7376                           intcon	equ	0xFF2
  7377                           indf0	equ	0xFEF
  7378                           postinc0	equ	0xFEE
  7379                           fsr0h	equ	0xFEA
  7380                           fsr0l	equ	0xFE9
  7381                           wreg	equ	0xFE8
  7382                           indf1	equ	0xFE7
  7383                           fsr1h	equ	0xFE2
  7384                           fsr1l	equ	0xFE1
  7385                           indf2	equ	0xFDF
  7386                           postinc2	equ	0xFDE
  7387                           postdec2	equ	0xFDD
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _uart_reset *****************
  7393 ;; Defined at:
  7394 ;;		line 73 in file "src/drivers/uart.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;		None               void
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : F/0
  7405 ;;		On exit  : F/0
  7406 ;;		Unchanged: FFFFFFF0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7408 ;;      Params:         0       0       0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    1
  7415 ;; This function calls:
  7416 ;;		_uart_byte_available
  7417 ;;		_uart_error
  7418 ;; This function is called by:
  7419 ;;		_uart_getc
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text43
  7424  001240                     __ptext43:
  7425                           	opt stack 0
  7426  001240                     _uart_reset:
  7427                           	opt stack 19
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;uart.c: 74: while(uart_error() )
  7431                           
  7432                           ; BSR set to: 0
  7433  001240  D008               	goto	i2l4899
  7434  001242                     i2l169:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;uart.c: 75: {
  7438                           ;uart.c: 76: CREN = 0;
  7439  001242  98AB               	bcf	4011,4,c	;volatile
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;uart.c: 77: RCREG;
  7443  001244  50AE               	movf	4014,w,c	;volatile
  7444                           
  7445                           ;uart.c: 78: RCREG;
  7446  001246  50AE               	movf	4014,w,c	;volatile
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;uart.c: 79: CREN = 1;
  7450  001248  88AB               	bsf	4011,4,c	;volatile
  7451  00124A                     i2l4897:
  7452                           
  7453                           ; BSR set to: 0
  7454  00124A  EC98  F009         	call	_uart_byte_available	;wreg free
  7455  00124E  0900               	iorlw	0
  7456  001250  E1FC               	bnz	i2l4897
  7457  001252                     i2l4899:
  7458                           
  7459                           ; BSR set to: 0
  7460  001252  EC7F  F009         	call	_uart_error	;wreg free
  7461  001256  0900               	iorlw	0
  7462  001258  B4D8               	btfsc	status,2,c
  7463  00125A  0012               	return	
  7464  00125C  D7F2               	goto	i2l169
  7465  00125E                     __end_of_uart_reset:
  7466                           	opt stack 0
  7467                           tosu	equ	0xFFF
  7468                           tosh	equ	0xFFE
  7469                           tosl	equ	0xFFD
  7470                           pclath	equ	0xFFA
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodl	equ	0xFF3
  7476                           intcon	equ	0xFF2
  7477                           indf0	equ	0xFEF
  7478                           postinc0	equ	0xFEE
  7479                           fsr0h	equ	0xFEA
  7480                           fsr0l	equ	0xFE9
  7481                           wreg	equ	0xFE8
  7482                           indf1	equ	0xFE7
  7483                           fsr1h	equ	0xFE2
  7484                           fsr1l	equ	0xFE1
  7485                           indf2	equ	0xFDF
  7486                           postinc2	equ	0xFDE
  7487                           postdec2	equ	0xFDD
  7488                           fsr2h	equ	0xFDA
  7489                           fsr2l	equ	0xFD9
  7490                           status	equ	0xFD8
  7491                           
  7492 ;; *************** function _uart_byte_available *****************
  7493 ;; Defined at:
  7494 ;;		line 52 in file "src/drivers/uart.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      unsigned char 
  7501 ;; Registers used:
  7502 ;;		wreg
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: FFFFFFFF/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7508 ;;      Params:         0       0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_uart_getc
  7518 ;;		_uart_reset
  7519 ;;		_serialport_service
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text44
  7524  001330                     __ptext44:
  7525                           	opt stack 0
  7526  001330                     _uart_byte_available:
  7527                           	opt stack 20
  7528                           
  7529                           ;uart.c: 53: return RC1IF;
  7530                           
  7531                           ; BSR set to: 0
  7532  001330  0E00               	movlw	0
  7533  001332  BA9E               	btfsc	3998,5,c	;volatile
  7534  001334  0E01               	movlw	1
  7535  001336  0012               	return	
  7536  001338                     __end_of_uart_byte_available:
  7537                           	opt stack 0
  7538                           tosu	equ	0xFFF
  7539                           tosh	equ	0xFFE
  7540                           tosl	equ	0xFFD
  7541                           pclath	equ	0xFFA
  7542                           tblptru	equ	0xFF8
  7543                           tblptrh	equ	0xFF7
  7544                           tblptrl	equ	0xFF6
  7545                           tablat	equ	0xFF5
  7546                           prodl	equ	0xFF3
  7547                           intcon	equ	0xFF2
  7548                           indf0	equ	0xFEF
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           indf1	equ	0xFE7
  7554                           fsr1h	equ	0xFE2
  7555                           fsr1l	equ	0xFE1
  7556                           indf2	equ	0xFDF
  7557                           postinc2	equ	0xFDE
  7558                           postdec2	equ	0xFDD
  7559                           fsr2h	equ	0xFDA
  7560                           fsr2l	equ	0xFD9
  7561                           status	equ	0xFD8
  7562                           
  7563 ;; *************** function _uart_error *****************
  7564 ;; Defined at:
  7565 ;;		line 85 in file "src/drivers/uart.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      unsigned char 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2
  7574 ;; Tracked objects:
  7575 ;;		On entry : F/0
  7576 ;;		On exit  : F/0
  7577 ;;		Unchanged: FFFFFFF0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7579 ;;      Params:         0       0       0       0       0       0       0
  7580 ;;      Locals:         1       0       0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0
  7582 ;;      Totals:         1       0       0       0       0       0       0
  7583 ;;Total ram usage:        1 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_uart_getc
  7589 ;;		_uart_reset
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text45
  7594  0012FE                     __ptext45:
  7595                           	opt stack 0
  7596  0012FE                     _uart_error:
  7597                           	opt stack 19
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;uart.c: 86: return RCSTAbits.OERR || RCSTAbits.FERR ;
  7601  0012FE  0E01               	movlw	1
  7602  001300  6E32               	movwf	_uart_error$257,c
  7603                           
  7604                           ; BSR set to: 0
  7605  001302  A2AB               	btfss	4011,1,c	;volatile
  7606                           
  7607                           ; BSR set to: 0
  7608  001304  B4AB               	btfsc	4011,2,c	;volatile
  7609  001306  D001               	goto	i2l4639
  7610                           
  7611                           ; BSR set to: 0
  7612  001308  6A32               	clrf	_uart_error$257,c
  7613  00130A                     i2l4639:
  7614                           
  7615                           ; BSR set to: 0
  7616  00130A  5032               	movf	_uart_error$257,w,c
  7617                           
  7618                           ; BSR set to: 0
  7619  00130C  0012               	return	
  7620  00130E                     __end_of_uart_error:
  7621                           	opt stack 0
  7622                           tosu	equ	0xFFF
  7623                           tosh	equ	0xFFE
  7624                           tosl	equ	0xFFD
  7625                           pclath	equ	0xFFA
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodl	equ	0xFF3
  7631                           intcon	equ	0xFF2
  7632                           indf0	equ	0xFEF
  7633                           postinc0	equ	0xFEE
  7634                           fsr0h	equ	0xFEA
  7635                           fsr0l	equ	0xFE9
  7636                           wreg	equ	0xFE8
  7637                           indf1	equ	0xFE7
  7638                           fsr1h	equ	0xFE2
  7639                           fsr1l	equ	0xFE1
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647 ;; *************** function i2_rd_buffer_put *****************
  7648 ;; Defined at:
  7649 ;;		line 148 in file "src/modules/rd_buffer.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  rd_buffer_pu    2   12[COMRAM] PTR struct .
  7652 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  7653 ;;  rd_buffer_pu    2   14[COMRAM] PTR unsigned char 
  7654 ;;		 -> STR_4(6), STR_3(6), STR_2(5), STR_1(5), 
  7655 ;;		 -> parameter_text(127), putch@byte(1), serialport_service@byte(1), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  rd_buffer_pu    2   26[BANK0 ] int 
  7658 ;;  rd_buffer_pu    2   24[BANK0 ] int 
  7659 ;;  rd_buffer_pu    2   21[BANK0 ] PTR volatile unsigned ch
  7660 ;;		 -> g_tx_buffer(107), g_rx_buffer(107), 
  7661 ;;  rd_buffer_pu    1   23[BANK0 ] unsigned char 
  7662 ;;  rd_buffer_pu    1    0        unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7667 ;; Tracked objects:
  7668 ;;		On entry : F/0
  7669 ;;		On exit  : F/0
  7670 ;;		Unchanged: FFFFFFF0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7672 ;;      Params:         4       0       0       0       0       0       0
  7673 ;;      Locals:         0       8       0       0       0       0       0
  7674 ;;      Temps:          0       5       0       0       0       0       0
  7675 ;;      Totals:         4      13       0       0       0       0       0
  7676 ;;Total ram usage:       17 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_serialport_service
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text46
  7686  0005CC                     __ptext46:
  7687                           	opt stack 0
  7688  0005CC                     i2_rd_buffer_put:
  7689                           	opt stack 21
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;rd_buffer.c: 150: SIZE sz ;
  7693                           ;rd_buffer.c: 151: sz = pbuffer->head.last - pbuffer->head.first;
  7694                           
  7695                           ; BSR set to: 0
  7696                           
  7697                           ; BSR set to: 0
  7698  0005CC  EE20 F002          	lfsr	2,2
  7699  0005D0  5032               	movf	i2rd_buffer_put@pbuffer,w,c
  7700  0005D2  26D9               	addwf	fsr2l,f,c
  7701  0005D4  5033               	movf	i2rd_buffer_put@pbuffer+1,w,c
  7702  0005D6  22DA               	addwfc	fsr2h,f,c
  7703  0005D8  CFDE F06F          	movff	postinc2,??i2_rd_buffer_put
  7704  0005DC  CFDD F070          	movff	postdec2,??i2_rd_buffer_put+1
  7705  0005E0  C032  FFD9         	movff	i2rd_buffer_put@pbuffer,fsr2l
  7706  0005E4  C033  FFDA         	movff	i2rd_buffer_put@pbuffer+1,fsr2h
  7707  0005E8  CFDE F071          	movff	postinc2,??i2_rd_buffer_put+2
  7708  0005EC  CFDD F072          	movff	postdec2,??i2_rd_buffer_put+3
  7709  0005F0  516F               	movf	??i2_rd_buffer_put& (0+255),w,b
  7710  0005F2  5D71               	subwf	(??i2_rd_buffer_put+2)& (0+255),w,b
  7711  0005F4  6F78               	movwf	i2rd_buffer_put@sz& (0+255),b
  7712  0005F6  5170               	movf	(??i2_rd_buffer_put+1)& (0+255),w,b
  7713  0005F8  5972               	subwfb	(??i2_rd_buffer_put+3)& (0+255),w,b
  7714  0005FA  6F79               	movwf	(i2rd_buffer_put@sz+1)& (0+255),b
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;rd_buffer.c: 152: this_contains_crlf |= (((CHAR)*prec) == '\n') || (((CHAR)*prec) == '\
      +                          r');
  7718  0005FC  0E01               	movlw	1
  7719  0005FE  6F77               	movwf	i2_rd_buffer_put$462& (0+255),b
  7720                           
  7721                           ; BSR set to: 0
  7722  000600  5034               	movf	i2rd_buffer_put@prec,w,c
  7723  000602  6EF6               	movwf	tblptrl,c
  7724  000604  6EE9               	movwf	fsr0l,c
  7725  000606  0E05               	movlw	(high __ramtop+-1)
  7726  000608  6EEA               	movwf	fsr0h,c
  7727  00060A  5035               	movf	i2rd_buffer_put@prec+1,w,c
  7728  00060C  64EA               	cpfsgt	fsr0h,c
  7729  00060E  D003               	bra	i2u480_47
  7730  000610  6EEA               	movwf	fsr0h,c
  7731  000612  50EF               	movf	indf0,w,c
  7732  000614  D003               	bra	i2u480_40
  7733  000616                     i2u480_47:
  7734  000616  6EF7               	movwf	tblptrh,c
  7735  000618  0008               	tblrd		*
  7736  00061A  50F5               	movf	tablat,w,c
  7737  00061C                     i2u480_40:
  7738  00061C  0A0A               	xorlw	10
  7739  00061E  E012               	bz	i2l4867
  7740  000620  5034               	movf	i2rd_buffer_put@prec,w,c
  7741  000622  6EF6               	movwf	tblptrl,c
  7742  000624  6EE9               	movwf	fsr0l,c
  7743  000626  0E05               	movlw	(high __ramtop+-1)
  7744  000628  6EEA               	movwf	fsr0h,c
  7745  00062A  5035               	movf	i2rd_buffer_put@prec+1,w,c
  7746  00062C  64EA               	cpfsgt	fsr0h,c
  7747  00062E  D003               	bra	i2u482_47
  7748  000630  6EEA               	movwf	fsr0h,c
  7749  000632  50EF               	movf	indf0,w,c
  7750  000634  D003               	bra	i2u482_40
  7751  000636                     i2u482_47:
  7752  000636  6EF7               	movwf	tblptrh,c
  7753  000638  0008               	tblrd		*
  7754  00063A  50F5               	movf	tablat,w,c
  7755  00063C                     i2u482_40:
  7756  00063C  0A0D               	xorlw	13
  7757  00063E  E002               	bz	i2l4867
  7758  000640  0100               	movlb	0	; () banked
  7759  000642  6B77               	clrf	i2_rd_buffer_put$462& (0+255),b
  7760  000644                     i2l4867:
  7761  000644  0100               	movlb	0	; () banked
  7762  000646  5177               	movf	i2_rd_buffer_put$462& (0+255),w,b
  7763  000648  13B8               	iorwf	_this_contains_crlf& (0+255),f,b
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;rd_buffer.c: 154: if(sz < 0 ) {
  7767  00064A  AF79               	btfss	(i2rd_buffer_put@sz+1)& (0+255),7,b
  7768  00064C  D00A               	goto	i2l283
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;rd_buffer.c: 155: sz += pbuffer->head.size;
  7772  00064E  EE20 F004          	lfsr	2,4
  7773  000652  5032               	movf	i2rd_buffer_put@pbuffer,w,c
  7774  000654  26D9               	addwf	fsr2l,f,c
  7775  000656  5033               	movf	i2rd_buffer_put@pbuffer+1,w,c
  7776  000658  22DA               	addwfc	fsr2h,f,c
  7777  00065A  50DE               	movf	postinc2,w,c
  7778  00065C  2778               	addwf	i2rd_buffer_put@sz& (0+255),f,b
  7779  00065E  50DD               	movf	postdec2,w,c
  7780  000660  2379               	addwfc	(i2rd_buffer_put@sz+1)& (0+255),f,b
  7781  000662                     i2l283:
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;rd_buffer.c: 156: }
  7785                           ;rd_buffer.c: 157: if(sz < (pbuffer->head.size - 1))
  7786  000662  EE20 F004          	lfsr	2,4
  7787  000666  5032               	movf	i2rd_buffer_put@pbuffer,w,c
  7788  000668  26D9               	addwf	fsr2l,f,c
  7789  00066A  5033               	movf	i2rd_buffer_put@pbuffer+1,w,c
  7790  00066C  22DA               	addwfc	fsr2h,f,c
  7791  00066E  CFDE F06F          	movff	postinc2,??i2_rd_buffer_put
  7792  000672  CFDD F070          	movff	postdec2,??i2_rd_buffer_put+1
  7793  000676  0EFF               	movlw	255
  7794  000678  256F               	addwf	??i2_rd_buffer_put& (0+255),w,b
  7795  00067A  6F71               	movwf	(??i2_rd_buffer_put+2)& (0+255),b
  7796  00067C  0EFF               	movlw	255
  7797  00067E  2170               	addwfc	(??i2_rd_buffer_put+1)& (0+255),w,b
  7798  000680  6F72               	movwf	(??i2_rd_buffer_put+3)& (0+255),b
  7799  000682  5179               	movf	(i2rd_buffer_put@sz+1)& (0+255),w,b
  7800  000684  0A80               	xorlw	128
  7801  000686  6F73               	movwf	(??i2_rd_buffer_put+4)& (0+255),b
  7802  000688  5171               	movf	(??i2_rd_buffer_put+2)& (0+255),w,b
  7803  00068A  5D78               	subwf	i2rd_buffer_put@sz& (0+255),w,b
  7804  00068C  5172               	movf	(??i2_rd_buffer_put+3)& (0+255),w,b
  7805  00068E  0A80               	xorlw	128
  7806  000690  5973               	subwfb	(??i2_rd_buffer_put+4)& (0+255),w,b
  7807  000692  B0D8               	btfsc	status,0,c
  7808  000694  0012               	return	
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;rd_buffer.c: 158: {
  7812                           ;rd_buffer.c: 159: INT ind = pbuffer->head.last;
  7813  000696  C032  FFD9         	movff	i2rd_buffer_put@pbuffer,fsr2l
  7814  00069A  C033  FFDA         	movff	i2rd_buffer_put@pbuffer+1,fsr2h
  7815  00069E  CFDE F07A          	movff	postinc2,i2rd_buffer_put@ind
  7816  0006A2  CFDD F07B          	movff	postdec2,i2rd_buffer_put@ind+1
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;rd_buffer.c: 160: volatile UINT8 *mes_rec=(volatile UINT8*)&pbuffer->list[ind];
  7820  0006A6  C032  F06F         	movff	i2rd_buffer_put@pbuffer,??i2_rd_buffer_put
  7821  0006AA  C033  F070         	movff	i2rd_buffer_put@pbuffer+1,??i2_rd_buffer_put+1
  7822  0006AE  517A               	movf	i2rd_buffer_put@ind& (0+255),w,b
  7823  0006B0  276F               	addwf	??i2_rd_buffer_put& (0+255),f,b
  7824  0006B2  517B               	movf	(i2rd_buffer_put@ind+1)& (0+255),w,b
  7825  0006B4  2370               	addwfc	(??i2_rd_buffer_put+1)& (0+255),f,b
  7826  0006B6  0E06               	movlw	6
  7827  0006B8  276F               	addwf	??i2_rd_buffer_put& (0+255),f,b
  7828  0006BA  0E00               	movlw	0
  7829  0006BC  2370               	addwfc	(??i2_rd_buffer_put+1)& (0+255),f,b
  7830  0006BE  C06F  F075         	movff	??i2_rd_buffer_put,i2rd_buffer_put@mes_rec
  7831  0006C2  C070  F076         	movff	??i2_rd_buffer_put+1,i2rd_buffer_put@mes_rec+1
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;rd_buffer.c: 161: (*mes_rec) = (*prec);
  7835  0006C6  C034  FFF6         	movff	i2rd_buffer_put@prec,tblptrl
  7836  0006CA  C035  FFF7         	movff	i2rd_buffer_put@prec+1,tblptrh
  7837  0006CE  6AF8               	clrf	tblptru,c
  7838  0006D0  C075  FFD9         	movff	i2rd_buffer_put@mes_rec,fsr2l
  7839  0006D4  C076  FFDA         	movff	i2rd_buffer_put@mes_rec+1,fsr2h
  7840  0006D8  0E05               	movlw	(high __ramtop+-1)
  7841  0006DA  64F7               	cpfsgt	tblptrh,c
  7842  0006DC  D003               	bra	i2u486_47
  7843  0006DE  0008               	tblrd		*
  7844  0006E0  50F5               	movf	tablat,w,c
  7845  0006E2  D005               	bra	i2u486_40
  7846  0006E4                     i2u486_47:
  7847  0006E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7848  0006E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7849  0006EC  50EF               	movf	indf0,w,c
  7850  0006EE                     i2u486_40:
  7851  0006EE  6EDF               	movwf	indf2,c
  7852                           
  7853                           ;rd_buffer.c: 162: ind++;
  7854  0006F0  0100               	movlb	0	; () banked
  7855  0006F2  4B7A               	infsnz	i2rd_buffer_put@ind& (0+255),f,b
  7856  0006F4  2B7B               	incf	(i2rd_buffer_put@ind+1)& (0+255),f,b
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;rd_buffer.c: 164: if(ind == pbuffer->head.size ) {
  7860  0006F6  EE20 F004          	lfsr	2,4
  7861  0006FA  5032               	movf	i2rd_buffer_put@pbuffer,w,c
  7862  0006FC  26D9               	addwf	fsr2l,f,c
  7863  0006FE  5033               	movf	i2rd_buffer_put@pbuffer+1,w,c
  7864  000700  22DA               	addwfc	fsr2h,f,c
  7865  000702  52DE               	movf	postinc2,f,c
  7866  000704  517B               	movf	(i2rd_buffer_put@ind+1)& (0+255),w,b
  7867  000706  18DD               	xorwf	postdec2,w,c
  7868  000708  C07A  FFE8         	movff	i2rd_buffer_put@ind,wreg
  7869  00070C  B4D8               	btfsc	status,2,c
  7870  00070E  18DF               	xorwf	indf2,w,c
  7871  000710  E102               	bnz	i2l4885
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;rd_buffer.c: 165: ind = 0;
  7875  000712  6B7A               	clrf	i2rd_buffer_put@ind& (0+255),b
  7876  000714  6B7B               	clrf	(i2rd_buffer_put@ind+1)& (0+255),b
  7877  000716                     i2l4885:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;rd_buffer.c: 166: }
  7881                           ;rd_buffer.c: 167: pbuffer->head.last = ind;
  7882  000716  C032  FFD9         	movff	i2rd_buffer_put@pbuffer,fsr2l
  7883  00071A  C033  FFDA         	movff	i2rd_buffer_put@pbuffer+1,fsr2h
  7884  00071E  C07A  FFDE         	movff	i2rd_buffer_put@ind,postinc2
  7885  000722  C07B  FFDD         	movff	i2rd_buffer_put@ind+1,postdec2
  7886                           
  7887                           ; BSR set to: 0
  7888                           
  7889                           ; BSR set to: 0
  7890  000726  0012               	return	
  7891  000728                     __end_ofi2_rd_buffer_put:
  7892                           	opt stack 0
  7893                           tosu	equ	0xFFF
  7894                           tosh	equ	0xFFE
  7895                           tosl	equ	0xFFD
  7896                           pclath	equ	0xFFA
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           prodl	equ	0xFF3
  7902                           intcon	equ	0xFF2
  7903                           indf0	equ	0xFEF
  7904                           postinc0	equ	0xFEE
  7905                           fsr0h	equ	0xFEA
  7906                           fsr0l	equ	0xFE9
  7907                           wreg	equ	0xFE8
  7908                           indf1	equ	0xFE7
  7909                           fsr1h	equ	0xFE2
  7910                           fsr1l	equ	0xFE1
  7911                           indf2	equ	0xFDF
  7912                           postinc2	equ	0xFDE
  7913                           postdec2	equ	0xFDD
  7914                           fsr2h	equ	0xFDA
  7915                           fsr2l	equ	0xFD9
  7916                           status	equ	0xFD8
  7917                           tosu	equ	0xFFF
  7918                           tosh	equ	0xFFE
  7919                           tosl	equ	0xFFD
  7920                           pclath	equ	0xFFA
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           prodl	equ	0xFF3
  7926                           intcon	equ	0xFF2
  7927                           indf0	equ	0xFEF
  7928                           postinc0	equ	0xFEE
  7929                           fsr0h	equ	0xFEA
  7930                           fsr0l	equ	0xFE9
  7931                           wreg	equ	0xFE8
  7932                           indf1	equ	0xFE7
  7933                           fsr1h	equ	0xFE2
  7934                           fsr1l	equ	0xFE1
  7935                           indf2	equ	0xFDF
  7936                           postinc2	equ	0xFDE
  7937                           postdec2	equ	0xFDD
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942                           	psect	param0
  7943  0000                     tosu	equ	0xFFF
  7944                           tosh	equ	0xFFE
  7945                           tosl	equ	0xFFD
  7946                           pclath	equ	0xFFA
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodl	equ	0xFF3
  7952                           intcon	equ	0xFF2
  7953                           indf0	equ	0xFEF
  7954                           postinc0	equ	0xFEE
  7955                           fsr0h	equ	0xFEA
  7956                           fsr0l	equ	0xFE9
  7957                           wreg	equ	0xFE8
  7958                           indf1	equ	0xFE7
  7959                           fsr1h	equ	0xFE2
  7960                           fsr1l	equ	0xFE1
  7961                           indf2	equ	0xFDF
  7962                           postinc2	equ	0xFDE
  7963                           postdec2	equ	0xFDD
  7964                           fsr2h	equ	0xFDA
  7965                           fsr2l	equ	0xFD9
  7966                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    633
    Data        0
    BSS         1017
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      53
    BANK0           160     64     122
    BANK1           256     41     255
    BANK2           256      0     227
    BANK3           256      0     207
    BANK4           256      0     127
    BANK5           256      0     149

Pointer List with Targets:

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_syntax_get_text	PTR const unsigned char  size(2) Largest target is 127
		 -> parameter_text(BANK3[127]), 

    on_parameter_found@p	PTR const void  size(3) Largest target is 32767
		 -> parameter_text(BANK3[127]), parameter_value(BANK2[127]), ROM(CODE[32767]), 

    ?_string_utils_from_hex	int  size(1) Largest target is 0

    ?_string_utils_strchr	int  size(1) Largest target is 0

    ?_string_utils_split	int  size(1) Largest target is 0

    ?_string_utils_copy	int  size(1) Largest target is 0

    ?_string_utils_strlen	int  size(1) Largest target is 0

    ?_syntax_string	int  size(1) Largest target is 0

    ?_rd_buffer_cnt	int  size(1) Largest target is 0

    events	volatile PTR FTN()void [8] size(2) Largest target is 0
		 -> serialport_task(), 

    sp__syntax_as_bytearray	PTR unsigned char  size(2) Largest target is 127
		 -> parameter_value(BANK2[127]), 

    sp__syntax_get_text	PTR const unsigned char  size(2) Largest target is 127
		 -> parameter_text(BANK3[127]), 

    syntax_string@pchain	PTR unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), 

    syntax_string@pstr	PTR const unsigned char  size(2) Largest target is 100
		 -> serialport_buffer(BANK2[100]), 

    this_parse_parameter@pval	PTR const unsigned char  size(3) Largest target is 32767
		 -> this_buf(BANK4[127]), ROM(CODE[32767]), 

    this_parse_parameter@pvar	PTR const unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), 

    this_parse_parameter@pstr	PTR unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), 

    this_parse_command@pname	PTR const unsigned char  size(2) Largest target is 105
		 -> syx_cmd_list(CODE[105]), 

    this_parse_command@pbuf	PTR unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), 

    this_variable_load_from_text@pval	PTR const unsigned char  size(3) Largest target is 32767
		 -> this_buf(BANK4[127]), ROM(CODE[32767]), 

    string_utils_from_hex@pdata	PTR unsigned char  size(2) Largest target is 127
		 -> parameter_value(BANK2[127]), 

    string_utils_from_hex@phex_str	PTR const unsigned char  size(2) Largest target is 127
		 -> parameter_value(BANK2[127]), 

    string_utils_strncmp@pstr2	PTR const unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), syx_cmd_list(CODE[105]), 

    string_utils_strncmp@pstr1	PTR const unsigned char  size(2) Largest target is 528
		 -> this_buf(BANK4[127]), syx_param_list(CODE[528]), 

    string_utils_strchr@pbuf	PTR const unsigned char  size(3) Largest target is 32767
		 -> this_buf(BANK4[127]), ROM(CODE[32767]), 

    string_utils_split@pbuf	PTR unsigned char  size(2) Largest target is 127
		 -> this_buf(BANK4[127]), 

    string_utils_split@pstr	PTR const unsigned char  size(2) Largest target is 100
		 -> serialport_buffer(BANK2[100]), 

    string_utils_copy@pdst	PTR unsigned char  size(2) Largest target is 127
		 -> parameter_text(BANK3[127]), parameter_value(BANK2[127]), 

    string_utils_copy@psrc	PTR const unsigned char  size(3) Largest target is 32767
		 -> this_buf(BANK4[127]), ROM(CODE[32767]), 

    string_utils_strlen@pstr	PTR const unsigned char  size(2) Largest target is 528
		 -> parameter_value(BANK2[127]), syx_param_list(CODE[528]), serialport_buffer(BANK2[100]), 

    serialport_write@pstr	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[5]), STR_1(CODE[5]), 
		 -> parameter_text(BANK3[127]), 

    S494$callback_function	PTR FTN()void  size(1) Largest target is 0

    timers_list.callback_function	PTR FTN()void  size(1) Largest target is 0

    rd_buffer_getn@prec	PTR unsigned char  size(2) Largest target is 100
		 -> serialport_buffer(BANK2[100]), 

    rd_buffer_getn@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), 

    rd_buffer_put@mes_rec	PTR volatile unsigned char  size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), g_rx_buffer(BANK1[107]), 

    rd_buffer_put@prec	PTR unsigned char  size(2) Largest target is 127
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[5]), STR_1(CODE[5]), 
		 -> parameter_text(BANK3[127]), putch@byte(COMRAM[1]), serialport_service@byte(BANK0[1]), 

    rd_buffer_put@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), g_rx_buffer(BANK1[107]), 

    rd_buffer_get@prec	PTR unsigned char  size(2) Largest target is 100
		 -> serialport_buffer(BANK2[100]), rd_buffer_readline@ch(BANK0[1]), 

    rd_buffer_get@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), g_rx_buffer(BANK1[107]), 

    rd_buffer_cnt@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), 

    rd_buffer_readline@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_rx_buffer(BANK1[107]), 

    rd_buffer_readline@psize	PTR int  size(2) Largest target is 2
		 -> serialport_task@size(BANK1[2]), 

    rd_buffer_readline@pdata	PTR unsigned char  size(2) Largest target is 100
		 -> serialport_buffer(BANK2[100]), 

    rd_buffer_init@pbuffer	PTR struct . size(2) Largest target is 107
		 -> g_tx_buffer(BANK1[107]), g_rx_buffer(BANK1[107]), 

    uart_getc@pbyte	PTR unsigned char  size(1) Largest target is 1
		 -> serialport_service@byte(BANK0[1]), 

    uart_puts@pstr	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> serialport_buffer(BANK2[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr_high in COMRAM

    _serialport_service->i2_rd_buffer_put
    _uart_getc->_uart_error
    _uart_reset->_uart_error
    _serialport_service->i2_rd_buffer_put
    _uart_getc->_uart_error
    _uart_reset->_uart_error

Critical Paths under _main in BANK0

    _rd_buffer_readline->_rd_buffer_get
    _rd_buffer_getn->_rd_buffer_get
    _syntax_string->_on_parameter_found
    _this_parse_command->_string_utils_strncmp
    _string_utils_strncmp->___wmul
    _this_variable_load_from_text->_string_utils_from_hex
    _string_utils_from_hex->_string_utils_strlen
    _string_utils_strlen->___wmul
    _on_parameter_found->_set_parameter
    _on_parameter_found->_get_parameter
    _set_parameter->_serialport_write
    _get_parameter->_serialport_write
    _serialport_write->_rd_buffer_put
    _startup->_serialport_startup
    _sysclk_init->_sysclk_setup_intosc
    _uart_init->_uart_set_baudrate
    _uart_puts->_uart_putc
    _serialport_startup->_rd_buffer_init

Critical Paths under _isr_high in BANK0

    _serialport_service->i2_rd_buffer_put
    interrupts@isr_high->_serialport_service
    _serialport_service->i2_rd_buffer_put

Critical Paths under _main in BANK1

    _main->_serialport_task
    _serialport_task->_syntax_string
    _syntax_string->_this_parse_parameter
    _this_parse_parameter->_this_variable_load_from_text

Critical Paths under _isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19091
                                             39 BANK1      2     2      0
                           _delay_ms
                            _startup
                    _serialport_task
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2      22
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _serialport_task                                      2     2      0   18633
                                             37 BANK1      2     2      0
                 _rd_buffer_readline
                      _syntax_string
                      _rd_buffer_cnt
                     _rd_buffer_getn
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _rd_buffer_readline                                   7     1      6     616
                                             49 BANK0      7     1      6
                      _rd_buffer_get
 ---------------------------------------------------------------------------------
 (2) _rd_buffer_cnt                                        8     6      2     161
                                             38 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _rd_buffer_getn                                       9     3      6     561
                                             49 BANK0      9     3      6
                      _rd_buffer_get
 ---------------------------------------------------------------------------------
 (3) _rd_buffer_get                                       11     7      4     418
                                             38 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (2) _syntax_string                                       14    11      3   16799
                                             23 BANK1     14    11      3
                _string_utils_strlen
                 _string_utils_split
                 _this_parse_command
                 _on_parameter_found
               _this_parse_parameter
                _string_utils_strchr
 ---------------------------------------------------------------------------------
 (3) _string_utils_split                                  13     6      7     654
                                             38 BANK0     13     6      7
 ---------------------------------------------------------------------------------
 (3) _this_parse_command                                  10     8      2    1836
                                             58 BANK0      2     0      2
                                              0 BANK1      8     8      0
                _string_utils_strchr
                             ___wmul
               _string_utils_strncmp
 ---------------------------------------------------------------------------------
 (3) _this_parse_parameter                                17    15      2    5076
                                              6 BANK1     17    15      2
                _string_utils_strchr
                  _string_utils_copy
                             ___wmul
                _string_utils_strlen
               _string_utils_strncmp
       _this_variable_load_from_text
 ---------------------------------------------------------------------------------
 (4) _string_utils_strncmp                                14     7      7     822
                                             44 BANK0     14     7      7
         _string_utils_is_upper_case
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _string_utils_is_upper_case                           2     2      0     138
                                             38 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _this_variable_load_from_text                         6     2      4    1894
                                              0 BANK1      6     2      4
                _string_utils_strchr
                  _string_utils_copy
              _string_utils_from_hex
 ---------------------------------------------------------------------------------
 (5) _string_utils_copy                                    9     2      7     248
                                             38 BANK0      9     2      7
 ---------------------------------------------------------------------------------
 (3) _string_utils_strchr                                 11     7      4     402
                                             38 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (5) _string_utils_from_hex                               13     9      4     986
                                             50 BANK0     13     9      4
                _string_utils_strlen
               _symb_from_hex_to_bin
 ---------------------------------------------------------------------------------
 (6) _string_utils_strlen                                  6     4      2     402
                                             44 BANK0      6     4      2
             _string_utils_is_symbol
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _string_utils_is_symbol                               2     2      0     138
                                             38 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _symb_from_hex_to_bin                                 1     1      0     168
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _on_parameter_found                                   8     2      6    7119
                                             58 BANK0      6     0      6
                                              0 BANK1      1     1      0
                      _set_parameter
                      _get_parameter
                   _serialport_write
 ---------------------------------------------------------------------------------
 (4) _set_parameter                                        2     2      0    2264
                                             57 BANK0      1     1      0
                    _syntax_get_text
                   _serialport_write
 ---------------------------------------------------------------------------------
 (5) _syntax_get_text                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _get_parameter                                        2     2      0    2264
                                             57 BANK0      1     1      0
                   _serialport_write
 ---------------------------------------------------------------------------------
 (4) _serialport_write                                     2     0      2    2069
                                             55 BANK0      2     0      2
                      _rd_buffer_put
                    _syntax_get_text (ARG)
 ---------------------------------------------------------------------------------
 (5) _rd_buffer_put                                       17    13      4    1787
                                             38 BANK0     17    13      4
 ---------------------------------------------------------------------------------
 (1) _startup                                              1     1      0     436
                                             45 BANK0      1     1      0
                          _gpio_init
                        _sysclk_init
                           _adc_init
                          _uart_init
                          _uart_puts
                 _serialport_startup
 ---------------------------------------------------------------------------------
 (2) _sysclk_init                                          0     0      0      22
                _sysclk_setup_intosc
 ---------------------------------------------------------------------------------
 (3) _sysclk_setup_intosc                                  1     1      0      22
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
                  _uart_set_baudrate
 ---------------------------------------------------------------------------------
 (3) _uart_set_baudrate                                    3     0      3       0
                                             38 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            4     0      4     127
                                             39 BANK0      4     0      4
                          _uart_putc
 ---------------------------------------------------------------------------------
 (3) _uart_putc                                            1     1      0      31
                                             38 BANK0      1     1      0
                     _uart_byte_sent
 ---------------------------------------------------------------------------------
 (4) _uart_byte_sent                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialport_startup                                   2     2      0     158
                                             43 BANK0      2     2      0
                     _rd_buffer_init
 ---------------------------------------------------------------------------------
 (3) _rd_buffer_init                                       5     1      4     134
                                             38 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     192
                                             38 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_high                                             8     8      0    3485
                                              4 COMRAM     8     8      0
            _delay_interrupt_service
                 _serialport_service
 ---------------------------------------------------------------------------------
 (9) _delay_interrupt_service                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _serialport_service                                   2     2      0    3485
                                             28 BANK0      2     2      0
                _uart_byte_available
                          _uart_getc
                    i2_rd_buffer_put
 ---------------------------------------------------------------------------------
 (10) _uart_getc                                           2     2      0     370
                                             13 COMRAM     2     2      0
                         _uart_error
                         _uart_reset
                _uart_byte_available
 ---------------------------------------------------------------------------------
 (11) _uart_reset                                          0     0      0     100
                _uart_byte_available
                         _uart_error
 ---------------------------------------------------------------------------------
 (11) _uart_byte_available                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _uart_error                                          1     1      0     100
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_rd_buffer_put                                    17    13      4    2840
                                             12 COMRAM     4     0      4
                                             15 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (8) interrupts@isr_high                                   8     8      0    3485
                                             30 BANK0      8     8      0
            _delay_interrupt_service
                 _serialport_service
 ---------------------------------------------------------------------------------
 (9) _delay_interrupt_service                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _serialport_service                                   2     2      0    3485
                                             28 BANK0      2     2      0
                _uart_byte_available
                          _uart_getc
                    i2_rd_buffer_put
 ---------------------------------------------------------------------------------
 (10) _uart_getc                                           2     2      0     370
                                             13 COMRAM     2     2      0
                         _uart_error
                         _uart_reset
                _uart_byte_available
 ---------------------------------------------------------------------------------
 (11) _uart_reset                                          0     0      0     100
                _uart_byte_available
                         _uart_error
 ---------------------------------------------------------------------------------
 (11) _uart_byte_available                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _uart_error                                          1     1      0     100
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_rd_buffer_put                                    17    13      4    2840
                                             12 COMRAM     4     0      4
                                             15 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _startup
     _gpio_init
     _sysclk_init
       _sysclk_setup_intosc
     _adc_init
     _uart_init
       _uart_set_baudrate
     _uart_puts
       _uart_putc
         _uart_byte_sent
     _serialport_startup
       _rd_buffer_init
   _serialport_task
     _rd_buffer_readline
       _rd_buffer_get
     _syntax_string
       _string_utils_strlen
         _string_utils_is_symbol
         ___wmul (ARG)
       _string_utils_split
       _this_parse_command
         _string_utils_strchr
         ___wmul
         _string_utils_strncmp
           _string_utils_is_upper_case
           ___wmul (ARG)
       _on_parameter_found
         _set_parameter
           _syntax_get_text
           _serialport_write
             _rd_buffer_put
             _syntax_get_text (ARG)
         _get_parameter
           _serialport_write
             _rd_buffer_put
             _syntax_get_text (ARG)
         _serialport_write
           _rd_buffer_put
           _syntax_get_text (ARG)
       _this_parse_parameter
         _string_utils_strchr
         _string_utils_copy
         ___wmul
         _string_utils_strlen
           _string_utils_is_symbol
           ___wmul (ARG)
         _string_utils_strncmp
           _string_utils_is_upper_case
           ___wmul (ARG)
         _this_variable_load_from_text
           _string_utils_strchr
           _string_utils_copy
           _string_utils_from_hex
             _string_utils_strlen
               _string_utils_is_symbol
               ___wmul (ARG)
             _symb_from_hex_to_bin
       _string_utils_strchr
     _rd_buffer_cnt
     _rd_buffer_getn
       _rd_buffer_get
     _uart_puts
       _uart_putc
         _uart_byte_sent

 _isr_high (ROOT)
   _delay_interrupt_service
   _serialport_service
     _uart_byte_available
     _uart_getc
       _uart_error
       _uart_reset
         _uart_byte_available
         _uart_error
       _uart_byte_available
     i2_rd_buffer_put

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0      95      14       58.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      7F      13       49.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CF      11       80.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E3       9       88.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      7A       5       76.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      35       1       55.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      11       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     474      15        0.0%
DATA                 0      0     485       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Mon Oct 12 01:40:29 2015

             ?_delay_interrupt_service 0026                 ??_this_parse_parameter 01DE  
                __end_of_syntax_string 046E                       ?i2_rd_buffer_put 0032  
                  ___wmul@multiplicand 0088               string_utils_from_hex@len 0099  
        string_utils_from_hex@phex_str 0094                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                                    l440 0F8E  
                                  l283 0506                                    l536 08B8  
                                  l643 0B3C                                    l477 097A  
                                  l655 0176                                    l488 1290  
                                  l498 1276                           __CFG_CPB$OFF 000000  
           __size_of_string_utils_copy 0088                           __CFG_CPD$OFF 000000  
                         __CFG_BORV$27 000000                                    tosl 000FFD  
                                  wreg 000FE8                  rd_buffer_getn@pbuffer 0091  
                         __CFG_LVP$OFF 000000                 __end_of_syx_param_list 7F76  
                                 l1451 11D6   __end_of_this_variable_load_from_text 0B60  
__size_of_this_variable_load_from_text 009A           _this_variable_load_from_text 0AC6  
                                 l2631 10FC                                   l5015 0A24  
                                 l5201 0D18                                   l5121 03A8  
                                 l5113 0364                                   l5017 0A28  
                                 l2545 129C                                   l5043 04E8  
                                 l5131 0436                                   l5027 0FE0  
                                 l5061 05BA                                   l5141 0FEC  
                                 l5301 0E10                                   l5125 03DC  
                                 l5215 0D50                                   l5207 0D34  
                                 l5135 045A                                   l5127 03F8  
                                 l5119 0390                                   l5071 1106  
                                 l5145 1006                                   l5305 0E16  
                                 l5401 02AC                                   l5129 0426  
                                 l5315 0E22                                   l5331 0BD2  
                                 l5243 08E6                                   l5403 02B4  
                                 l5219 0D60                                   l5083 0C28  
                                 l5421 1094                                   l5309 0E1C  
                                 l5157 0F48                                   l5325 0B7E  
                                 l5181 0C94                                   l5405 02BA  
                                 l5229 0D76                                   l5077 1128  
                                 l5501 0AA0                                   l5511 11E2  
                                 l5415 1088                                   l5423 10A2  
                                 l5247 092E                                   l5343 0B26  
                                 l5271 0820                                   l5407 02E4  
                                 l5417 108E                                   l5249 0932  
                                 l5193 0D04                                   l5353 074E  
                                 l5347 0B44                                   l5291 08BC  
                                 l5283 08A0                                   l5363 07D8  
                                 l5189 0CD0                                   l5293 08C0  
                                 l5365 07DC                                   l5279 0892  
                                 l5295 08D0                                   l5367 0804  
                                 l5289 08B2                                   l5385 017E  
                                 l5491 0A2E                                   l5485 0DF2  
                                 l5389 01BA                                   l5493 0A3C  
                                 l5495 0A4C                                   _ADIF 007CF6  
                                 l4963 0EA8                                   l4959 0E80  
                                 l4983 1046                                   l4969 12AA  
                                 l4995 107A                                   l4989 105E  
                                 STR_1 7FE5                                   STR_2 7FEA  
                                 STR_3 7FDF                                   STR_4 7FDF  
                                 STR_5 7FEF                                   STR_6 7FF3  
                                 STR_7 7FF7                                   STR_8 7FFB  
                                 _CREN 007D5C                                   _LATC 000F8B  
                                 _LATD 000F8C                                   u5100 04E0  
                                 u5107 04DA                                   u5140 0592  
                                 u5300 0F74                                   u5055 09B4  
                                 u5080 04BE                                   u5147 0588  
                                 u5307 0F6E                                   u5270 102C  
                                 u5087 04B8                                   u5360 0CB8  
                                 u5450 091E                                   u5370 0CF0  
                                 u5540 084C                                   _RCIF 007CF5  
                                 u5277 1026                                   u5550 087C  
                                 u5367 0CAE                                   u5480 0976  
                                 u5457 0914                                   u5377 0CE6  
                                 u5705 01EE                                   u5547 0846  
                                 u5557 0876                                   u5487 096C  
                                 u4960 0E9E                                   u5834 0AB2  
                                 u5835 0AAE                                   u4980 0ED6  
                                 u5828 0A8C                                   u4967 0E98  
                                 u5794 0A5E                                   u4987 0ED0  
                                 u5795 0A5A                                   _TMR0 000FD6  
                                 _TXIF 007CF4         string_utils_is_upper_case@symb 0087  
         __end_of_symb_from_hex_to_bin 0E7E                           __CFG_PWRT$ON 000000  
                     ??_uart_byte_sent 0086            __size_of_string_utils_split 0084  
                     ??_rd_buffer_getn 0097                       ??_rd_buffer_init 008A  
                                 _main 0A2C                                   _pool 00B6  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 indf0 000FEF                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                      rd_buffer_get@last 008C  
                    rd_buffer_get@prec 0088                                   prodl 000FF3  
                      _serialport_task 0BF4                                   start 00D4  
                        __CFG_IESO$OFF 000000                          __CFG_MCLRE$ON 000000  
                  this_parse_command@i 01DC                    i2_rd_buffer_put$462 0077  
                                ?_main 0026                                  _ADRES 000FC3  
                                _ANSEL 000F7E                                  _RC1IF 007CF5  
          this_parse_parameter@var_len 01EB                          __CFG_WDTEN$ON 000000  
                                i2l169 1242                                  i2l283 0662  
                                i2l913 004C                                  i2l934 00B2  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                      rd_buffer_put@prec 0088  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
          this_parse_parameter@str_len 01E4                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
         __size_of_string_utils_strchr 00B0           __size_of_string_utils_strlen 005C  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
           string_utils_is_symbol@symb 0087                            _sysclk_init 1338  
                       __CFG_BOREN$OFF 000000                                  pclath 000FFA  
                                tablat 000FF5                     rd_buffer_get@first 008F  
        ?_this_variable_load_from_text 01D6                                  status 000FD8  
                      __end_of_startup 0E0A                rd_buffer_getn@rec_count 0095  
                     ?_syntax_get_text 0026                       _serialport_write 0FEA  
                       __CFG_HFOFST$ON 000000                        ??_get_parameter 0099  
                   rd_buffer_getn@prec 0093             __end_ofinterrupts@isr_high 00D4  
                      __initialization 0EDE               symb_from_hex_to_bin@symb 0086  
            uart_set_baudrate@baudrate 0086                rd_buffer_readline@pdata 0093  
                         __end_of_main 1294                rd_buffer_readline@psize 0095  
            rd_buffer_readline@pbuffer 0091                this_parse_command@found 01DB  
          __size_of_rd_buffer_readline 0048                this_parse_command@pname 01D8  
                   rd_buffer_init@size 0088                                 ??_main 01FD  
                        __activetblptr 000002           __size_of_uart_byte_available 0008  
       _string_utils_is_upper_case$730 0086                    serialport_task@size 01FB  
                               _ADCON0 000FC2                                 _ADCON1 000FC1  
                               _ADCON2 000FC0                __end_of_serialport_task 0C84  
                               _ANSELH 000F7F                                 _GODONE 007E11  
                     __end_of_adc_init 12CA             __end_of_serialport_service 1170  
                               i2l4639 130A                                 i2l4831 003E  
                               i2l4823 0028                                 i2l4833 0046  
                               i2l4825 0030                                 i2l4931 009A  
                               i2l4915 11CE                                 i2l4907 11B6  
                               i2l4835 004A                                 i2l4827 0034  
                               i2l4933 009C                                 i2l4829 0036  
                               i2l4935 00A4                                 i2l4927 008E  
                               i2l4937 00AC                                 i2l4929 0096  
                               i2l4939 00B0                                 i2l4867 0644  
                               i2l4885 0716                                 i2l4897 124A  
                               i2l4899 1252            string_utils_split@delimeter 008C  
                               _OSCCON 000FD3                  rd_buffer_init@pbuffer 0086  
           __end_of_serialport_startup 11A2                       __end_of_delay_ms 12A6  
             this_parse_parameter@pval 01E6               this_parse_parameter@pvar 01E2  
             this_parse_parameter@pstr 01DC                     _this_parse_command 0728  
                       __CFG_XINST$OFF 000000                      get_parameter@p_id 0026  
        __size_of_string_utils_strncmp 00CA                      set_parameter@p_id 0026  
                               ___wmul 11D2                         __CFG_STVREN$ON 000000  
                  ?_this_parse_command 009A            __end_of_sysclk_setup_intosc 12FE  
                               _events 00A0                                 clear_0 0EE4  
                               clear_1 0EF0                                 clear_2 0EFC  
                               clear_3 0F08                                 clear_4 0F14  
                               clear_5 0F20                                 clear_6 0F2C  
                     __end_of_isr_high 006E                   _symb_from_hex_to_bin 0E0A  
             serialport_startup@result 008C                           _syx_cmd_list 7F76  
                    _serialport_buffer 027F                           __mediumconst 7D66  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                    rd_buffer_get@result 008E  
               __size_of_rd_buffer_get 00A8                 __size_of_rd_buffer_cnt 0052  
               __size_of_rd_buffer_put 015E                              ??_startup 008D  
              string_utils_strchr@pbuf 0086                   ??_this_parse_command 009C  
                           __accesstop 0060                __end_of__initialization 0F32  
                      __CFG_PBADEN$OFF 000000                string_utils_strlen@pstr 008C  
       ??_this_variable_load_from_text 009F                string_utils_strncmp@len 0090  
              string_utils_strncmp@pos 0096                         __pcstackCOMRAM 0026  
                         _cla_detector 00B9                  __end_of_set_parameter 1220  
                ?_symb_from_hex_to_bin 0026                  this_parse_command@len 01D6  
     __size_of_delay_interrupt_service 0012       this_variable_load_from_text@pval 01D6  
          __size_of_on_parameter_found 0044                  _string_utils_from_hex 0B60  
                      __CFG_LPT1OSC$ON 000000                       ?_serialport_task 0026  
                           __pbssBANK0 00A0                             __pbssBANK1 0100  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                        _current_event 00B4                     __size_of_gpio_init 0012  
                  _string_utils_strchr 08D4                    _string_utils_strlen 0F3C  
                        _rd_buffer_get 0984                          _rd_buffer_cnt 0F98  
                        _rd_buffer_put 046E                                ?___wmul 0086  
                              _BAUDCON 000FB8                                _BAUDCTL 000FB8  
               i2rd_buffer_put@mes_rec 0075          __size_of_this_parse_parameter 0212  
               i2rd_buffer_put@pbuffer 0032                              ?_adc_init 0026  
      this_variable_load_from_text@len 01DA               __end_of_serialport_write 1034  
                  syntax_string@chains 01F7                     __size_of_uart_getc 0030  
                   __size_of_uart_init 0020                     __size_of_uart_putc 0012  
                  syntax_string@pchain 01F9                     __size_of_uart_puts 0060  
             __size_ofi2_rd_buffer_put 015C                    syntax_string@result 01F3  
                 ?_string_utils_strchr 0086                              ?_delay_ms 0086  
                 ?_string_utils_strlen 008C                        __CFG_WDTPS$1024 000000  
                           _command_id 00B0                           ?_sysclk_init 0026  
           __end_of_string_utils_split 0D90                      _rd_buffer_put$462 0092  
               __size_of_syntax_string 0184               string_utils_split@chains 008F  
             ??_string_utils_is_symbol 0086                    _uart_byte_available 1330  
                            ?_isr_high 0026                                __Hparam 0000  
                              __Lparam 0000                         ?_rd_buffer_get 0086  
                       ?_rd_buffer_cnt 0086                  this_parse_parameter@i 01E9  
                       ?_rd_buffer_put 0086                        __size_of___wmul 002C  
               ??_symb_from_hex_to_bin 0086                 serialport_service@byte 007D  
                 serialport_write@pstr 0097                                __pcinit 0EDE  
                              __ramtop 0600                             ??_adc_init 0086  
                              __ptext0 0A2C                                __ptext1 1294  
                              __ptext2 0BF4                                __ptext3 1034  
                              __ptext4 0F98                                __ptext5 1100  
                              __ptext6 0984                                __ptext7 02EA  
                              __ptext8 0D0C                                __ptext9 0728  
                    __end_of_gpio_init 12DC                   ?_uart_byte_available 0026  
                   interrupts@isr_high 006E                  ??_string_utils_strchr 008A  
                ??_string_utils_strlen 008E                             ??_delay_ms 0088  
               ?_string_utils_from_hex 0092                                _startup 0D90  
                  ?interrupts@isr_high 0026                   end_of_initialization 0F32  
                    i2rd_buffer_put@sz 0078                          __Lmediumconst 7D66  
                           ??_isr_high 002A                      __end_of_uart_getc 11D2  
                    __end_of_uart_init 1240                      __end_of_uart_putc 12B8  
                    __end_of_uart_puts 0EDE                  __end_of_get_parameter 131C  
                 rd_buffer_get@pbuffer 0086             __end_of_rd_buffer_readline 107C  
                            _RCSTAbits 000FAB                                postdec2 000FDD  
                  _this_case_sensitive 00B7                                postinc0 000FEE  
                              postinc2 000FDE                __size_of_uart_byte_sent 0008  
                   _serialport_service 113C                   rd_buffer_cnt@pbuffer 0086  
             __size_of_syntax_get_text 000C                   ??interrupts@isr_high 007E  
              __size_of_rd_buffer_getn 003C                __size_of_rd_buffer_init 0040  
                        _syntax_string 02EA                     _serialport_startup 1170  
                           _this_alarm 000B                             _uart_error 12FE  
                           _uart_reset 1240           ??_string_utils_is_upper_case 0086  
                ??_uart_byte_available 0032                    ?_serialport_service 0026  
              _delay_interrupt_service 12DC                    ?_serialport_startup 0026  
         __end_of_string_utils_strncmp 08D4                 string_utils_from_hex@i 009D  
               string_utils_from_hex@j 009B                      ??i2_rd_buffer_put 006F  
                 ??_serialport_service 007C        __size_of_string_utils_is_symbol 001C  
                      ??_rd_buffer_get 008A                        ??_rd_buffer_cnt 0088  
                 ??_serialport_startup 008B                        ??_rd_buffer_put 008A  
  __size_of_string_utils_is_upper_case 001A                          startup@result 008D  
                       ?_syntax_string 01ED                          delay_ms@delay 0086  
           this_parse_parameter@result 01E1                         __end_of___wmul 11FE  
                     rd_buffer_put@ind 0095                    start_initialization 0EDE  
            string_utils_strchr@result 008D           __size_of_sysclk_setup_intosc 0010  
                      _parameter_value 0200                      _uart_set_baudrate 133E  
               this_parse_command@pbuf 009A                     ?_uart_set_baudrate 0086  
          __size_of_this_parse_command 00E2                   __size_of_sysclk_init 0006  
         sysclk_setup_intosc@frequency 0086                    ??_uart_set_baudrate 0089  
                    syntax_string@pstr 01ED                   rd_buffer_init@result 008A  
               string_utils_split@pbuf 0086                 string_utils_split@prev 0091  
               string_utils_split@pstr 0088                 string_utils_split@symb 0092  
                             ??___wmul 008A                            ?_uart_error 0026  
                          ?_uart_reset 0026              ??_delay_interrupt_service 0032  
               _string_utils_is_symbol 125E                 string_utils_strchr@pos 008F  
                    ??_syntax_get_text 0086                      ?_serialport_write 0097  
            __end_of_uart_set_baudrate 1344             __end_of_on_parameter_found 10C0  
                    __size_of_adc_init 0012                            __pbssCOMRAM 0001  
                        __pcstackBANK0 0060                          __pcstackBANK1 01D6  
                   ??_serialport_write 0099                    __end_of__stringdata 7FFF  
                      uart_getc@result 0034                   rd_buffer_readline@ch 0097  
                    __size_of_delay_ms 0012           __end_of_this_parse_parameter 02EA  
               __size_of_set_parameter 0022              string_utils_strncmp@pstr1 008C  
            string_utils_strncmp@pstr2 008E              string_utils_strncmp@symb1 0098  
            string_utils_strncmp@symb2 0099                              _g_analog0 0003  
                            _g_analog1 0005                              _g_analog2 0007  
                            __pnvBANK0 00D8                         _uart_error$257 0032  
             __size_of_serialport_task 0090                     fp__serialport_task 00D4  
                   _string_utils_split 0D0C                        ??_syntax_string 01F0  
                    __CFG_CCP2MX$PORTC 000000                      __size_of_isr_high 0066  
                 _string_utils_strncmp 080A                              __pintcode 0008  
                       _uart_byte_sent 1328                          __pmediumconst 7D66  
                       _rd_buffer_getn 1100                         _rd_buffer_init 10C0  
           _string_utils_is_symbol$736 0086     __end_of_string_utils_is_upper_case 1294  
           _string_utils_is_upper_case 127A                    ?_string_utils_split 0086  
              ??_string_utils_from_hex 0096                           _parameter_id 00B2  
                            _gpio_init 12CA                               ?_startup 0026  
                          _g_rx_buffer 0100        __end_of_delay_interrupt_service 12EE  
                 ??_string_utils_split 008D                    __size_of_uart_error 0010  
                  __size_of_uart_reset 001E                            _g_tx_buffer 016B  
                       ___wmul@product 008A                               _PIE1bits 000F9D  
               on_parameter_found@p_id 009B                 __end_of_uart_byte_sent 1330  
               on_parameter_found@type 009F                    _this_delay_timer_ms 00D8  
               __end_of_rd_buffer_getn 113C                 __end_of_rd_buffer_init 1100  
                             _PIR1bits 000F9E                  ?_string_utils_strncmp 008C  
                             i2u480_40 061C                               i2u472_40 0030  
                             i2u472_41 002E                               i2u480_47 0616  
                             i2u473_40 0046                               i2u473_41 0044  
                             i2u482_40 063C                               i2u482_47 0636  
                string_utils_copy@pdst 0086                               i2u494_40 0096  
                             i2u486_40 06EE                               i2u494_41 0094  
                             i2u486_47 06E4                               i2u495_40 00AC  
                             i2u495_41 00AA                  string_utils_copy@psrc 0088  
                 syntax_string@str_len 01F1                              _uart_getc 11A2  
                            _uart_init 1220                              _uart_putc 12A6  
                            _uart_puts 0E7E                     _this_contains_crlf 00B8  
                        _set_parameter 11FE            __end_of_string_utils_strchr 0984  
          __end_of_string_utils_strlen 0F98                   rd_buffer_put@mes_rec 0090  
        __size_of_symb_from_hex_to_bin 0074                             _ADCON0bits 000FC2  
                 rd_buffer_put@pbuffer 0086                            __stringdata 7FDF  
         this_parse_parameter@is_equal 01E0                      ___wmul@multiplier 0086  
                      i2_rd_buffer_put 05CC             __size_of_uart_set_baudrate 0006  
                   _rd_buffer_readline 1034                        rd_buffer_cnt@sz 008C  
                      rd_buffer_getn@i 0098                             ?_gpio_init 0026  
                      rd_buffer_put@sz 0093                    ?_rd_buffer_readline 0091  
                             _i2c_buff 000A                         _parameter_text 0350  
                       _parameter_type 00B5                               __Hparam0 0000  
                  i2rd_buffer_put@prec 0034                            _pd_detector 0500  
                     syntax_string@pos 01F5                               __Lparam0 0000  
                      ?_uart_byte_sent 0026                               _g_CONFIG 000D  
                      ?_rd_buffer_getn 0091                  string_utils_split@len 008A  
                      ?_rd_buffer_init 0086                    _sysclk_setup_intosc 12EE  
                           ?_uart_getc 0026                             ?_uart_init 0026  
          __end_of_uart_byte_available 1338                               _g_STATUS 0001  
                 ??_rd_buffer_readline 0097                             ?_uart_putc 0026  
                           ?_uart_puts 0087            __size_ofinterrupts@isr_high 0066  
                       ?_set_parameter 0026                      ??_serialport_task 00A0  
                 _this_parse_parameter 00D8                               _adc_init 12B8  
                       uart_getc@pbyte 0033                   ?_sysclk_setup_intosc 0026  
           string_utils_from_hex@pdata 0092                      _string_utils_copy 0C84  
                             _delay_ms 1294                 __size_of_get_parameter 000E  
                             __ptext10 00D8                               __ptext11 080A  
                             __ptext20 107C                               __ptext12 127A  
                             __ptext21 11FE                               __ptext13 0AC6  
                             __ptext30 133E                               __ptext22 131C  
                             __ptext14 0C84                               __ptext31 0E7E  
                             __ptext23 130E                               __ptext15 08D4  
                             __ptext40 12DC                               __ptext32 12A6  
                             __ptext24 0FEA                               __ptext16 0B60  
                             __ptext41 113C                               __ptext33 1328  
                             __ptext25 046E                               __ptext17 0F3C  
                             __ptext42 11A2                               __ptext34 12B8  
                             __ptext26 0D90                               __ptext18 125E  
                             __ptext43 1240                               __ptext35 12CA  
                             __ptext27 1338                               __ptext19 0E0A  
                             __ptext44 1330                               __ptext36 1170  
                             __ptext28 12EE                               __ptext45 12FE  
                             __ptext37 10C0                               __ptext29 1220  
                             __ptext46 05CC                               __ptext38 11D2  
                             _bitcount 0009                     ?_string_utils_copy 0086  
                     __size_of_startup 007A            on_parameter_found@operation 01D6  
                        __size_of_main 0868                    ??_string_utils_copy 008D  
          __size_of_serialport_service 0034                               _isr_high 0008  
               ??_string_utils_strncmp 0093            __size_of_serialport_startup 0032  
                __end_of_rd_buffer_get 0A2C                  __end_of_rd_buffer_cnt 0FEA  
                __end_of_rd_buffer_put 05CC            syntax_string@case_sensitive 01EF  
                      _syntax_get_text 131C                               _this_buf 0400  
              __end_ofi2_rd_buffer_put 0728                ?_string_utils_is_symbol 0026  
   string_utils_strncmp@case_sensitive 0092                           ??_uart_error 0032  
                ?_this_parse_parameter 01DC                           ??_uart_reset 0033  
            __end_of_string_utils_copy 0D0C             string_utils_strncmp@result 0095  
                ??_sysclk_setup_intosc 0086                             _INTCONbits 000FF2  
                   i2rd_buffer_put@ind 007A                            ??_gpio_init 0086  
 this_variable_load_from_text@var_type 01D9             __end_of_this_parse_command 080A  
                        ??_sysclk_init 0087               on_parameter_found@cmd_id 009A  
                 string_utils_strlen@i 0090             this_parse_command@is_equal 01DA  
                             intlevel2 0000                     _on_parameter_found 107C  
                   __end_of_uart_error 130E              __size_of_serialport_write 004A  
                   __end_of_uart_reset 125E                           _this_warning 000C  
              string_utils_copy@maxlen 008B                          _get_parameter 130E  
       __end_of_string_utils_is_symbol 127A                        ??_set_parameter 0099  
                  ?_on_parameter_found 009A                string_utils_copy@result 008D  
                          ??_uart_getc 0033                            ??_uart_init 0089  
                          ??_uart_putc 0086                            ??_uart_puts 008B  
          ?_string_utils_is_upper_case 0026                    string_utils_split@i 008D  
       __size_of_string_utils_from_hex 0094          __end_of_string_utils_from_hex 0BF4  
                  on_parameter_found@p 009C                   ??_on_parameter_found 00A0  
         string_utils_strchr@delimeter 0089                            _timers_list 0300  
                       _syx_param_list 7D66                          uart_putc@byte 0086  
              __end_of_syntax_get_text 1328                      __CFG_FOSC$INTIO67 000000  
                 __end_of_syx_cmd_list 7FDF                    __end_of_sysclk_init 133E  
                        uart_puts@size 0089                          uart_puts@pstr 0087  
                       ?_get_parameter 0026  
